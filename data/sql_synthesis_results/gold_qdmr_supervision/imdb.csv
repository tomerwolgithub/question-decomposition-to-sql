example_id,db_id,question,qdmr,sql_gold,sql_ground,denotation_gold,denotation_ground,correct_denotation
IMDB_train_0,imdb,"What year is the movie "" Dead Poets Society "" from ?",return movies; return #1 that is Dead Poets Society; return year of #1,"select movie_0.release_year from movie as movie_0 where movie_0.title = ""Dead Poets Society"" ;",SELECT movie.release_year FROM movie WHERE movie.mid IN ( SELECT movie.mid FROM movie ),"[(1989,)]","[(2012,), (2014,), (2015,), (2005,), (2009,), (2010,), (2010,), (2010,), (2015,), (2014,), (2010,), (2005,), (None,), (2013,), (2011,), (2015,), (2015,), (2007,), (2011,), (2011,), (2005,), (2013,), (2014,), (None,), (2008,), (2020,), (2014,), (2013,), (2016,), (2002,), (2012,), (2004,), (2013,), (2015,), (2009,), (2013,), (2014,), (2008,), (2013,), (2015,), (2008,), (None,), (2015,), (2016,), (2009,), (2014,), (2011,), (2007,), (2009,), (2005,), (2015,), (2013,), (2017,), (2016,), (2014,), (None,), (2016,), (2016,), (2014,), (2016,), (2015,), (2014,), (2015,), (2015,), (2016,), (2014,), (2015,), (None,), (2015,), (2015,), (2015,), (2016,), (1963,), (2014,), (2015,), (2015,), (2015,), (2014,), (2016,), (2013,), (2015,), (2014,), (2015,), (2013,), (2015,), (2008,), (2017,), (2014,), (2013,), (2015,), (2015,), (2014,), (2014,), (2014,), (2014,), (2013,), (2014,), (2013,), (2014,), (2014,), (2015,), (2015,), (2016,), (None,), (2013,), (2016,), (2013,), (2016,), (2016,), (2013,), (2016,), (2012,), (2015,), (2016,), (2015,), (2014,), (2016,), (2015,), (2015,), (2015,), (2016,), (2016,), (2016,), (2016,), (2015,), (2014,), (2014,), (2016,), (2016,), (2011,), (2016,), (2013,), (2016,), (2012,), (2013,), (2013,), (2016,), (2013,), (2016,), (2015,), (None,), (2014,), (2015,), (2016,), (2015,), (2017,), (2016,), (2015,), (2014,), (2015,), (2014,), (2016,), (None,), (2015,), (2015,), (None,), (2015,), (2015,), (2015,), (2013,), (2015,), (2015,), (2015,), (2016,), (2014,), (2015,), (None,), (2014,), (2014,), (2012,), (2011,), (2015,), (2015,), (2014,), (2016,), (2016,), (2015,), (2014,), (2014,), (2016,), (2015,), (None,), (2014,), (2014,), (2015,), (2015,), (2014,), (2015,), (2016,), (2015,), (2014,), (2015,), (2016,), (2014,), (2016,), (2013,), (2015,), (2014,), (2012,), (2016,)]",False
IMDB_train_1,imdb,"What year was "" Ellen Page "" born ?",return Ellen Page; return year born of #1,"select actor_0.birth_year from actor as actor_0 where actor_0.name = ""Ellen Page"" ;",SELECT actor.birth_year FROM actor WHERE actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Ellen Page' ),"[(1987,)]","[(1987,)]",True
IMDB_train_10,imdb,"In what year was "" Kevin Spacey "" born ?",return Kevin Spacey; return year born of #1,"select actor_0.birth_year from actor as actor_0 where actor_0.name = ""Kevin Spacey""",SELECT actor.birth_year FROM actor WHERE actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kevin Spacey' ),"[(1959,)]","[(1959,)]",True
IMDB_train_100,imdb,"How many movies did "" Matt Damon "" direct ?",return movies; return #1 that Matt Damon direct; return number of #2,"select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Matt Damon"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Matt Damon'","[(0,)]","[(0,)]",True
IMDB_train_101,imdb,"How many movies did "" Quentin Tarantino "" direct after 2010 ?",return movies; return #1 that Quentin Tarantino direct; return #2 after 2010; return number of #3,"select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Quentin Tarantino"" and movie_0.release_year  >  2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' AND movie.release_year > 2010","[(2,)]","[(2,)]",True
IMDB_train_102,imdb,"How many movies did "" Quentin Tarantino "" direct before 2010 ?",return movies; return #1 that Quentin Tarantino direct; return #2 before 2010; return number of #3,"select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Quentin Tarantino"" and movie_0.release_year < 2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' AND movie.release_year < 2010","[(12,)]","[(12,)]",True
IMDB_train_103,imdb,"How many movies did "" Quentin Tarantino "" direct before 2002 and after 2010 ?","return movies; return #1 that Quentin Tarantino direct; return #2 before 2002; return #2 after 2010; return #3 , #4; return number of #5","select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where director_0.name = ""Quentin Tarantino"" and movie_0.release_year < 2002 and movie_0.release_year  >  2010 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid","SELECT COUNT(tv_series.title_aka) FROM director, tv_series, movie, directed_by WHERE tv_series.release_year = movie.release_year AND tv_series.sid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' AND ((movie.release_year < 2002) OR (movie.release_year > 2010))","[(0,)]","[(0,)]",True
IMDB_train_104,imdb,"What is the number of movies featuring "" Brad Pitt "" ?",return movies; return #1 featuring Brad Pitt; return number of #2,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Brad Pitt"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.title) FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Brad Pitt'","[(53,)]","[(53,)]",True
IMDB_train_105,imdb,"How many movies did "" Steven Spielberg "" direct ?",return movies; return #1 that Steven Spielberg direct; return number of #2,"select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Steven Spielberg"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Steven Spielberg'","[(49,)]","[(49,)]",True
IMDB_train_106,imdb,How many movies did Netflix produce ?,return movies; return #1 that Netflix produce; return number of #2,"select count(distinct(movie_0.title)) from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = ""Netflix"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM company, copyright, movie WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND company.name = 'Netflix'","[(26,)]","[(26,)]",True
IMDB_train_107,imdb,"How many female actors were born in "" New York City "" after 1980 ?",return actors; return #1 that are female; return #2 born in New York City; return #3 born after 1980; return number of #4,"select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.birth_city = ""New York City"" and actor_0.birth_year  >  1980 and actor_0.gender = ""female"" ;",SELECT COUNT(actor.aid) FROM actor WHERE actor.gender = 'female' AND actor.birth_city = 'New York City' AND actor.birth_year > 1980,"[(247,)]","[(247,)]",True
IMDB_train_108,imdb,"How many actors are in the movie "" Saving Private Ryan "" ?",return the movie Saving Private Ryan; return actors of #1; return number of #2,"select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = ""Saving Private Ryan"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT actor.name) FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Saving Private Ryan' )","[(207,)]","[(207,)]",True
IMDB_train_109,imdb,"How many movies did "" Shahab Hosseini "" act in",return movies; return #1 that Shahab Hosseini act in; return number of #2,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Shahab Hosseini"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(movie.mid) FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Shahab Hosseini'","[(7,)]","[(7,)]",True
IMDB_train_11,imdb,"Where is the birth place of "" Kevin Spacey """,return Kevin Spacey; return birth place of #1,"select director_0.birth_city from director as director_0 where director_0.name = ""Kevin Spacey""",SELECT director.birth_city FROM director WHERE director.name IN ( SELECT director.name FROM director WHERE director.name = 'Kevin Spacey' ),"[('South Orange',)]","[('South Orange',)]",True
IMDB_train_110,imdb,"find the number of actors from Iran who played in "" Jim Jarmusch "" movies",return Jim Jarmusch; return movies of #1; return actors of #2; return #3 from Iran; return number of #4,"select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.nationality = ""Iran"" and director_0.name = ""Jim Jarmusch"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(actor.aid) FROM director, movie, actor, directed_by WHERE director.birth_city = actor.birth_city AND director.did = directed_by.did AND directed_by.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM director, directed_by, movie WHERE director.did = directed_by.did AND directed_by.msid = movie.mid AND director.name IN ( SELECT director.name FROM director WHERE director.name = 'Jim Jarmusch' ) ) AND actor.nationality = 'Iran'","[(0,)]","[(0,)]",True
IMDB_train_111,imdb,"How many companies participated in producing "" Camp X-Ray """,return Camp X-Ray; return companies producing #1; return number of #2,"select count(distinct(company_0.name)) from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = ""Camp X-Ray"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT COUNT(company.id) FROM company, copyright, movie WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Camp X-Ray' )","[(5,)]","[(5,)]",True
IMDB_train_112,imdb,"How many actors from China have acted in "" Rush Hour 3 """,return Rush Hour 3; return actors of #1; return #2 from China; return number of #3,"select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = ""China"" and movie_0.title = ""Rush Hour 3"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(actor.aid) FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Rush Hour 3' ) AND actor.nationality = 'China'","[(3,)]","[(3,)]",True
IMDB_train_113,imdb,"Find the number of companies which worked with "" Gabriele Ferzetti """,return Gabriele Ferzetti; return companies that worked with #1; return number of #2,"select count(distinct(company_0.name)) from actor as actor_0, cast as cast_0, company as company_0, copyright as copyright_0, movie as movie_0 where actor_0.name = ""Gabriele Ferzetti"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT company.id) FROM company, copyright, movie, cast, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND movie.mid = copyright.msid AND copyright.cid = company.id AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Gabriele Ferzetti' )","[(158,)]","[(158,)]",True
IMDB_train_114,imdb,"Find all movies that star both "" Angelina Jolie "" and "" Brad Pitt """,return Angelina Jolie; return movies of #1; return Brad Pitt; return movies of #3; return movies in both #2 and #4,"select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = ""Brad Pitt"" and actor_1.name = ""Angelina Jolie"" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid","SELECT DISTINCT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Angelina Jolie' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Brad Pitt' ) )","[('101 Biggest Celebrity Oops',), ('101 Sexiest Celebrity Bodies',), ('Stars on Trial',), ('The 59th Annual Golden Globe Awards',), ('The 64th Annual Golden Globe Awards',), ('The 66th Annual Golden Globe Awards',), ('The 68th Annual Golden Globe Awards',), ('The 69th Annual Golden Globe Awards',), ('The 69th Annual Golden Globe Awards',), ('The 72nd Annual Academy Awards',), ('The 81st Annual Academy Awards',), ('The 84th Annual Academy Awards',), ('The Oscars',)]","[(3565696,), (3609528,), (2627707,), (3609424,), (3689609,), (3609517,), (2627656,), (3609668,), (3609663,), (3609503,), (3609534,), (3609592,)]",False
IMDB_train_115,imdb,"Find all actors who acted in the same movie as "" Tom Hanks """,return movies; return #1 that Tom Hanks acted in; return actors of #2,"select actor_0.name from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_1.name = ""Tom Hanks"" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid","SELECT actor.name FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.mid IN ( SELECT movie.mid FROM cast, actor, movie WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Tom Hanks' )","[('Sean Astin',), ('Richard Belzer',), ('Dana Carvey',), ('Vance DeGeneres',), ('Bil Dwyer',), ('Chris Farley',), ('Hugh Fink',), ('Tom Hanks',), ('Ice Cube',), ('Steve Koren',), ('Ken Kragen',), ('Adam McKay',), ('Tracy Morgan',), ('Keith Olbermann',), ('Jimmy Pardo',), ('Joe Piscopo',), ('Jeff Probst',), ('Tom Schiller',), ('Marc Shaiman',), ('Pauly Shore',), ('Mitch Silpa',), ('Robert Smigel',), ('Nick Swardson',), ('Guy Torry',), ('Alex Trebek',), ('Jeff Varner',), ('Derek Waters',), ('Matt Weinhold',), ('Walter Williams',), ('Henry Winkler',), (""'Weird Al' Yankovic"",), ('Adrian Zmed',), ('Anne Beatts',), ('Beth Cahill',), ('Susie Castillo',), ('Ellen Cleghorne',), ('Judy Gold',), ('Laurel Holloman',), ('Victoria Jackson',), ('Kathleen Madigan',), ('Rachel Quaintance',), ('Mindy Sterling',), ('Alexandra Wentworth',), (""Anne 'Bud' Beatts"",), ('Betty Cahill',), ('Miss USA 2003',), ('Ellen Cleghorn',), ('Ellen L. Cleghorne',), ('G. Ellen Cleghorne',), ('Cowboy Mouth',), ('Tomu Hankusu',), ('Westside Connection',), (""O'Shea Jackson"",), ('NWA',), ('Ice Cube Nwa',), ('Steven Wayne Koren',), ('Steven Koren',), ('Ken Kragan',), ('Kathy Madigan',), (""Adam 'Ghost Panther' McKay"",), ('Adam Mckay',), ('Aaron Zimmerman',), ('Banksy',), (""Tom 'Bud' Schiller"",), (""Marc 'Marc' Shaiman"",), ('Eugene Shore',), ('Pauley Shore',), ('Triumph The Insult Comic Dog',), ('Triumph the Insult Comic Dog',), ('Robert Smigal',), ('Mindy Stern',), ('Mindy Stirling',), ('Guy Torrey',), ('Alex Trebeck',), ('George Alexander Trebek',), ('Jeff',), ('Ali Wentworth',), ('Mr. Bill',), ('Weird Al',), (""'Weird' Al Yankovic"",), ('Al Yankovic',), ('Weird Al Yankovic',), ('Weird Al Yankovich',), ('Sean Patrick Duke',), ('The Belz',), ('Richard Jay Belzer',), ('Dana Thomas Carvey',), ('Vance Elliott DeGeneres',), ('William Michael Dwyer',), ('Christopher Crosby Farley',), ('Judith H. Gold',), ('Thomas Jeffrey Hanks',), ('Lu',), ('Laurel Lisa Holloman',), ('Cube',), (""O'Shea Jackson"",), ('Kathleen Elizabeth Madigan',), ('Ghost Panther',), ('Tracy Jamal Morgan',), ('The Shooter',), ('Joseph Charles John Piscopo',), ('The One Take Wonder',), ('Jeffrey Lee Probst',), ('The Weasel',), ('Paul Montgomery Shore',), ('Robert M. Smigel',), ('Mindy Lee Sterling',), ('Swardy',), ('Nicholas Swardson',), ('Robert Torry',), ('George Alexander Trebek',), ('Jeffrey Keith Varner',), ('Little Fella',), ('Ali',), ('Dabber',), ('Alexandra Elliott Wentworth',), ('Henry Franklin Winkler',), ('The Weird One',), ('The Boneless Boy',), ('The King of Parody',), ('Alfred Matthew Yankovic',), ('Adrian George Zmed',), ('William Baldwin',), ('Tom Hanks',), ('Will Smith',), ('Billy Baldwin',), ('Tomu Hankusu',), ('The Fresh Prince',), ('DJ Jazzy Jeff and The Fresh Prince',), ('Fresh Prince',), ('Wil Smith',), ('Wiru Sumisu',), ('William Joseph Baldwin',), ('Thomas Jeffrey Hanks',), ('Fresh Prince',), ('Mr. July',), ('Willard Christopher Smith Jr.',), ('Barkhad Abdi',), ('Jensen Ackles',), ('Christian Bale',), ('Daniel Brühl',), ('Chris Buck',), ('Matthew Budman',), ('Asa Butterfield',), ('Henry Cavill',), ('Bradley Cooper',), ('Alfonso Cuarón',), ('Josh Daugherty',), ('Peter Del Vecho',), ('Bruce Dern',), ('Leonardo DiCaprio',), ('Robert Downey Jr.',), ('Chiwetel Ejiofor',), ('Michael Fassbender',), ('James Gandolfini',), ('Jonathan Gordon',), ('Paul Greengrass',), ('Bill Hader',), ('Tom Hanks',), ('Ethan Hawke',), ('Paul Herman',), ('Jonah Hill',), ('Jonah Hill',), ('Liam James',), ('Spike Jonze',), ('Ben Kingsley',), ('Jeremy Kleiner',), ('Jared Leto',), ('Richard Linklater',), ('Robert Lopez',), ('Emmanuel Lubezki',), ('Kellan Lutz',), ('James Marsden',), ('Matthew McConaughey',), ('Steve McQueen',), ('Alessandro Nivola',), ('Jared Padalecki',), ('Simon Pegg',), ('Michael Peña',), ('Brad Pitt',), ('Steven Price',), ('Robert Redford',), ('Jeremy Renner',), ('John Ridley',), ('Sam Rockwell',), ('Charles Roven',), ('David O. Russell',), ('Mark Sanger',), ('Martin Scorsese',), ('Tye Sheridan',), ('Ian Somerhalder',), ('Richard Suckle',), ('Mark Wahlberg',), ('Isaiah Washington',), ('Marlon Wayans',), ('Shea Whigham',), ('Forest Whitaker',), ('Amy Adams',), ('Kristen Anderson-Lopez',), ('Christina Applegate',)]","[('Erik Aadahl',), ('Frank Abagnale Jr.',), ('Bruce Abbott',), ('Joe Abby',), ('Barkhad Abdi',), ('Barkhad Abdi',), ('Barkhad Abdi',), ('Barkhad Abdi',), ('Kareem Abdul-Jabbar',), ('F. Murray Abraham',), ('Lenny Abrahamson',), ('J.J. Abrams',), ('Alê Abreu',), ('Naji Abu Nowar',), ('Hany Abu-Assad',), ('Jose David Acevedo',), ('James Acheson',), ('James Acheson',), ('Brian Ackland-Snow',), ('Brian Ackland-Snow',), ('Jensen Ackles',), ('David Acord',), ('Ken Adam',), ('Bryan Adams',), ('Paul Adams',), ('Rob Adams',), ('Ryil Adamson',), ('Todd Adamson',), ('Niv Adiri',), ('Richard Adler',), ('Richard Adler',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Ben Affleck',), ('Casey Affleck',), ('Evgeny Afineevsky',), ('Danny Aiello',), ('Loclann Aiken',), ('Moustapha Akkad',), ('Joe Alaskey',), ('Rory Albanese',), ('Eddie Albert',), ('Cameron Alborzian',), ('Marco Albrecht',), ('Alan Alda',), ('Alan Alda',), ('Alan Alda',), ('Jason Alexander',), ('Jason Alexander',), ('Markus Alexander',), ('Tim Alexander',), ('Victor Alfieri',), ('Roy Allen III',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Tim Allen',), ('Woody Allen',), ('Woody Allen',), ('Wayne Allwine',), ('Agustín Almodóvar',), ('Pedro Almodóvar',), ('Pedro Almodóvar',), ('Pedro Almodóvar',), ('Pedro Almodóvar',), ('John A. Alonzo',), ('Jon Alpert',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Robert Altman',), ('Alan Altshuld',), ('Tibor Ambra',), ('Don Ameche',), ('Don Ameche',), ('Don Ameche',), ('Karim Amer',), ('Geoffrey Ammer',), ('Franklin Amobi',), ('Trey Anastasio',), ('Paul Thomas Anderson',), ('Peter Anderson',), ('Sam Anderson',), ('Scott E. Anderson',), ('Wes Anderson',), ('Dan Andreiu',), ('Mark Andrews',), ('Martin Angerbauer',), ('Jared Angle',), ('Ken Annakin',), ('Michael Ansara',), ('Aziz Ansari',), ('Aziz Ansari',), ('Joseph Anthony',), ('Konstantine Anthony',), ('Marc Anthony',), ('Marc Anthony',), ('Jim Antonio',), ('Michelangelo Antonioni',), ('Michelangelo Antonioni',), ('Jack Antonoff',), ('Royce D. Applegate',), ('Victor of Aquitaine',), ('Allan Arbus',), ('Allan Arbus',), ('Denys Arcand',), ('Nikolaj Arcel',), ('Sebastian Arcelus',), ('Army Archerd',), ('Army Archerd',), ('Army Archerd',), ('Army Archerd',), ('Carmen Argenziano',), ('Michael Ark',), ('Alan Arkin',), ('Alan Arkin',), ('Alan Arkin',), ('Serena Armitage',), ('Craig Armstrong',), ('Eric Armstrong',), ('Louis Armstrong',), ('Neil Armstrong',), ('Michael Arndt',), ('Stefan Arndt',), ('Will Arnett',), ('Tom Arnold',), ('Darren Aronofsky',), ('Darren Aronofsky',), ('Ian Aronson',), ('Peter Arpesella',), ('David Arquette',), ('David Arquette',), ('David Arquette',), ('David Arquette',), ('Paolo Arrighetti',), ('Michael Arthur',), ('John Ashcroft',), ('Howard Ashman',), ('Bub Asman',), ('Edward Asner',), ('Edward Asner',), ('Fred Asparagus',), ('Armand Assante',), ('Olivier Assayas',), ('Joachim Paul Assböck',), ('Fred Astaire',), ('Sean Astin',), ('Kevin Atherton Laprise',), ('Andrew Atherton',), ('George Atkinson',), ('Abraham Attah',), ('Paul Attanasio',), ('Dave Attell',), ('Yves Aubert',), ('Bille August',), ('Pete Auster',), ('David Austin',), ('Philip Austin',), ('Gene Autry',), ('Roger Avary',), ('James Avery',), ('Marshall Axt',), ('Guy Ayad',), ('Dan Aykroyd',), ('Dan Aykroyd',), ('Dan Aykroyd',), ('Peter Aykroyd',), ('Hank Azaria',), ('Hank Azaria',), ('Hank Azaria',), ('Paul Babeu',), ('Luis Bacalov',), ('Burt Bacharach',), ('Frédéric Back',), ('Joachim Back',), ('Kevin Bacon',), ('Kevin Bacon',)]",True
IMDB_train_116,imdb,"What movies have the same director as the movie "" Revolutionary Road "" ?",return the movie Revolutionary Road; return director of #1; return movies of #2,"select movie_1.title from directed_by as directed_by_0, directed_by as directed_by_1, director as director_0, movie as movie_0, movie as movie_1 where movie_0.title = ""Revolutionary Road"" and directed_by_0.did = director_0.did and directed_by_1.did = director_0.did and directed_by_0.msid = movie_0.mid and directed_by_1.msid = movie_1.mid","SELECT movie.title FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.did IN ( SELECT director.did FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Revolutionary Road' ) )","[('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",), ('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",), ('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",)]","[('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",), ('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",), ('American Beauty',), ('Away We Go',), ('Jarhead',), ('Revolutionary Road',), ('Road to Perdition',), ('Skyfall',), ('Spectre',), (""The Voyeur's Motel"",)]",True
IMDB_train_117,imdb,"Find all movies featuring "" Benedict Cumberbatch "" and "" Keira Knightley """,return Benedict Cumberbatch; return movies of #1; return Keira Knightley; return movies of #3; return movies in both #2 and #4,"select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = ""Keira Knightley"" and actor_1.name = ""Benedict Cumberbatch"" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid","SELECT DISTINCT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Benedict Cumberbatch' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Keira Knightley' ) )","[('72nd Golden Globe Awards',), ('72nd Golden Globe Awards',), ('The 21st Annual Screen Actors Guild Awards',), ('The Oscars',)]","[(2639301,), (3608722,), (3689610,)]",False
IMDB_train_118,imdb,"Find all movies featuring both "" Matt Damon "" and "" Ben Affleck """,return Matt Damon; return movies of #1; return Ben Affleck; return movies of #3; return movies in both #2 and #4,"select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = ""Ben Affleck"" and actor_1.name = ""Matt Damon"" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid","SELECT DISTINCT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Matt Damon' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Ben Affleck' ) )","[('20th Annual Screen Actors Guild Awards',), ('20th Annual Screen Actors Guild Awards',), ('71st Golden Globe Awards',), ('71st Golden Globe Awards',), ('Chasing Amy',), ('Field of Dreams',), ('Good Will Hunting',), ('Jay and Silent Bob Strike Back',), ('Jersey Girl',), ('The 55th Annual Golden Globe Awards',), ('The 56th Annual Golden Globe Awards',), ('The 57th Annual Golden Globe Awards',), ('The 57th Annual Golden Globe Awards',), ('The 70th Annual Academy Awards',), ('The 71st Annual Academy Awards',)]","[(2633230,), (2639246,), (2814319,), (2978748,), (3029474,), (3131713,), (3134608,), (3609395,), (3609403,), (3609411,), (3609586,), (3609590,)]",False
IMDB_train_119,imdb,"What is the maximum number of movies in which "" Brad Pitt "" act in a given year ?",return Bradd Pitt; return movies of #1; return years of #2; return number of #2 for each #3; return highest of #4,"select max(*) from (select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Brad Pitt"" actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year) as subquery ;","SELECT COUNT(movie.mid) FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND COUNT(movie.mid) IN ( SELECT COUNT(movie.mid) FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Brad Pitt' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Brad Pitt' ) ) GROUP BY movie.release_year ) AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Brad Pitt' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Brad Pitt' ) ) ORDER BY actor.birth_year DESC LIMIT 1",,ERROR,False
IMDB_train_12,imdb,"In what city was "" Kevin Spacey "" born ?",return Kevin Spacey; return city #1 was born in,"select director_0.birth_city from director as director_0 where director_0.name = ""Kevin Spacey""",SELECT director.birth_city FROM director WHERE director.name IN ( SELECT director.name FROM director WHERE director.name = 'Kevin Spacey' ),"[('South Orange',)]","[('South Orange',)]",True
IMDB_train_120,imdb,Find the actor with most number of films,return actors; return films of #1; return number of #2 for each #1; return #1 where #3 is highest,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by count(distinct(movie_0.title)) desc limit 1 ;","SELECT producer.nationality FROM producer, actor WHERE producer.birth_year = actor.birth_year AND producer.nationality IN ( SELECT producer.nationality FROM producer ) GROUP BY producer.nationality ORDER BY COUNT(actor.aid) DESC LIMIT 1",,ERROR,False
IMDB_train_121,imdb,"Who acted in the most number of movies directed by "" Jim Jarmusch """,return movies; return #1 directed by Jim Jarmusch; return who acted in #2; return number of #2 for each #3; return #3 where #4 is highest,"select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by count(distinct(movie_0.title)) desc limit 1 ;","SELECT movie.mid FROM directed_by, movie WHERE movie.mid = directed_by.msid AND movie.mid IN ( SELECT movie.mid FROM directed_by, movie WHERE movie.mid = directed_by.msid ) GROUP BY movie.mid ORDER BY COUNT(movie.mid) DESC LIMIT 1",,ERROR,False
IMDB_train_122,imdb,Find the movie which is classified in the most number of genres,return movies; return genres of #1; return the number of #2 for each #1; return #1 where #3 is highest,"select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid group by movie_0.title order by count(distinct(genre_0.genre)) desc limit 1 ;","SELECT movie.mid FROM genre, classification, movie WHERE movie.mid = classification.msid AND classification.gid = genre.gid AND movie.mid IN ( SELECT movie.mid FROM movie ) GROUP BY movie.mid ORDER BY COUNT(genre.gid) DESC LIMIT 1","[('Solo',)]","[(3285788,)]",False
IMDB_train_123,imdb,which movie has the most number of actors from China ?,return actors; return #1 from China; return movies of #2; return the number of #2 for each #3; return #3 where #4 is highest,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = ""China"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.title order by count(distinct(actor_0.name)) desc limit 1 ;","SELECT movie.title FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.nationality = 'China' AND actor.aid IN ( SELECT actor.aid FROM actor WHERE actor.nationality = 'China' ) GROUP BY movie.title ORDER BY COUNT(actor.aid) DESC LIMIT 1","[('Jian dang wei ye',)]","[('Jian dang wei ye',)]",True
IMDB_train_124,imdb,"Find the actors who played in the latest movie by "" Quentin Tarantino """,return movies; return #1 by Quentin Tarantino; return #2 that is latest; return actors of #3,"select actor_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Quentin Tarantino"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.release_year desc limit 1 ;","SELECT actor.aid FROM director, movie, actor, directed_by WHERE director.birth_city = actor.birth_city AND movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid IN ( SELECT movie.mid FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' )","[('Bruce Dern',)]",ERROR,False
IMDB_train_125,imdb,"Find the name and budget of the latest movie by "" Quentin Tarantino ""","return movies; return #1 by Quentin Tarantino; return #2 that is latest; return name of #3; return budget of #3; return #4 , #5","select movie_0.title, movie_0.budget from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Quentin Tarantino"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.release_year desc limit 1 ;","SELECT movie.title, movie.budget FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid IN ( SELECT movie.mid FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid IN ( SELECT movie.mid FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' ) AND director.name = 'Quentin Tarantino' ORDER BY movie.release_year DESC LIMIT 1 )","[('The Hateful Eight', '$44,000,000')]","[('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000'), ('The Hateful Eight', '$44,000,000')]",True
IMDB_train_126,imdb,"Find all movies featuring "" Jason Robards "" and "" Woody Strode """,return Jason Robards; return movies of #1; return Woody Strode; return movies of #3; return movies in both #2 and #4,"select movie_0.title from actor as actor_0, actor as actor_1, cast as cast_0, cast as cast_1, movie as movie_0 where actor_0.name = ""Jason Robards"" and actor_1.name = ""Woody Strode"" and actor_0.aid = cast_0.aid and actor_1.aid = cast_1.aid and cast_0.msid = movie_0.mid and cast_1.msid = movie_0.mid","SELECT DISTINCT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Jason Robards' ) AND movie.mid IN ( SELECT movie.mid FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Woody Strode' ) )","[('Storyville',)]","[(3571285,)]",False
IMDB_train_127,imdb,"Who is directed the latest movie by "" NBCUniversal """,return NBCUniversal; return movies of #1; return #2 that is latest; return Who directed #3,"select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = ""NBCUniversal"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.release_year desc limit 1 ;","SELECT directed_by.did FROM company, copyright, movie, directed_by WHERE movie.mid = directed_by.msid AND company.id = copyright.cid AND copyright.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM company, copyright, movie WHERE company.id = copyright.cid AND copyright.msid = movie.mid AND company.name IN ( SELECT company.name FROM company WHERE company.name = 'NBCUniversal' ) )",[],[],True
IMDB_train_128,imdb,"What is the latest movie by "" Jim Jarmusch """,return movies; return #1 by Jim Jarmusch; return #2 that is latest,"select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Jim Jarmusch"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid order by movie_0.release_year desc limit 1 ;","SELECT movie.title FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM director, directed_by, movie WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Jim Jarmusch' ) AND director.name = 'Jim Jarmusch' ORDER BY movie.release_year DESC LIMIT 1","[('Gimme Danger',)]","[('Gimme Danger',)]",True
IMDB_train_129,imdb,Which producer has worked with the most number of directors ?,return directors; return producers that worked with #1; return the number of #1 for each #2; return #2 where #3 is highest,"select producer_0.name from directed_by as directed_by_0, director as director_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid group by producer_0.name order by count(distinct(director_0.name)) desc limit 1 ;","SELECT producer.name FROM director, producer WHERE director.birth_year = producer.birth_year AND director.did IN ( SELECT director.did FROM director ) GROUP BY producer.name ORDER BY COUNT(director.did) DESC LIMIT 1","[('Artur Brauner',)]","[('Adam Green',)]",False
IMDB_train_13,imdb,"What is the nationality of "" Kevin Spacey "" ?",return Kevin Spacey; return nationality of #1,"select director_0.nationality from director as director_0 where director_0.name = ""Kevin Spacey""",SELECT director.nationality FROM director WHERE director.name IN ( SELECT director.name FROM director WHERE director.name = 'Kevin Spacey' ),"[('USA',)]","[('USA',)]",True
IMDB_train_130,imdb,"Find the latest movie which "" Gabriele Ferzetti "" acted in",return movies; return #1 that Gabriele Ferzetti acted in; return #2 that is latest,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Gabriele Ferzetti"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid order by movie_0.release_year desc limit 1 ;","SELECT actor.name FROM cast, movie, actor WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name = 'Gabriele Ferzetti'","[('Gabriele Ferzetti',)]","[('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',), ('Gabriele Ferzetti',)]",True
IMDB_train_14,imdb,Find all actors from Italy,return actors; return #1 from Italy,"select actor_0.name from actor as actor_0 where actor_0.nationality = ""Italy"" ;",SELECT actor.name FROM actor WHERE actor.nationality = 'Italy',"[('Diego Abatantuono',), ('Franco Abba',), ('Claudio Abbado',), ('Mario Abbate',), ('Stefano Abbati',), ('Roberto Abbiati',), ('Dino Abbrescia',), ('Alberto Abruzzese',), ('Michele Abruzzo',), ('Antonio Acampora',), ('Tonino Accolla',), ('Roberto Accornero',), ('Stefano Accorsi',), ('Sandro Acerbo',), ('Daniel Acon',), ('Antonio Acqua',), (""Jason 'Wee Man' Acuña"",), ('Salvatore Adamo',), ('Dennis Adams',), ('Giuseppe Addobbati',), ('Domenico Adinolfi',), ('Ugo Adinolfi',), ('Pasquale Africano',), ('Johannes Agnoli',), ('Silvano Agosti',), ('Giacomo Agostini',), ('Ed Agresti',), ('Gianni Agus',), ('Maurizio Aiello',), ('Dario Aita',), ('Kays Al-Atrakchi',), ('Simone Alaimo',), ('Antonio Albanese',), ('Flavio Albanese',), ('Alberto Albani Barbieri',), ('Albano',), ('Lou Albano',), ('Sergio Albelli',), ('Giorgio Albertazzi',), ('Gigio Alberti',), ('Guido Alberti',), ('Bitto Albertini',), ('Demetrio Albertini',), ('Giampiero Albertini',), ('Luciano Albertini',), ('Albertino',), ('Roberto Albin',), ('Gerolamo Alchieri',), ('Carlo Aldini',), ('Aldo',), ('Ale',), ('Alessandro Aleotti',), ('Bruno Alessandro',), ('Stefano Alessandroni',), ('Francesco Paolo Alessi',), ('Ottavio Alessi',), ('Adam Alexi-Malle',), ('Giorgio Alfieri',), ('Victor Alfieri',), ('Vincenzo Alfieri',), ('Vittorio Alfieri',), ('Giorgio Algranti',), ('Bruno Alias',), ('Gianpiero Alicchio',), ('Conte Brunoro Serego Aligheri',), ('Carlo Alighiero',), ('Manfredi Aliquo',), ('Eugenio Allegri',), ('Antonio Allocca',), ('Lucio Allocca',), ('Ernesto Almirante',), ('Giacomo Almirante',), ('Roberto Alpi',), ('Tullio Altamura',), ('Michel Altieri',), ('Aureliano Amadei',), ('Amadeus',), ('Stefano Amadio',), ('Vittorio Amandola',), ('Maurizio Amati',), ('Gaetano Amato',), ('Gerardo Amato',), ('Massimiliano Amato',), ('Paul Amato',), ('Tony Amato',), ('Vincenzo Amato',), ('Mario Ambrosino',), ('Claudio Amendola',), ('Ferruccio Amendola',), ('Enrico Ameri',), ('Alvaro Amici',), ('Gianni Amico',), ('Adriano Amidei Migliano',), ('Claudio Ammendola',), ('Pino Ammendola',), ('Sergio Ammirata',), ('Luigi Amodeo',), ('Amedeo Amodio',), ('Francesco Amodio',), ('Gabriele Anagni',), ('Giuseppe Anatrelli',), ('Carlo Ancelotti',), ('Ettore Andenna',), ('Marco Antonio Andolfi',), ('Felice Andreasi',), ('Giulio Andreotti',), ('Mario Andretti',), ('Roberto Andreucci',), ('Oscar Andriani',), ('Enzo Andronico',), ('Piero Angela',), ('Ivan Angeli',), ('Siro Angeli',), ('Gigi Angelillo',), ('Cinico Angelini',), ('Nando Angelini',), ('DJ Angelo',), ('Alberto Angrisano',), ('Franco Angrisano',), ('Corrado Annicelli',), ('Armando Annuale',), ('Gianni Ansaldi',), ('Pasquale Anselmo',), ('Silvio Anselmo',), ('Mirko Antichi',), ('Giuseppe Antignati',), ('Jacopo Olmo Antinori',), ('Giancarlo Antognoni',), ('Biagio Antonacci',), ('Ennio Antonelli',), ('Roberto Antonelli',), ('Roberto Freak Antoni',), ('Gabriele Antonini',), ('Gabriele Antonini',), ('Giovanni Antonini',), ('Michelangelo Antonioni',), ('Stefano Antonucci',), ('Omero Antonutti',), ('Vito Antuofermo',), ('Andrea Appi',), ('Adriano Aprà',), ('Pierluigi Aprà',), ('Adriano Aragon',), ('Pietro Aramondo',), ('Renzo Arbore',), ('Francesco Arca',), ('Franco Arcalli',), ('Domiziano Arcangeli',), ('Saro Arcidiacono',), ('Sergio Arcuri',), ('Karo Ardenti',), ('Pinuccio Ardia',), ('George Ardisson',), ('John Ardizoni',), ('Louis Ardizoni',), ('Bruno Arena',), ('Fortunato Arena',), ('Lello Arena',), ('Maurizio Arena',), ('Luca Argentero',), ('Mino Argentieri',), ('Dario Argento',), ('Giorgio Ariani',), ('Nicola Arigliano',), ('Armando Ariostini',), ('Giorgio Armani',), ('Henry Armetta',), ('Alessandro Aronadio',), ('Stefano Arquilla',), ('Marco Arrigoni',), ('Mario Artese',), ('Diego Artioli',), ('Carlo Artuffo',), ('Vincenzo Aschettino',), ('Sergio Assisi',), ('Carlo Astuti',), ('Charles Atlas',), ('Giovanni Attanasio',), ('Vittorio Attene',), ('Roberto Attias',), ('Daniel Auber',), ('Andrea Aureli',), ('Gaetano Autiero',), ('Pupi Avati',), ('Massimo Avella',), ('Mauro Aversano',), ('Oscar Avogadro',), ('Matteo Reza Azchirvani',), ('Paolo Azzurri',), ('Salvatore Baccaloni',), ('Salvatore Baccaro',), ('Don Backy',), ('Nicola Badalucco',), ('Giancarlo Badessi',), ('Carlo Badioli',), ('Guido Bagatta',), ('Roberto Baggio',), ('Aristide Baghetti',), ('Gianni Baghino',), ('Massimo Bagliani',)]","[('Diego Abatantuono',), ('Franco Abba',), ('Claudio Abbado',), ('Mario Abbate',), ('Stefano Abbati',), ('Roberto Abbiati',), ('Dino Abbrescia',), ('Alberto Abruzzese',), ('Michele Abruzzo',), ('Antonio Acampora',), ('Tonino Accolla',), ('Roberto Accornero',), ('Stefano Accorsi',), ('Sandro Acerbo',), ('Daniel Acon',), ('Antonio Acqua',), (""Jason 'Wee Man' Acuña"",), ('Salvatore Adamo',), ('Dennis Adams',), ('Giuseppe Addobbati',), ('Domenico Adinolfi',), ('Ugo Adinolfi',), ('Pasquale Africano',), ('Johannes Agnoli',), ('Silvano Agosti',), ('Giacomo Agostini',), ('Ed Agresti',), ('Gianni Agus',), ('Maurizio Aiello',), ('Dario Aita',), ('Kays Al-Atrakchi',), ('Simone Alaimo',), ('Antonio Albanese',), ('Flavio Albanese',), ('Alberto Albani Barbieri',), ('Albano',), ('Lou Albano',), ('Sergio Albelli',), ('Giorgio Albertazzi',), ('Gigio Alberti',), ('Guido Alberti',), ('Bitto Albertini',), ('Demetrio Albertini',), ('Giampiero Albertini',), ('Luciano Albertini',), ('Albertino',), ('Roberto Albin',), ('Gerolamo Alchieri',), ('Carlo Aldini',), ('Aldo',), ('Ale',), ('Alessandro Aleotti',), ('Bruno Alessandro',), ('Stefano Alessandroni',), ('Francesco Paolo Alessi',), ('Ottavio Alessi',), ('Adam Alexi-Malle',), ('Giorgio Alfieri',), ('Victor Alfieri',), ('Vincenzo Alfieri',), ('Vittorio Alfieri',), ('Giorgio Algranti',), ('Bruno Alias',), ('Gianpiero Alicchio',), ('Conte Brunoro Serego Aligheri',), ('Carlo Alighiero',), ('Manfredi Aliquo',), ('Eugenio Allegri',), ('Antonio Allocca',), ('Lucio Allocca',), ('Ernesto Almirante',), ('Giacomo Almirante',), ('Roberto Alpi',), ('Tullio Altamura',), ('Michel Altieri',), ('Aureliano Amadei',), ('Amadeus',), ('Stefano Amadio',), ('Vittorio Amandola',), ('Maurizio Amati',), ('Gaetano Amato',), ('Gerardo Amato',), ('Massimiliano Amato',), ('Paul Amato',), ('Tony Amato',), ('Vincenzo Amato',), ('Mario Ambrosino',), ('Claudio Amendola',), ('Ferruccio Amendola',), ('Enrico Ameri',), ('Alvaro Amici',), ('Gianni Amico',), ('Adriano Amidei Migliano',), ('Claudio Ammendola',), ('Pino Ammendola',), ('Sergio Ammirata',), ('Luigi Amodeo',), ('Amedeo Amodio',), ('Francesco Amodio',), ('Gabriele Anagni',), ('Giuseppe Anatrelli',), ('Carlo Ancelotti',), ('Ettore Andenna',), ('Marco Antonio Andolfi',), ('Felice Andreasi',), ('Giulio Andreotti',), ('Mario Andretti',), ('Roberto Andreucci',), ('Oscar Andriani',), ('Enzo Andronico',), ('Piero Angela',), ('Ivan Angeli',), ('Siro Angeli',), ('Gigi Angelillo',), ('Cinico Angelini',), ('Nando Angelini',), ('DJ Angelo',), ('Alberto Angrisano',), ('Franco Angrisano',), ('Corrado Annicelli',), ('Armando Annuale',), ('Gianni Ansaldi',), ('Pasquale Anselmo',), ('Silvio Anselmo',), ('Mirko Antichi',), ('Giuseppe Antignati',), ('Jacopo Olmo Antinori',), ('Giancarlo Antognoni',), ('Biagio Antonacci',), ('Ennio Antonelli',), ('Roberto Antonelli',), ('Roberto Freak Antoni',), ('Gabriele Antonini',), ('Gabriele Antonini',), ('Giovanni Antonini',), ('Michelangelo Antonioni',), ('Stefano Antonucci',), ('Omero Antonutti',), ('Vito Antuofermo',), ('Andrea Appi',), ('Adriano Aprà',), ('Pierluigi Aprà',), ('Adriano Aragon',), ('Pietro Aramondo',), ('Renzo Arbore',), ('Francesco Arca',), ('Franco Arcalli',), ('Domiziano Arcangeli',), ('Saro Arcidiacono',), ('Sergio Arcuri',), ('Karo Ardenti',), ('Pinuccio Ardia',), ('George Ardisson',), ('John Ardizoni',), ('Louis Ardizoni',), ('Bruno Arena',), ('Fortunato Arena',), ('Lello Arena',), ('Maurizio Arena',), ('Luca Argentero',), ('Mino Argentieri',), ('Dario Argento',), ('Giorgio Ariani',), ('Nicola Arigliano',), ('Armando Ariostini',), ('Giorgio Armani',), ('Henry Armetta',), ('Alessandro Aronadio',), ('Stefano Arquilla',), ('Marco Arrigoni',), ('Mario Artese',), ('Diego Artioli',), ('Carlo Artuffo',), ('Vincenzo Aschettino',), ('Sergio Assisi',), ('Carlo Astuti',), ('Charles Atlas',), ('Giovanni Attanasio',), ('Vittorio Attene',), ('Roberto Attias',), ('Daniel Auber',), ('Andrea Aureli',), ('Gaetano Autiero',), ('Pupi Avati',), ('Massimo Avella',), ('Mauro Aversano',), ('Oscar Avogadro',), ('Matteo Reza Azchirvani',), ('Paolo Azzurri',), ('Salvatore Baccaloni',), ('Salvatore Baccaro',), ('Don Backy',), ('Nicola Badalucco',), ('Giancarlo Badessi',), ('Carlo Badioli',), ('Guido Bagatta',), ('Roberto Baggio',), ('Aristide Baghetti',), ('Gianni Baghino',), ('Massimo Bagliani',)]",True
IMDB_train_15,imdb,Find all actors born in Milan,return actors; return #1 born in Milan,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Milan"" ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'Milan',"[('Diego Abatantuono',), ('Claudio Abbado',), ('Ugo Adinolfi',), ('Gigio Alberti',), ('Ale',), ('Alessandro Aleotti',), ('Amedeo Amodio',), ('Ettore Andenna',), ('DJ Angelo',), ('Biagio Antonacci',), ('Giovanni Antonini',), ('Bruno Arena',), ('Armando Ariostini',), ('Nicola Badalucco',), ('Guido Bagatta',), ('Oreste Baldini',), ('Giulio Baraldi',), ('Giovanni Barella',), ('Giovanni Barrella',), ('Roberto Basilico',), ('Giovanni Battezzato',), ('Matteo Bellina',), ('Fabrizio Bentivoglio',), ('Giuseppe Bergomi',), ('Pier Silvio Berlusconi',), ('Silvio Berlusconi',), ('Claudio Bertoni',), ('Enrico Beruschi',), ('Nino Besozzi',), ('Sebastiano Bianchi',), ('Glen Blackhall',), ('Stefano Bollani',), ('Ugo Bologna',), ('Alberto Bona',), ('Gianni Bonagura',), ('Giovanni L. Bonelli',), ('Marco Bonetti',), ('Marco Bonfanti',), ('Michele Bongiorno',), ('Nicolò Bongiorno',), ('Prince Lorenzo Borghese',), ('Daniele Bossari',), ('Ken Bowman',), ('Ken Bowman',), ('Filippo Bozotti',), ('Gino Bramieri',), ('Franco Branciaroli',), ('Tinto Brass',), ('Guido Brignone',), ('Renato Brioschi',), ('Giovanni Buttafava',), ('Michael Cadeddu',), ('Cesare Cadeo',), ('Fabrizio Caleffi',), ('Juri Camisasca',), ('Bruno Canfora',), ('Ben Cantwell',), ('Fabio Carpi',), ('Tino Carraro',), ('Giovanni Cassinelli',), ('Luca Cassol',), ('Marco Castoldi',), ('Francesco Cataldo',), ('Carlo Cattaneo',), ('Boris Cavazza',), ('Adriano Celentano',), ('Thomas Centaro',), ('Tonino Cervi',), ('Riccardo Chailly',), ('Thomas Cibelli',), ('Giancarlo Cobelli',), ('Guido Coen',), ('Ettore Conti',), ('Ugo Conti',), ('Valter Corelli',), ('Raul Cremona',), ('Paul Cremonesi',), ('Guido Crepax',), ('Elio Crovetto',), (""Carlo D'Angelo"",), (""Giovanni D'Anzi"",), ('Roberto Da Crema',), ('Massimo Dallamano',), ('Massimo Dapporto',), ('Ruggero De Daninos',), ('Pupo De Luca',), ('Tony De Lungo',), ('Manuel De Peppe',), ('Roberto Del Giudice',), ('Marco Della Noce',), ('Marco Delvecchio',), ('Frankie Dettori',), ('Ted Dexter',), ('Luigi Di Fiore',), ('Mauro Di Francesco',), ('Sergio Di Giulio',), ('Gioele Dix',), ('Riccardo Doni',), ('Giulio Donnini',), ('Johnny Dorelli',), ('Thomas A. Edison',), ('Elio',), ('Gabriele Fabbro',), ('Fabio',), ('Francesco Facchinetti',), ('Mario Feliciani',), ('Marco Ferreri',), ('Luca Fiamenghi',), ('Elio Fiorucci',), ('Fabrizio Fontana',), ('Nino Formicola',), ('Joel Franco',), ('Franz',), ('Joe Frisco',), ('Enzo Furlai',), ('Giorgio Gaber',), ('Dino Galvani',), ('Giancarlo Garbelli',), ('Daniele Gatti',), ('Alessandro Genovesi',), ('Pietro Genuardi',), ('Remo Germani',), ('Giorgio Gherarducci',), ('Marco Tullio Giordana',), ('Giovanni',), ('Sergio Gobbi',), ('Alex Grazioli',), ('Lawrence Green',), ('Gianfrancesco Guarnieri',), ('Louis Haines',), ('Carlo Hinterman',), ('Gianluca Impastato',), ('Daniele Interrante',), ('Enzo Jannacci',), ('William Jordan',), ('Luca Jurman',), ('Gino Landi',), ('Alberto Lattuada',), ('Gabriele Lavia',), ('Max Leonida',), ('Alberto Lionello',), ('Claudio Lippi',), ('Angelo Longoni',), ('Rico Lopez',), ('Roldano Lupi',), ('Luciano Lutring',), ('Gianni Magni',), ('Alberto Mancioppi',), ('Leonardo Manera',), ('Mangoni',), ('Luciano Manzalini',), ('Marcello Marchesi',), ('Roberto Marelli',), ('Massimo Marinoni',), ('Marco Massari',), ('Andrea Materiale',), ('Fabrizio Mazzotta',), ('Giuseppe Meazza',), ('Michele Melega',), ('Davide Mengacci',), ('Christian Meyer',), ('Marco Milano',), ('Camillo Milli',), ('Stefano Mingardo',), ('Felice Minotti',), ('Graziano Molteni',), ('Luigi Moneta',), ('Luigi Montini',), ('Morando Morandini',), ('Renato Mori',), ('Vittorio Mussolini',), ('Gianni Musy',), ('Mario Nascimbene',), ('Nuto Navarrini',), ('Maurizio Nichetti',), ('Gianandrea Noseda',), ('Andrea Occhipinti',), ('Carlo Orlandi',), ('Daniele Pace',), ('Antonio Paiola',), ('Renzo Palmer',), ('Franco Parenti',), ('Franco Pastorino',), ('Nicola Pecorini',), ('Gino Pernice',), ('Enzo Polidoro',), ('Gianni Pons',), ('Cochi Ponzoni',), ('Lucio Pozzi',), ('Gianmarco Pozzoli',), ('Rocco Quarzell',), ('Alessandro Quasimodo',), ('Gianni Quillilo',), ('Umberto Paolo Quintavalle',), ('Alberto Rabagliati',), ('Tommaso Ramenghi',), ('Edoardo Raspelli',), ('Gustavo Re',), ('Tony Renis',), ('Giulio Ricciarelli',)]","[('Diego Abatantuono',), ('Claudio Abbado',), ('Ugo Adinolfi',), ('Gigio Alberti',), ('Ale',), ('Alessandro Aleotti',), ('Amedeo Amodio',), ('Ettore Andenna',), ('DJ Angelo',), ('Biagio Antonacci',), ('Giovanni Antonini',), ('Bruno Arena',), ('Armando Ariostini',), ('Nicola Badalucco',), ('Guido Bagatta',), ('Oreste Baldini',), ('Giulio Baraldi',), ('Giovanni Barella',), ('Giovanni Barrella',), ('Roberto Basilico',), ('Giovanni Battezzato',), ('Matteo Bellina',), ('Fabrizio Bentivoglio',), ('Giuseppe Bergomi',), ('Pier Silvio Berlusconi',), ('Silvio Berlusconi',), ('Claudio Bertoni',), ('Enrico Beruschi',), ('Nino Besozzi',), ('Sebastiano Bianchi',), ('Glen Blackhall',), ('Stefano Bollani',), ('Ugo Bologna',), ('Alberto Bona',), ('Gianni Bonagura',), ('Giovanni L. Bonelli',), ('Marco Bonetti',), ('Marco Bonfanti',), ('Michele Bongiorno',), ('Nicolò Bongiorno',), ('Prince Lorenzo Borghese',), ('Daniele Bossari',), ('Ken Bowman',), ('Ken Bowman',), ('Filippo Bozotti',), ('Gino Bramieri',), ('Franco Branciaroli',), ('Tinto Brass',), ('Guido Brignone',), ('Renato Brioschi',), ('Giovanni Buttafava',), ('Michael Cadeddu',), ('Cesare Cadeo',), ('Fabrizio Caleffi',), ('Juri Camisasca',), ('Bruno Canfora',), ('Ben Cantwell',), ('Fabio Carpi',), ('Tino Carraro',), ('Giovanni Cassinelli',), ('Luca Cassol',), ('Marco Castoldi',), ('Francesco Cataldo',), ('Carlo Cattaneo',), ('Boris Cavazza',), ('Adriano Celentano',), ('Thomas Centaro',), ('Tonino Cervi',), ('Riccardo Chailly',), ('Thomas Cibelli',), ('Giancarlo Cobelli',), ('Guido Coen',), ('Ettore Conti',), ('Ugo Conti',), ('Valter Corelli',), ('Raul Cremona',), ('Paul Cremonesi',), ('Guido Crepax',), ('Elio Crovetto',), (""Carlo D'Angelo"",), (""Giovanni D'Anzi"",), ('Roberto Da Crema',), ('Massimo Dallamano',), ('Massimo Dapporto',), ('Ruggero De Daninos',), ('Pupo De Luca',), ('Tony De Lungo',), ('Manuel De Peppe',), ('Roberto Del Giudice',), ('Marco Della Noce',), ('Marco Delvecchio',), ('Frankie Dettori',), ('Ted Dexter',), ('Luigi Di Fiore',), ('Mauro Di Francesco',), ('Sergio Di Giulio',), ('Gioele Dix',), ('Riccardo Doni',), ('Giulio Donnini',), ('Johnny Dorelli',), ('Thomas A. Edison',), ('Elio',), ('Gabriele Fabbro',), ('Fabio',), ('Francesco Facchinetti',), ('Mario Feliciani',), ('Marco Ferreri',), ('Luca Fiamenghi',), ('Elio Fiorucci',), ('Fabrizio Fontana',), ('Nino Formicola',), ('Joel Franco',), ('Franz',), ('Joe Frisco',), ('Enzo Furlai',), ('Giorgio Gaber',), ('Dino Galvani',), ('Giancarlo Garbelli',), ('Daniele Gatti',), ('Alessandro Genovesi',), ('Pietro Genuardi',), ('Remo Germani',), ('Giorgio Gherarducci',), ('Marco Tullio Giordana',), ('Giovanni',), ('Sergio Gobbi',), ('Alex Grazioli',), ('Lawrence Green',), ('Gianfrancesco Guarnieri',), ('Louis Haines',), ('Carlo Hinterman',), ('Gianluca Impastato',), ('Daniele Interrante',), ('Enzo Jannacci',), ('William Jordan',), ('Luca Jurman',), ('Gino Landi',), ('Alberto Lattuada',), ('Gabriele Lavia',), ('Max Leonida',), ('Alberto Lionello',), ('Claudio Lippi',), ('Angelo Longoni',), ('Rico Lopez',), ('Roldano Lupi',), ('Luciano Lutring',), ('Gianni Magni',), ('Alberto Mancioppi',), ('Leonardo Manera',), ('Mangoni',), ('Luciano Manzalini',), ('Marcello Marchesi',), ('Roberto Marelli',), ('Massimo Marinoni',), ('Marco Massari',), ('Andrea Materiale',), ('Fabrizio Mazzotta',), ('Giuseppe Meazza',), ('Michele Melega',), ('Davide Mengacci',), ('Christian Meyer',), ('Marco Milano',), ('Camillo Milli',), ('Stefano Mingardo',), ('Felice Minotti',), ('Graziano Molteni',), ('Luigi Moneta',), ('Luigi Montini',), ('Morando Morandini',), ('Renato Mori',), ('Vittorio Mussolini',), ('Gianni Musy',), ('Mario Nascimbene',), ('Nuto Navarrini',), ('Maurizio Nichetti',), ('Gianandrea Noseda',), ('Andrea Occhipinti',), ('Carlo Orlandi',), ('Daniele Pace',), ('Antonio Paiola',), ('Renzo Palmer',), ('Franco Parenti',), ('Franco Pastorino',), ('Nicola Pecorini',), ('Gino Pernice',), ('Enzo Polidoro',), ('Gianni Pons',), ('Cochi Ponzoni',), ('Lucio Pozzi',), ('Gianmarco Pozzoli',), ('Rocco Quarzell',), ('Alessandro Quasimodo',), ('Gianni Quillilo',), ('Umberto Paolo Quintavalle',), ('Alberto Rabagliati',), ('Tommaso Ramenghi',), ('Edoardo Raspelli',), ('Gustavo Re',), ('Tony Renis',), ('Giulio Ricciarelli',)]",True
IMDB_train_16,imdb,"How much was the budget of "" Finding Nemo """,return Finding Nemo; return budget of #1,"select movie_0.budget from movie as movie_0 where movie_0.title = ""Finding Nemo"" ;",SELECT movie.budget FROM movie WHERE movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Finding Nemo' ),"[('$94,000,000',)]","[('$94,000,000',)]",True
IMDB_train_17,imdb,Which actors were born in Tehran,return actors; return #1 born in Tehran,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Tehran"" ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'Tehran',"[('Ray Aghayan',), ('Hossein Alizadeh',), ('Houchang Allahyari',), ('Alireza Amini',), ('Kiarash Anvari',), ('Fariborz Arabnia',), ('Arash',), ('Reza Aslan',), ('Edwin Avaness',), ('Amir Badri',), ('Mohammad Coochaki',), (""Sirr D'Kay"",), ('Matin Dadfar',), ('David Diaan',), ('Dar Dixon',), ('Ezzatolah Entezami',), ('Antonio Esfandiari',), ('Reza Farahan',), ('Mohamad Ali Fardin',), ('Michael Farnia',), ('Mohammad Reza Forutan',), ('Iraj Ghaderi',), ('Mehran Ghafoorian',), ('Hamid Ghanbari',), ('Faramarz Gharibian',), ('Mohammad Reza Golzar',), ('Nematollah Gorji',), ('Shaun Hasas',), ('Afshin Hashemi',), ('Javad Hashemi',), ('Jamshid Hashempur',), ('Ebrahim Hatamikia',), ('Shahab Hosseini',), ('Maz Jobrani',), ('Eddie Kanani',), ('Saeed Kangarani',), ('Ramin Karimloo',), ('Hossein Kazbian',), ('Shahai Khademi',), ('Amir Khalighi',), ('Marco Khan',), ('Reza Kianian',), ('Poulad Kimiayi',), ('David King-Wood',), ('Kamshad Kooshan',), ('Jamshid Layegh',), ('Majid Majidi',), ('Mohsen Makhmalbaf',), ('Mehran Modiri',), ('Bahman Mofid',), ('Ali Mosaffa',), ('Mohammed Mossadegh',), ('Gegard Mousasi',), ('Bobby Naderi',), ('Gholamhossein Naghshineh',), ('Hesam Navabsafavi',), ('Navid Navid',), ('Shebly Niavarani',), ('Shah Mohammad Reza Pahlavi',), ('Michael Pavlisan',), ('Garen Petrossian',), ('Parsa Pirouzfar',), ('Hamed Pouresfandyani',), ('Satiar Pourvasei',), ('Bahram Radan',), ('Dominic Rains',), ('Ethan Rains',), ('Garshasb Raoufi',), ('Rouzbeh Rashidi',), ('Maziar Rezai',), ('Mahdad Rezaujan',), ('Taymaz Saba',), ('Nima Safei',), ('Farrokh Sajedi',), ('Hossein Sarshar',), ('Barbet Schroeder',), ('Mehrdad Sedighian',), ('Farshid Seilatani',), ('Ata Servati',), ('Kambiz Shabankare',), ('Shahram Shabpareh',), ('Shervin Shadmehr',), ('Ramin Shafiai',), ('Jamshid Shah Mohammadi',), ('Khosro Shakibai',), ('Ahmad Shamlu',), ('Jamshid Sheibani',), ('Adel Shirazy',), ('Daryush Shokof',), ('Bruce Tavakkol',), ('Morteza Tavakoli',), ('Shaun Toub',), ('Amir Vahedi',), ('Manoochehr Valizade',), ('Mohammad Varshochi',), ('Khosrow Vaziri',), ('Saman Yaghmai-Aledavoud',), ('Bijan Zaimi',), ('Piran Zarifian',), ('Taghi Zohuri',), ('Mahnaz Afshar',), ('Nazanin Afshin-Jam',), ('Shohreh Aghdashloo',), ('Azam Ali',), ('Taraneh Alidoosti',), ('Mary Apick',), ('Asal Badii',), ('Rakhshan Bani-Etemad',), ('Camila Batmanghelidjh',), ('Sareh Bayat',), ('Afsaneh Bayegan',), ('Nare Bell',), (""Yvonne D'Angers"",), ('Shirin Ebadi',), ('Golshifteh Farahani',), ('Shaghayegh Farahani',), ('Bita Farahi',), ('Farimah Farjami',), ('Forugh Farrokhzad',), ('Taies Farzan',), ('Pegah Ferydoni',), ('Sadaf Foroughi',), ('Michelle Franklin',), ('Rabeah Ghaffari',), ('Rozita Ghaffari',), ('Vida Ghahremani',), ('Marina Ghane',), ('Googoosh',), ('Shiva Gordon',), ('Leila Hatami',), ('Negar Javaherian',), ('Niki Karimi',), ('Mahtab Keramati',), ('Anita Khalatbari',), ('Shappi Khorsandi',), ('Baran Kosari',), ('Aylar Lie',), ('Shohreh Lorestani',), ('Claudia Lynx',), ('Hana Makhmalbaf',), ('Samira Makhmalbaf',), ('Rosie Malek-Yonan',), ('Fatemah Motamed-Aria',), ('Marjan Neshat',), ('Roya Nonahali',), ('Soghra Obeisi',), ('Nasim Pedrad',), ('Maria Petros',), ('Fahimeh Rahimnia',), ('Fahimeh Rastegar',), ('Rita',), ('Atoosa Rubenstein',), ('Carolena Sabah',), ('Shabnam Safarzadeh',), ('Sara Saidy',), ('Elnaz Shakerdust',), ('Mehraveh Sharifinia',), ('Valentin Siroon',), ('Parvin Solaymani',), ('Bahar Soomekh',), ('Tami Stronach',), ('Fatemeh Taheri',), ('Roya Taymourian',), ('Hediyeh Tehrani',), ('Saye Yabandeh',), ('Leia Zanganeh',), (""Merila Zare'i"",), ('Leyla Zareh',)]","[('Ray Aghayan',), ('Hossein Alizadeh',), ('Houchang Allahyari',), ('Alireza Amini',), ('Kiarash Anvari',), ('Fariborz Arabnia',), ('Arash',), ('Reza Aslan',), ('Edwin Avaness',), ('Amir Badri',), ('Mohammad Coochaki',), (""Sirr D'Kay"",), ('Matin Dadfar',), ('David Diaan',), ('Dar Dixon',), ('Ezzatolah Entezami',), ('Antonio Esfandiari',), ('Reza Farahan',), ('Mohamad Ali Fardin',), ('Michael Farnia',), ('Mohammad Reza Forutan',), ('Iraj Ghaderi',), ('Mehran Ghafoorian',), ('Hamid Ghanbari',), ('Faramarz Gharibian',), ('Mohammad Reza Golzar',), ('Nematollah Gorji',), ('Shaun Hasas',), ('Afshin Hashemi',), ('Javad Hashemi',), ('Jamshid Hashempur',), ('Ebrahim Hatamikia',), ('Shahab Hosseini',), ('Maz Jobrani',), ('Eddie Kanani',), ('Saeed Kangarani',), ('Ramin Karimloo',), ('Hossein Kazbian',), ('Shahai Khademi',), ('Amir Khalighi',), ('Marco Khan',), ('Reza Kianian',), ('Poulad Kimiayi',), ('David King-Wood',), ('Kamshad Kooshan',), ('Jamshid Layegh',), ('Majid Majidi',), ('Mohsen Makhmalbaf',), ('Mehran Modiri',), ('Bahman Mofid',), ('Ali Mosaffa',), ('Mohammed Mossadegh',), ('Gegard Mousasi',), ('Bobby Naderi',), ('Gholamhossein Naghshineh',), ('Hesam Navabsafavi',), ('Navid Navid',), ('Shebly Niavarani',), ('Shah Mohammad Reza Pahlavi',), ('Michael Pavlisan',), ('Garen Petrossian',), ('Parsa Pirouzfar',), ('Hamed Pouresfandyani',), ('Satiar Pourvasei',), ('Bahram Radan',), ('Dominic Rains',), ('Ethan Rains',), ('Garshasb Raoufi',), ('Rouzbeh Rashidi',), ('Maziar Rezai',), ('Mahdad Rezaujan',), ('Taymaz Saba',), ('Nima Safei',), ('Farrokh Sajedi',), ('Hossein Sarshar',), ('Barbet Schroeder',), ('Mehrdad Sedighian',), ('Farshid Seilatani',), ('Ata Servati',), ('Kambiz Shabankare',), ('Shahram Shabpareh',), ('Shervin Shadmehr',), ('Ramin Shafiai',), ('Jamshid Shah Mohammadi',), ('Khosro Shakibai',), ('Ahmad Shamlu',), ('Jamshid Sheibani',), ('Adel Shirazy',), ('Daryush Shokof',), ('Bruce Tavakkol',), ('Morteza Tavakoli',), ('Shaun Toub',), ('Amir Vahedi',), ('Manoochehr Valizade',), ('Mohammad Varshochi',), ('Khosrow Vaziri',), ('Saman Yaghmai-Aledavoud',), ('Bijan Zaimi',), ('Piran Zarifian',), ('Taghi Zohuri',), ('Mahnaz Afshar',), ('Nazanin Afshin-Jam',), ('Shohreh Aghdashloo',), ('Azam Ali',), ('Taraneh Alidoosti',), ('Mary Apick',), ('Asal Badii',), ('Rakhshan Bani-Etemad',), ('Camila Batmanghelidjh',), ('Sareh Bayat',), ('Afsaneh Bayegan',), ('Nare Bell',), (""Yvonne D'Angers"",), ('Shirin Ebadi',), ('Golshifteh Farahani',), ('Shaghayegh Farahani',), ('Bita Farahi',), ('Farimah Farjami',), ('Forugh Farrokhzad',), ('Taies Farzan',), ('Pegah Ferydoni',), ('Sadaf Foroughi',), ('Michelle Franklin',), ('Rabeah Ghaffari',), ('Rozita Ghaffari',), ('Vida Ghahremani',), ('Marina Ghane',), ('Googoosh',), ('Shiva Gordon',), ('Leila Hatami',), ('Negar Javaherian',), ('Niki Karimi',), ('Mahtab Keramati',), ('Anita Khalatbari',), ('Shappi Khorsandi',), ('Baran Kosari',), ('Aylar Lie',), ('Shohreh Lorestani',), ('Claudia Lynx',), ('Hana Makhmalbaf',), ('Samira Makhmalbaf',), ('Rosie Malek-Yonan',), ('Fatemah Motamed-Aria',), ('Marjan Neshat',), ('Roya Nonahali',), ('Soghra Obeisi',), ('Nasim Pedrad',), ('Maria Petros',), ('Fahimeh Rahimnia',), ('Fahimeh Rastegar',), ('Rita',), ('Atoosa Rubenstein',), ('Carolena Sabah',), ('Shabnam Safarzadeh',), ('Sara Saidy',), ('Elnaz Shakerdust',), ('Mehraveh Sharifinia',), ('Valentin Siroon',), ('Parvin Solaymani',), ('Bahar Soomekh',), ('Tami Stronach',), ('Fatemeh Taheri',), ('Roya Taymourian',), ('Hediyeh Tehrani',), ('Saye Yabandeh',), ('Leia Zanganeh',), (""Merila Zare'i"",), ('Leyla Zareh',)]",True
IMDB_train_18,imdb,"Find all movies directed by "" Steven Spielberg "" after 2006",return movies; return #1 directed by Steven Spielberg; return #2 after 2006,"select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Steven Spielberg"" and movie_0.release_year  >  2006 and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Steven Spielberg' AND movie.release_year > 2006","[('A Timeless Call',), ('Bridge of Spies',), ('Indiana Jones 5',), ('Indiana Jones and the Kingdom of the Crystal Skull',), ('Lincoln',), ('Ready Player One',), ('The Adventures of Tintin',), ('The BFG',), ('The Kidnapping of Edgardo Mortara',), ('War Horse',)]","[('A Timeless Call',), ('Bridge of Spies',), ('Indiana Jones 5',), ('Indiana Jones and the Kingdom of the Crystal Skull',), ('Lincoln',), ('Ready Player One',), ('The Adventures of Tintin',), ('The BFG',), ('The Kidnapping of Edgardo Mortara',), ('War Horse',)]",True
IMDB_train_19,imdb,"Who is the director of the movie "" Catch Me If You Can "" ?",return Catch Me If You Can; return director of #1,"select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = ""Catch Me If You Can"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.name FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Catch Me If You Can' )","[('Rick Davis',), ('Jeffrey Reiner',), ('Stephen Sommers',), ('Steven Spielberg',), ('Don Weis',), ('Steve Sommers',), ('Steven Sommers',), ('Donald Weiss',), ('Steven Allan Spielberg',), ('Jeff Reiner',), ('Steven',), ('Steven Spielrock',), ('Spielberg',), ('Steve Spielberg',), ('Stephen Spielberg',), ('Steven Speilberg',), ('Rick Davies',)]","[('Rick Davis',), ('Jeffrey Reiner',), ('Stephen Sommers',), ('Steven Spielberg',), ('Don Weis',), ('Steve Sommers',), ('Steven Sommers',), ('Donald Weiss',), ('Steven Allan Spielberg',), ('Jeff Reiner',), ('Steven',), ('Steven Spielrock',), ('Spielberg',), ('Steve Spielberg',), ('Stephen Spielberg',), ('Steven Speilberg',), ('Rick Davies',)]",True
IMDB_train_2,imdb,"What is the nationality of the actress "" Ellen Page "" ?",return actresses; return #1 that is Ellen Page; return nationality of #2,"select actor_0.nationality from actor as actor_0 where actor_0.name = ""Ellen Page"" ;",SELECT actor.nationality FROM actor WHERE actor.aid IN ( SELECT actor.aid FROM actor WHERE actor.name = 'Ellen Page' ),"[('Canada',)]","[('Canada',)]",True
IMDB_train_20,imdb,"Find the actor who played "" Captain Miller "" in the movie "" Saving Private Ryan """,return Saving Private Ryan; return actors of #1; return #2 who played Captain Miller,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = ""Captain Miller"" and movie_0.title = ""Saving Private Ryan"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, actor, cast WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Saving Private Ryan' ) AND cast.role = 'Captain Miller'","[('Tom Hanks',), ('Tomu Hankusu',), ('Thomas Jeffrey Hanks',)]","[('Tom Hanks',), ('Tomu Hankusu',), ('Thomas Jeffrey Hanks',)]",True
IMDB_train_21,imdb,"What is the genre of the movie "" Jurassic Park "" ?",return Jurassic Park; return movie genre of #1,"select genre_0.genre from classification as classification_0, genre as genre_0, movie as movie_0 where movie_0.title = ""Jurassic Park"" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid ;","SELECT genre.genre FROM movie, classification, genre WHERE movie.mid = classification.msid AND classification.gid = genre.gid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Jurassic Park' )","[('Adventure',), ('Sci-Fi',), ('Thriller',), ('Drama',)]","[('Adventure',), ('Sci-Fi',), ('Thriller',), ('Drama',)]",True
IMDB_train_22,imdb,Who was the director of the movie Joy from 2015 ?,return movies; return #1 that is Joy; return #2 from 2015; return director of #3,"select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.release_year = 2015 and movie_0.title = ""Joy"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.name FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid IN ( SELECT movie.mid FROM movie WHERE movie.title = 'Joy' AND movie.release_year = 2015 )","[('Tony Delerme',), ('Solomon Onita Jr.',), ('Leigh Powis',), ('David O. Russell',), ('Heyishi Zhang',), ('David Russell',), ('D. Russell',), (""David O'Russell"",), ('Stephen Greene',), ('Solomon Onita',), ('David Owen Russell',)]","[('Tony Delerme',), ('Solomon Onita Jr.',), ('Leigh Powis',), ('David O. Russell',), ('Heyishi Zhang',), ('David Russell',), ('D. Russell',), (""David O'Russell"",), ('Stephen Greene',), ('Solomon Onita',), ('David Owen Russell',)]",True
IMDB_train_23,imdb,"Who acted "" John Nash "" in the movie "" A Beautiful Mind "" ?",return A Beautiful Mind; return who acted in #1; return #2 who acted John Nash,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = ""John Nash"" and movie_0.title = ""A Beautiful Mind"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, actor, cast WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'A Beautiful Mind' ) AND cast.role = 'John Nash'","[('Russell Crowe',)]","[('Russell Crowe',)]",True
IMDB_train_24,imdb,"Find all movies written by "" Matt Damon """,return movies; return #1 written by Matt Damon,"select movie_0.title from movie as movie_0, writer as writer_0, written_by as written_by_0 where writer_0.name = ""Matt Damon"" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid ;","SELECT movie.title FROM movie, writer, written_by WHERE movie.mid = written_by.msid AND written_by.wid = writer.wid AND writer.name = 'Matt Damon'","[('Gerry',), ('Good Will Hunting',), ('Promised Land',)]","[('Gerry',), ('Good Will Hunting',), ('Promised Land',)]",True
IMDB_train_25,imdb,"Find all movies written and produced by "" Woody Allen """,return movies; return #1 written by Woody Allen; return #2 produced by Woody Allen,"select movie_0.title from made_by as made_by_0, movie as movie_0, producer as producer_0, writer as writer_0, written_by as written_by_0 where producer_0.name = ""Woody Allen"" and writer_0.name = ""Woody Allen"" and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid ;","SELECT movie.title FROM movie, made_by, producer WHERE movie.mid = made_by.msid AND made_by.pid = producer.pid AND producer.name = 'Woody Allen'","[(""What's Up, Tiger Lily?"",)]","[(""What's Up, Tiger Lily?"",)]",True
IMDB_train_26,imdb,"Find all movies featuring "" Kate Winslet """,return Kate Winslet; return movies featuring #1,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Kate Winslet"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM cast, actor, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kate Winslet' )","[('11th Annual Screen Actors Guild Awards',), ('11th Annual Screen Actors Guild Awards',), ('15th Annual Screen Actors Guild Awards',), ('22nd Annual Screen Actors Guild Awards',), ('73rd Golden Globe Awards',), (""A Kid in King Arthur's Court"",), ('A Little Chaos',), (""A Look Inside 'Eternal Sunshine of the Spotless Mind'"",), ('Bambi Verleihung 2009',), (""Boffo! Tinseltown's Bombs and Blockbusters"",), ('Cinema of Unease: A Personal Journey by Sam Neill',), ('Cleanflix',), ('Contagion',), ('Deep Sea',), ('Enigma',), ('Eternal Sunshine of the Spotless Mind',), ('Faeries',), ('Finding Neverland',), ('Heavenly Creatures',), ('Iris',), ('Jude',), ('Revolutionary Road',), ('Sense and Sensibility',), (""Snow Chick: A Penguin's Tale"",), (""The 10th Annual Critics' Choice Awards"",), ('The 16th Annual Gotham Awards',), ('The 2009 European Film Awards',), ('The 49th Bafta Awards',), ('The 53rd Annual Golden Globe Awards',), ('The 55th Annual Golden Globe Awards',), ('The 59th Annual Golden Globe Awards',), ('The 62nd Annual Golden Globe Awards',), ('The 63rd Primetime Emmy Awards',), ('The 64th Annual Golden Globe Awards',), ('The 66th Annual Golden Globe Awards',), ('The 67th Annual Golden Globe Awards',), ('The 68th Annual Academy Awards',), ('The 69th Annual Golden Globe Awards',), ('The 70th Annual Academy Awards',), ('The 74th Annual Academy Awards',), ('The 77th Annual Academy Awards',), ('The 79th Annual Academy Awards',), ('The 81st Annual Academy Awards',), ('The 82nd Annual Academy Awards',), ('The Dressmaker',), ('The EE British Academy Film Awards',), ('The Life of David Gale',), ('The Orange British Academy Film Awards',), ('The Oscars',), ('The Reader',), ('Titanic',), ('Triple 9',), ('Twentieth Century Fox: The Blockbuster Years',)]","[('11th Annual Screen Actors Guild Awards',), ('11th Annual Screen Actors Guild Awards',), ('15th Annual Screen Actors Guild Awards',), ('22nd Annual Screen Actors Guild Awards',), ('73rd Golden Globe Awards',), (""A Kid in King Arthur's Court"",), ('A Little Chaos',), (""A Look Inside 'Eternal Sunshine of the Spotless Mind'"",), ('Bambi Verleihung 2009',), (""Boffo! Tinseltown's Bombs and Blockbusters"",), ('Cinema of Unease: A Personal Journey by Sam Neill',), ('Cleanflix',), ('Contagion',), ('Deep Sea',), ('Enigma',), ('Eternal Sunshine of the Spotless Mind',), ('Faeries',), ('Finding Neverland',), ('Heavenly Creatures',), ('Iris',), ('Jude',), ('Revolutionary Road',), ('Sense and Sensibility',), (""Snow Chick: A Penguin's Tale"",), (""The 10th Annual Critics' Choice Awards"",), ('The 16th Annual Gotham Awards',), ('The 2009 European Film Awards',), ('The 49th Bafta Awards',), ('The 53rd Annual Golden Globe Awards',), ('The 55th Annual Golden Globe Awards',), ('The 59th Annual Golden Globe Awards',), ('The 62nd Annual Golden Globe Awards',), ('The 63rd Primetime Emmy Awards',), ('The 64th Annual Golden Globe Awards',), ('The 66th Annual Golden Globe Awards',), ('The 67th Annual Golden Globe Awards',), ('The 68th Annual Academy Awards',), ('The 69th Annual Golden Globe Awards',), ('The 70th Annual Academy Awards',), ('The 74th Annual Academy Awards',), ('The 77th Annual Academy Awards',), ('The 79th Annual Academy Awards',), ('The 81st Annual Academy Awards',), ('The 82nd Annual Academy Awards',), ('The Dressmaker',), ('The EE British Academy Film Awards',), ('The Life of David Gale',), ('The Orange British Academy Film Awards',), ('The Oscars',), ('The Reader',), ('Titanic',), ('Triple 9',), ('Twentieth Century Fox: The Blockbuster Years',)]",True
IMDB_train_27,imdb,What was the budget of the movie Juno from 2007 ?,return the movie Juno; return #1 from 2017; return budget of #2,"select movie_0.budget from movie as movie_0 where movie_0.release_year = 2007 and movie_0.title = ""Juno"" ;","SELECT movie.budget FROM movie, made_by, producer WHERE movie.mid = made_by.msid AND made_by.pid = producer.pid AND movie.title IN ( SELECT movie.title FROM movie, made_by, producer WHERE movie.mid = made_by.msid AND made_by.pid = producer.pid AND movie.title = 'Juno' )","[('$7,500,000',)]","[('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',), ('$7,500,000',)]",True
IMDB_train_28,imdb,Find all comedies produced in year 2015,return comedies; return produced year of #1; return #1 where #2 is 2015,"select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = ""comedies"" and movie_0.release_year = 2015 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid ;","SELECT genre.genre FROM movie, classification, genre WHERE movie.mid = classification.msid AND classification.gid = genre.gid AND genre.genre IN ( SELECT genre.genre FROM genre WHERE genre.genre = 'comedies' ) AND genre.genre = 'comedies' AND movie.release_year = 2015",[],[],True
IMDB_train_29,imdb,"Who was the actor that played "" Vinny Gambini "" in the movie "" My Cousin Vinny "" ?",return the movie My Cousin Vinny; return actors of #1; return #2 that played Vinny Gambini,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = ""Vinny Gambini"" and movie_0.title = ""My Cousin Vinny"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, actor, cast WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'My Cousin Vinny' ) AND cast.role = 'Vinny Gambini'","[('Joe Pesci',), ('Joseph Frank Pesci',)]","[('Joe Pesci',), ('Joseph Frank Pesci',)]",True
IMDB_train_3,imdb,Find all movies produced in 2015,return movies; return #1 produced in 2015,select movie_0.title from movie as movie_0 where movie_0.release_year = 2015 ;,SELECT movie.title FROM movie WHERE movie.release_year = 2015,"[('# My Ass',), ('#1 at the Apocalypse Box Office',), ('#10007',), ('#1137',), ('#30',), ('#50Fathers',), ('#66',), ('#99',), ('#artoffline',), ('#Askhermore',), ('#AskMayorTory Town Hall',), ('#bars4Justice',), ('#Beings',), ('#BeRobin the Movie',), ('#BeYourself',), ('#Bitch, les filles et la violence',), ('#BlackPowerYellowPeril',), ('#blessed',), ('#BringBackSungWooo',), ('#buffaloplaid',), ('#burritolove',), ('#Click',), ('#ClivesClub: The Somers Solstice',), ('#dailybush 4',), ('#DanceBattle America',), ('#Disneyland60',), ('#Done!',), ('#DreamRideLA',), ('#EndTheMommyWars',), ('#Enough',), ('#Ewankosau saranghaeyo',), ('#FTW: For the Win',), ('#garotas: O Filme',), ('#GirlCrush',), ('#Guilty',), ('#halloweenparty',), ('#hatavåldtäkt',), ('#heimkommen',), ('#Help',), ('#Hero',), ('#HeroIsTheNewBlack!',), ('#Hollyoaksmas LIVE!',), (""#Hommes: True Story of the Thieves' World"",), ('#Horror',), ('#hugme',), ('#Insocial',), ('#InstaCouple',), ('#IrishGameDev 2014',), ('#Justlanded',), ('#LeftyProbs',), ('#LetsGoHiking',), ('#Like',), ('#Lingo',), ('#LivforCunningham',), ('#Lucky Number',), ('#ModernMillennial',), ('#Murder',), ('#MurderSelfie',), ('#My Face',), ('#mycyberprince',), ('#Net',), ('#O2LForever',), ('#OccupyVimodrone',), ('#PornstarFantasy',), ('#PornstarFantasy 2',), ('#pouralex',), ('#Romeo',), ('#Roommates',), ('#SaveHouston',), ('#SavePunjabiDeli',), ('#Screenager',), ('#SeeTheBoy',), ('#Seiscientos',), ('#Selfie',), ('#SelfieDad',), ('#Single: Girl behind the camera',), ('#SinMuzza',), ('#Somethingdifferentthemovie',), ('#SpiceLife',), ('#Standards',), ('#Tbb4',), ('#TBT by Comedy Central',), ('#TheNewRules',), ('#thetimeisnow',), ('#thetimeisnow',), ('#Walang Forever',), ('#WIREINANDER mit Dner',), ('#WIREINANDER mit Dr. Allwissend',), ('#WIREINANDER mit Julien Bam',), ('#WIREINANDER mit Ooobacht',), ('#WIREINANDER mit Unge',), ('#Workout',), ('#Ya',), ('#yesallwomen',), ('#Zombie',), ('$2 a Day',), ('$50 Apple',), ('$cratch',), ('$elfie Shootout',), ('$kumbagz',), (""'95"",), (""'Aho'eitu"",), (""'Deranged' with Producer Tom Karr"",), (""'El Sueño' Blooper Reel"",), (""'Hotel concierge wa bakunyû na hodo shukuhaku kyaku yori 6-bai dosukebe de, naokatsu sasoi do-M de aru'... Yatsuka Mikoto"",), (""'Lorena & Dorian' Fashion"",), (""'Merica, My Lovely"",), (""'Merry' Christmas"",), (""'N Hondelewe"",), (""'n Man Soos My Pa"",), (""'N Paw-Paw Vir My Darling"",), (""'Nine Blackmon's Bluelight'"",), (""'Til Death"",), (""'Til Death"",), (""'Til The Cows Come Home"",), (""'Till Death"",), (""'Tis the Season"",), (""'Tis the Season for Love"",), ('(313) Choices',), ('(Day)dreamer',), ('(Dis)Honesty: The Truth About Lies',), ('(I Hate) My Wife',), ('(In) Pacto',), ('(Little) Red Riding Hood',), ('(ne)Zaboravljeni',), ('(No) Identity',), ('(Ordinary) Madness',), ('(Otto)',), ('(Re)Breathe',), ('(Re)Construction',), ('(T)ERROR',), ('(un)conscious',), ('(Working) Holiday',), ('*%&#@! GPS: Pottymouth GPS',), ('*tres',), ('+/-',), ('+1',), ('... at different times',), (""... qu 'ils mangent de la brioche! (Letters from Eden - Blind)"",), ('... Sings Dylan II',), ('... Sings Motown',), ('... with Birthday Cake',), ('...And Counting',), ('...and I Saw Her',), ('...And Then Everything Changed',), (""...And You're Back in the Room"",), ('...If We Are Mortal',), ('...In the Wind',), ('...Och ute är det fortfarande mörkt',), ('...Or for Worse',), ('...When the Bullying Ends',), ('...Where is she now?',), ('.COMedy Live',), ('0,8 Ampère geluk',), ('0-1',), ('0.53',), (""0068 Sniper's Nest"",), ('00:08',), ('0300 Hours',), ('0900',), ('0930 Hours',), ('1 1/2 Hora',), ('1 Building and 40 People Dancing',), ('1 Day with Chinaski',), ('1 in 12',), ('1 in 4',), ('1 Nation',), ('1 Room 4 Girls 2',), ('1 Room 4 Girls: The Perfect Ass',), ('1 World 100 Lonely',), ('1+1=1',), ('1,2,3 Usa',), ('1-800-My-Deity',), ('1.7 Alpha',), ('1/1',), ('1/10 of a second',), ('1/2',), ('10',), ('10 Am',), ('10 comandamenti di lui',), ('10 Crunchy Carrots with Cheryl Silver',), ('10 dage i rummet',), ('10 Days in a Madhouse',), ('10 Days in Delaware',), ('10 Days of Dogs',), ('10 Eco Tips on Saving Water',), ('10 Endrathukulla',), ('10 Grams',), ('10 Hours',), ('10 Jahre Brangelina - Ihre Liebe, ihre Macht, ihre Millionen',), ('10 Little Rubber Ducks',), ('10 Miles Bull Bay',), ('10 Milliarden',), ('10 min short Catapulting Creativity',), ('10 Minutes',), ('10 Minutes',), ('10 Minutes of My Life',), (""10 moments énervants qu'on ne veut plus vivre au quotidien"",), ('10 Most Evil Serial Killers',), ('10 ms',)]","[('# My Ass',), ('#1 at the Apocalypse Box Office',), ('#10007',), ('#1137',), ('#30',), ('#50Fathers',), ('#66',), ('#99',), ('#artoffline',), ('#Askhermore',), ('#AskMayorTory Town Hall',), ('#bars4Justice',), ('#Beings',), ('#BeRobin the Movie',), ('#BeYourself',), ('#Bitch, les filles et la violence',), ('#BlackPowerYellowPeril',), ('#blessed',), ('#BringBackSungWooo',), ('#buffaloplaid',), ('#burritolove',), ('#Click',), ('#ClivesClub: The Somers Solstice',), ('#dailybush 4',), ('#DanceBattle America',), ('#Disneyland60',), ('#Done!',), ('#DreamRideLA',), ('#EndTheMommyWars',), ('#Enough',), ('#Ewankosau saranghaeyo',), ('#FTW: For the Win',), ('#garotas: O Filme',), ('#GirlCrush',), ('#Guilty',), ('#halloweenparty',), ('#hatavåldtäkt',), ('#heimkommen',), ('#Help',), ('#Hero',), ('#HeroIsTheNewBlack!',), ('#Hollyoaksmas LIVE!',), (""#Hommes: True Story of the Thieves' World"",), ('#Horror',), ('#hugme',), ('#Insocial',), ('#InstaCouple',), ('#IrishGameDev 2014',), ('#Justlanded',), ('#LeftyProbs',), ('#LetsGoHiking',), ('#Like',), ('#Lingo',), ('#LivforCunningham',), ('#Lucky Number',), ('#ModernMillennial',), ('#Murder',), ('#MurderSelfie',), ('#My Face',), ('#mycyberprince',), ('#Net',), ('#O2LForever',), ('#OccupyVimodrone',), ('#PornstarFantasy',), ('#PornstarFantasy 2',), ('#pouralex',), ('#Romeo',), ('#Roommates',), ('#SaveHouston',), ('#SavePunjabiDeli',), ('#Screenager',), ('#SeeTheBoy',), ('#Seiscientos',), ('#Selfie',), ('#SelfieDad',), ('#Single: Girl behind the camera',), ('#SinMuzza',), ('#Somethingdifferentthemovie',), ('#SpiceLife',), ('#Standards',), ('#Tbb4',), ('#TBT by Comedy Central',), ('#TheNewRules',), ('#thetimeisnow',), ('#thetimeisnow',), ('#Walang Forever',), ('#WIREINANDER mit Dner',), ('#WIREINANDER mit Dr. Allwissend',), ('#WIREINANDER mit Julien Bam',), ('#WIREINANDER mit Ooobacht',), ('#WIREINANDER mit Unge',), ('#Workout',), ('#Ya',), ('#yesallwomen',), ('#Zombie',), ('$2 a Day',), ('$50 Apple',), ('$cratch',), ('$elfie Shootout',), ('$kumbagz',), (""'95"",), (""'Aho'eitu"",), (""'Deranged' with Producer Tom Karr"",), (""'El Sueño' Blooper Reel"",), (""'Hotel concierge wa bakunyû na hodo shukuhaku kyaku yori 6-bai dosukebe de, naokatsu sasoi do-M de aru'... Yatsuka Mikoto"",), (""'Lorena & Dorian' Fashion"",), (""'Merica, My Lovely"",), (""'Merry' Christmas"",), (""'N Hondelewe"",), (""'n Man Soos My Pa"",), (""'N Paw-Paw Vir My Darling"",), (""'Nine Blackmon's Bluelight'"",), (""'Til Death"",), (""'Til Death"",), (""'Til The Cows Come Home"",), (""'Till Death"",), (""'Tis the Season"",), (""'Tis the Season for Love"",), ('(313) Choices',), ('(Day)dreamer',), ('(Dis)Honesty: The Truth About Lies',), ('(I Hate) My Wife',), ('(In) Pacto',), ('(Little) Red Riding Hood',), ('(ne)Zaboravljeni',), ('(No) Identity',), ('(Ordinary) Madness',), ('(Otto)',), ('(Re)Breathe',), ('(Re)Construction',), ('(T)ERROR',), ('(un)conscious',), ('(Working) Holiday',), ('*%&#@! GPS: Pottymouth GPS',), ('*tres',), ('+/-',), ('+1',), ('... at different times',), (""... qu 'ils mangent de la brioche! (Letters from Eden - Blind)"",), ('... Sings Dylan II',), ('... Sings Motown',), ('... with Birthday Cake',), ('...And Counting',), ('...and I Saw Her',), ('...And Then Everything Changed',), (""...And You're Back in the Room"",), ('...If We Are Mortal',), ('...In the Wind',), ('...Och ute är det fortfarande mörkt',), ('...Or for Worse',), ('...When the Bullying Ends',), ('...Where is she now?',), ('.COMedy Live',), ('0,8 Ampère geluk',), ('0-1',), ('0.53',), (""0068 Sniper's Nest"",), ('00:08',), ('0300 Hours',), ('0900',), ('0930 Hours',), ('1 1/2 Hora',), ('1 Building and 40 People Dancing',), ('1 Day with Chinaski',), ('1 in 12',), ('1 in 4',), ('1 Nation',), ('1 Room 4 Girls 2',), ('1 Room 4 Girls: The Perfect Ass',), ('1 World 100 Lonely',), ('1+1=1',), ('1,2,3 Usa',), ('1-800-My-Deity',), ('1.7 Alpha',), ('1/1',), ('1/10 of a second',), ('1/2',), ('10',), ('10 Am',), ('10 comandamenti di lui',), ('10 Crunchy Carrots with Cheryl Silver',), ('10 dage i rummet',), ('10 Days in a Madhouse',), ('10 Days in Delaware',), ('10 Days of Dogs',), ('10 Eco Tips on Saving Water',), ('10 Endrathukulla',), ('10 Grams',), ('10 Hours',), ('10 Jahre Brangelina - Ihre Liebe, ihre Macht, ihre Millionen',), ('10 Little Rubber Ducks',), ('10 Miles Bull Bay',), ('10 Milliarden',), ('10 min short Catapulting Creativity',), ('10 Minutes',), ('10 Minutes',), ('10 Minutes of My Life',), (""10 moments énervants qu'on ne veut plus vivre au quotidien"",), ('10 Most Evil Serial Killers',), ('10 ms',)]",True
IMDB_train_30,imdb,"Find all actors born in "" Los Angeles "" after 1980",return actors; return #1 born in Los Angeles; return #2 born after 1980,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Los Angeles"" and actor_0.birth_year  >  1980 ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'Los Angeles' AND actor.birth_year > 1980,"[('Dalton Abbott',), ('Andrew Abeita',), ('Tyler Abugov',), ('Danny Acosta',), ('Devon Alan',), ('Kyle Alcazar',), ('Ian Alda',), ('Nico Amatullo',), ('Alex Ander',), ('Samuel DeClan Anderson',), ('Kristos Andrews',), ('Barrett Applegate',), ('Luka Apt',), ('Shane Arenal',), ('Gilbert Arenas',), ('Adrian Arminius',), ('Blake Armstrong',), ('Chris Arreguin',), ('Blake Austin',), ('Sam Bacsa',), ('Prince Bagdasarian',), ('Ross Bagley',), ('Justin Baldoni',), ('Alex Band',), ('Joel Barragan',), ('Bo Barrett',), ('Brandon Baruch',), ('Benjamin Beatty',), ('Thomas Beatty',), ('Charley Beil',), ('Jerred Berg',), ('Loren Berman',), ('Henry Bernsen',), ('Blake Berris',), ('Jason Besharat',), ('Mayank Bhatter',), ('William Bibbiani',), ('Bolt Birch',), ('Kelly Blatz',), ('Chris Blount',), ('Kwesi Boakye',), ('Kwame Boateng',), ('Dylan Bocanegra',), ('Christian Boewe',), ('Abram Boise',), ('Kaylan Bolton',), ('Kylan Bolton',), ('Alex Borquez',), ('Zachary Bostrom',), ('Dre Bowie',), ('Nic Bradly',), ('Stephen Bralver',), ('Ryan Brandon',), ('Mark Bransky',), ('Joshua Braud',), ('Justin Braun',), ('James Cullen Bressack',), ('Trevor Brolin',), ('Hayden Bromberg',), ('Sean Brosnan',), ('Evan Brown',), ('Ashlee Buhler',), ('Bryan Burke',), ('Max Burkholder',), ('Paul Butcher',), ('Josh Byrne',), ('Weston Cage',), ('Trevor Glen Campbell',), ('Michael Mike Canon',), ('Travis Cantrell',), ('Alex Carpenter',), ('Cody Carpenter',), ('Cade Carradine',), ('Brian Casey',), ('Dylan Cash',), ('Frank Nicolas Castillo',), ('Daniel Cerny',), ('Jaycee Chan',), ('Galvin Chapman',), ('Zach Charles',), ('John Chernin',), ('Dyllan Christopher',), ('Phoenix Cirillo',), ('Charles Clemmons',), ('Max Clendaniel',), ('Scott Clifton',), ('Dean Collins',), ('Justin Cooper',), ('Alec Coulouris',), ('Anthony Jesse Cruz',), ('Dabier',), ('Jacob Davich',), ('Oliver Davis',), ('Julian de la Celle',), ('Keegan de Lancie',), ('Owen de Lancie',), ('Derrick Deane',), ('Charles DeWayne',), ('Leandro Di Salvo',), ('Jorge Diaz',), ('Nick Diltz',), ('Chioke Dmachi',), ('Spyder Dobrofsky',), ('Jason Dolley',), ('Jason Dolphin',), ('Sean Douglas',), ('Jemal Draco',), ('Juan Jose Dubon',), ('Barnaby Duke',), ('Kristoffer Marquise Ealy',), ('Brando Eaton',), ('Ezra Edmond',), ('Alden Ehrenreich',), ('Sedrick Ellis',), ('Jesse Erwin',), ('Ameer Espy',), ('Brandon Espy',), ('Taylor Estevez',), ('Griffin Reilly Evans',), ('Jason Evigan',), ('Blake McIver Ewing',), ('Ansel Faraj',), ('Austin Farmer',), ('Roshon Fegan',), ('Shawn Fields',), ('Dakota Floeter',), ('Flying Lotus',), ('Sean Flynn',), ('Sam Michael Fox',), ('Ethan Frangella',), ('Derrel Furutani',), ('James Gaisford',), ('Elan Gale',), ('Jess Garcia',), ('Josh Garcia',), ('Andrés Garcia-Lorido',), ('Andrew Garfield',), ('Alexander George',), ('Gib Gerard',), ('Christopher Gerse',), ('Ben Gillespie',), ('Colin Gilliard',), ('Michael Gizienski',), ('Griffin Gluck',), ('Tyler Goeckner-Zoeller',), ('Matt Gogin',), ('Max Goldblatt',), ('Adam Taylor Gordon',), ('Joseph Gordon-Levitt',), ('Alexander Gould',), ('Kosta Grammatis',), ('Ben Graney',), ('Andrew T. Grant',), ('Vincent Grashaw',), ('Christopher Graves',), ('Kevin Graves',), ('Isaac Gray',), ('Trevor Gretzky',), ('Josh Groban',), ('Jarrett Grode',), ('Scott Groff',), ('Alexandro Guerrero',), ('Fabrizio Zacharee Guido',), ('Sahag Gureghian',), ('Raymond Gutierrez',), ('Richard Gutierrez',), ('Trevor Habberstad',), (""Sema'Jay Hall"",), ('Roy Halo',), ('Armie Hammer',), ('Sean Hamrin',), ('Guy Handelman',), ('Chris Hanke',), ('Chet Hanks',), ('Will Harris',), ('Steven Hartman',), ('Daniel Hatkoff',), ('Ryan Hayden',), ('Justin Hazel',), ('Kidus Henok',), ('Matthew Herried',), ('Jimmy Higa',), ('Blake Hightower',), ('Brendan Hill',), ('Jonah Hill',), ('Alec Holden',), ('Myles Holliday',), ('James Holt',), ('Zack Hopkins',), ('Henry Hopper',), ('Marques Houston',), ('Noël John Howard',), ('Dashiell Howell',), ('Clifford Hugo',), ('Ken Hurst',), ('Mark Hurtado',), ('Nick Hyams',), ('Raiden Integra',), ('J-Boog',), (""O'Shea Jackson Jr."",)]","[('Dalton Abbott',), ('Andrew Abeita',), ('Tyler Abugov',), ('Danny Acosta',), ('Devon Alan',), ('Kyle Alcazar',), ('Ian Alda',), ('Nico Amatullo',), ('Alex Ander',), ('Samuel DeClan Anderson',), ('Kristos Andrews',), ('Barrett Applegate',), ('Luka Apt',), ('Shane Arenal',), ('Gilbert Arenas',), ('Adrian Arminius',), ('Blake Armstrong',), ('Chris Arreguin',), ('Blake Austin',), ('Sam Bacsa',), ('Prince Bagdasarian',), ('Ross Bagley',), ('Justin Baldoni',), ('Alex Band',), ('Joel Barragan',), ('Bo Barrett',), ('Brandon Baruch',), ('Benjamin Beatty',), ('Thomas Beatty',), ('Charley Beil',), ('Jerred Berg',), ('Loren Berman',), ('Henry Bernsen',), ('Blake Berris',), ('Jason Besharat',), ('Mayank Bhatter',), ('William Bibbiani',), ('Bolt Birch',), ('Kelly Blatz',), ('Chris Blount',), ('Kwesi Boakye',), ('Kwame Boateng',), ('Dylan Bocanegra',), ('Christian Boewe',), ('Abram Boise',), ('Kaylan Bolton',), ('Kylan Bolton',), ('Alex Borquez',), ('Zachary Bostrom',), ('Dre Bowie',), ('Nic Bradly',), ('Stephen Bralver',), ('Ryan Brandon',), ('Mark Bransky',), ('Joshua Braud',), ('Justin Braun',), ('James Cullen Bressack',), ('Trevor Brolin',), ('Hayden Bromberg',), ('Sean Brosnan',), ('Evan Brown',), ('Ashlee Buhler',), ('Bryan Burke',), ('Max Burkholder',), ('Paul Butcher',), ('Josh Byrne',), ('Weston Cage',), ('Trevor Glen Campbell',), ('Michael Mike Canon',), ('Travis Cantrell',), ('Alex Carpenter',), ('Cody Carpenter',), ('Cade Carradine',), ('Brian Casey',), ('Dylan Cash',), ('Frank Nicolas Castillo',), ('Daniel Cerny',), ('Jaycee Chan',), ('Galvin Chapman',), ('Zach Charles',), ('John Chernin',), ('Dyllan Christopher',), ('Phoenix Cirillo',), ('Charles Clemmons',), ('Max Clendaniel',), ('Scott Clifton',), ('Dean Collins',), ('Justin Cooper',), ('Alec Coulouris',), ('Anthony Jesse Cruz',), ('Dabier',), ('Jacob Davich',), ('Oliver Davis',), ('Julian de la Celle',), ('Keegan de Lancie',), ('Owen de Lancie',), ('Derrick Deane',), ('Charles DeWayne',), ('Leandro Di Salvo',), ('Jorge Diaz',), ('Nick Diltz',), ('Chioke Dmachi',), ('Spyder Dobrofsky',), ('Jason Dolley',), ('Jason Dolphin',), ('Sean Douglas',), ('Jemal Draco',), ('Juan Jose Dubon',), ('Barnaby Duke',), ('Kristoffer Marquise Ealy',), ('Brando Eaton',), ('Ezra Edmond',), ('Alden Ehrenreich',), ('Sedrick Ellis',), ('Jesse Erwin',), ('Ameer Espy',), ('Brandon Espy',), ('Taylor Estevez',), ('Griffin Reilly Evans',), ('Jason Evigan',), ('Blake McIver Ewing',), ('Ansel Faraj',), ('Austin Farmer',), ('Roshon Fegan',), ('Shawn Fields',), ('Dakota Floeter',), ('Flying Lotus',), ('Sean Flynn',), ('Sam Michael Fox',), ('Ethan Frangella',), ('Derrel Furutani',), ('James Gaisford',), ('Elan Gale',), ('Jess Garcia',), ('Josh Garcia',), ('Andrés Garcia-Lorido',), ('Andrew Garfield',), ('Alexander George',), ('Gib Gerard',), ('Christopher Gerse',), ('Ben Gillespie',), ('Colin Gilliard',), ('Michael Gizienski',), ('Griffin Gluck',), ('Tyler Goeckner-Zoeller',), ('Matt Gogin',), ('Max Goldblatt',), ('Adam Taylor Gordon',), ('Joseph Gordon-Levitt',), ('Alexander Gould',), ('Kosta Grammatis',), ('Ben Graney',), ('Andrew T. Grant',), ('Vincent Grashaw',), ('Christopher Graves',), ('Kevin Graves',), ('Isaac Gray',), ('Trevor Gretzky',), ('Josh Groban',), ('Jarrett Grode',), ('Scott Groff',), ('Alexandro Guerrero',), ('Fabrizio Zacharee Guido',), ('Sahag Gureghian',), ('Raymond Gutierrez',), ('Richard Gutierrez',), ('Trevor Habberstad',), (""Sema'Jay Hall"",), ('Roy Halo',), ('Armie Hammer',), ('Sean Hamrin',), ('Guy Handelman',), ('Chris Hanke',), ('Chet Hanks',), ('Will Harris',), ('Steven Hartman',), ('Daniel Hatkoff',), ('Ryan Hayden',), ('Justin Hazel',), ('Kidus Henok',), ('Matthew Herried',), ('Jimmy Higa',), ('Blake Hightower',), ('Brendan Hill',), ('Jonah Hill',), ('Alec Holden',), ('Myles Holliday',), ('James Holt',), ('Zack Hopkins',), ('Henry Hopper',), ('Marques Houston',), ('Noël John Howard',), ('Dashiell Howell',), ('Clifford Hugo',), ('Ken Hurst',), ('Mark Hurtado',), ('Nick Hyams',), ('Raiden Integra',), ('J-Boog',), (""O'Shea Jackson Jr."",)]",True
IMDB_train_31,imdb,"Find all movies by directors born in "" Los Angeles """,return directors; return #1 born in Los Angeles; return movies of #2,"select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.birth_city = ""Los Angeles"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.title FROM directed_by, director, movie WHERE director.did = directed_by.did AND directed_by.msid = movie.mid AND director.did IN ( SELECT director.did FROM director WHERE director.birth_city = 'Los Angeles' )","[('The Missy Files',), ('The Public Life of Sissy Pike: New Girl in Town',), (""Mel Gibson's Unauthorized Video Diary"",), (""Mel Gibson's Video Diary 2: Lethal Weapon 3"",), ('Paparazzi',), ('The Erogenous Zone',), ('The Impostor',), ('After the Past',), ('El Linea',), ('Forever Days',), ('In Mexico',), ('Once Fallen',), (""Peter's Hope"",), ('Pitch Dark: The Lurid Resurrection of Nick Quinn',), ('The Distance',), ('Sticky Fingers',), ('Stolen: One Husband',), ('Never a Day Younger',), ('Vows',), ('Take Action',), ('At Face Value',), ('Hollywood Vampyr',), ('Life of James Douglas',), ('Lucha Libre',), ('Me la banco',), ('Tengo el poder',), ('Instant',), ('Neverland',), ('Voltron: The End',), (""Daddy, I Don't Like It Like This"",), ('The Kid from Left Field',), ('Screwed',), ('Puppet Master II',), ('Ragewar',), ('The Magic Treasure',), ('Auto Matrimony',), (""Dave's Blind Date"",), ('Lunch in Truth or Consequences',), ('Ravenous',), (""3's a Couple"",), ('Blood River',), (""I'm Coming Out"",), ('Moxie',), ('Sign Language',), ('Katt Williams: The Pimp Chronicles Pt. 1',), ('Greener',), ('Only in Miami',), ('The Last Farewell',), ('A Slow Night in Vegas',), ('The Love Monster',), ('Buck Off',), ('Even More Bang for Your Buck',), ('Even More Bang for Your Buck 2',), ('Fucking Different XXY',), ('Sexing the Transman',), ('The Love Butcher',), ('A Viszkis rabló',), ('Armored',), ('Biztosítás',), ('Bohóclövészet',), ('Kontroll',), ('Max the Companion Robot',), ('Metallica Through the Never',), ('Predators',), ('Vacancy',), ('Viszkis',), ('Express Fresh: Outside',), ('Flesh-N-Bone: How Many',), ('Myth or Man: Rifleman, Aka Ellay Khule',), ('Sweet Tooth',), ('Chet Lightning: Earth Wizard',), ('43rd',), ('Boyle Heights',), ('Hollywood Familia',), ('Land of 1,000 Dances',), ('Miracle at Donna',), (""My Father's Love"",), ('The Blessing',), ('Here Now',), ('Kaboom',), ('Mysterious Skin',), ('Nowhere',), ('Smiley Face',), ('Splendor',), ('The Doom Generation',), ('The Living End',), (""The Long Weekend (O'Despair)"",), ('The Womb',), ('This Is How the World Ends',), ('Three Bewildered People in the Night',), ('Totally F***ed Up',), ('White Bird in a Blizzard',), ('In a Box',), ('Chick Flick',), ('Diamonds',), ('Dirty Love',), ('Infamous',), ('Kounterfeit',), ('Margaret Cho: PsyCHO',), ('Po',), ('Ralphie May: Unruly',), (""Sebastian Maniscalco: Aren't You Embarrassed?"",), ('Somebody Marry Me',), ('Thank Heaven',), ('The Policy',), ('Theo Von: No Offense',), ('Tooken',), ('Wreckage',), ('Ca$hino',), ('Mating Rituals 101',), ('Super Clyde',), ('Broke Out',), ('Buster Shows Off',), ('Cash Customers',), ('Lily and Kosmo',), ('Mask Project, Volume 1',), ('Notes from the Acrid Plain with Burton Hoary, Volume 7',), ('Before We Were Kings',), ('Hustlas',), ('Life Sucker',), ('Suite 101',), ('Inglés',), ('David Axelrod Live',), ('Dine & Dash',), ('The Girl Next Door',), ('Keys',), ('Alvin and the Chipmunks Easter Collection',), ('A Cinderella Tale',), ('Abstraction',), ('Blue Calamity',), ('Destination Nowhere',), ('Diverted Eden',), ('Goodbye Teddy',), ('The Condemned Ones',), ('The Dead',), ('Trying to Revive You (Silent Noise Pulse)',), ('Wave Parameters',), ('Assata aka Joanne Chesimard',), ('Events',), ('Lenny Bruce Without Tears',), ('On the Sound',), ('Room Service 75',), ('White Trash',), ('Laughing at My Nightmare',), ('My Last Days: Meet Christopher Aiff',), ('My Last Days: Meet Shane Burcaw',), ('My Last Days: Meet Zach Sobiech',), ('Rebel with a Cause: The Sam Simon Story',), ('The Proposal',), ('Spody Gets His Gunz',), ('Do Not Disturb',), ('Inland Empire',), ('Jesus Hates Zombies',), ('The Flesh',), ('Campus Chillout!',), ('Freezerburn',), ('The Emperor Wears No Clothes',), ('Crystallization',), ('Duma',), ('Fly Away Home',), ('Never Cry Wolf',), ('Nutcracker',), ('Pigs!',), ('Rodeo',), ('Seems Like Only Yesterday',), ('The Black Stallion',), ('The Hello Machine',), ('The Perils of Priscilla',), ('Wind',), ('Good Night Valentino',), ('Babes Behind Bars',), ('Bada$$ Mothaf**kas',), ('Blood Dolls',), ('Blood of 1000 Virgins',), ('Crash and Burn',), ('Crash!',), ('Dangerous Worry Dolls',), (""Dead Man's Hand"",), ('Decadent Evil',), ('Decadent Evil II',), ('DevilDolls',), ('Doctor Mordrid',), ('Doll Graveyard',), ('Dollman vs. Demonic Toys',), (""Dr. Moreau's House of Pain"",), ('Evil Bong',), ('Evil Bong 3-D: The Wrath of Bong',), ('Evil Bong 420',), ('Evil Bong II: King Bong',), ('Evil Bong: High 5',), ('Gingerdead Man Vs. Evil Bong',), ('Head of the Family',), ('Hideous!',), ('Killer Eye: Halloween Haunt',), ('Kings of Cult',), ('Last Foxtrot in Burbank',), ('Meridian',), ('Metalstorm: The Destruction of Jared-Syn',), ('Mystery Monsters',), ('Nazithon: Decadence and Destruction',)]","[('The Missy Files',), ('The Public Life of Sissy Pike: New Girl in Town',), (""Mel Gibson's Unauthorized Video Diary"",), (""Mel Gibson's Video Diary 2: Lethal Weapon 3"",), ('Paparazzi',), ('The Erogenous Zone',), ('The Impostor',), ('After the Past',), ('El Linea',), ('Forever Days',), ('In Mexico',), ('Once Fallen',), (""Peter's Hope"",), ('Pitch Dark: The Lurid Resurrection of Nick Quinn',), ('The Distance',), ('Sticky Fingers',), ('Stolen: One Husband',), ('Never a Day Younger',), ('Vows',), ('Take Action',), ('At Face Value',), ('Hollywood Vampyr',), ('Life of James Douglas',), ('Lucha Libre',), ('Me la banco',), ('Tengo el poder',), ('Instant',), ('Neverland',), ('Voltron: The End',), (""Daddy, I Don't Like It Like This"",), ('The Kid from Left Field',), ('Screwed',), ('Puppet Master II',), ('Ragewar',), ('The Magic Treasure',), ('Auto Matrimony',), (""Dave's Blind Date"",), ('Lunch in Truth or Consequences',), ('Ravenous',), (""3's a Couple"",), ('Blood River',), (""I'm Coming Out"",), ('Moxie',), ('Sign Language',), ('Katt Williams: The Pimp Chronicles Pt. 1',), ('Greener',), ('Only in Miami',), ('The Last Farewell',), ('A Slow Night in Vegas',), ('The Love Monster',), ('Buck Off',), ('Even More Bang for Your Buck',), ('Even More Bang for Your Buck 2',), ('Fucking Different XXY',), ('Sexing the Transman',), ('The Love Butcher',), ('A Viszkis rabló',), ('Armored',), ('Biztosítás',), ('Bohóclövészet',), ('Kontroll',), ('Max the Companion Robot',), ('Metallica Through the Never',), ('Predators',), ('Vacancy',), ('Viszkis',), ('Express Fresh: Outside',), ('Flesh-N-Bone: How Many',), ('Myth or Man: Rifleman, Aka Ellay Khule',), ('Sweet Tooth',), ('Chet Lightning: Earth Wizard',), ('43rd',), ('Boyle Heights',), ('Hollywood Familia',), ('Land of 1,000 Dances',), ('Miracle at Donna',), (""My Father's Love"",), ('The Blessing',), ('Here Now',), ('Kaboom',), ('Mysterious Skin',), ('Nowhere',), ('Smiley Face',), ('Splendor',), ('The Doom Generation',), ('The Living End',), (""The Long Weekend (O'Despair)"",), ('The Womb',), ('This Is How the World Ends',), ('Three Bewildered People in the Night',), ('Totally F***ed Up',), ('White Bird in a Blizzard',), ('In a Box',), ('Chick Flick',), ('Diamonds',), ('Dirty Love',), ('Infamous',), ('Kounterfeit',), ('Margaret Cho: PsyCHO',), ('Po',), ('Ralphie May: Unruly',), (""Sebastian Maniscalco: Aren't You Embarrassed?"",), ('Somebody Marry Me',), ('Thank Heaven',), ('The Policy',), ('Theo Von: No Offense',), ('Tooken',), ('Wreckage',), ('Ca$hino',), ('Mating Rituals 101',), ('Super Clyde',), ('Broke Out',), ('Buster Shows Off',), ('Cash Customers',), ('Lily and Kosmo',), ('Mask Project, Volume 1',), ('Notes from the Acrid Plain with Burton Hoary, Volume 7',), ('Before We Were Kings',), ('Hustlas',), ('Life Sucker',), ('Suite 101',), ('Inglés',), ('David Axelrod Live',), ('Dine & Dash',), ('The Girl Next Door',), ('Keys',), ('Alvin and the Chipmunks Easter Collection',), ('A Cinderella Tale',), ('Abstraction',), ('Blue Calamity',), ('Destination Nowhere',), ('Diverted Eden',), ('Goodbye Teddy',), ('The Condemned Ones',), ('The Dead',), ('Trying to Revive You (Silent Noise Pulse)',), ('Wave Parameters',), ('Assata aka Joanne Chesimard',), ('Events',), ('Lenny Bruce Without Tears',), ('On the Sound',), ('Room Service 75',), ('White Trash',), ('Laughing at My Nightmare',), ('My Last Days: Meet Christopher Aiff',), ('My Last Days: Meet Shane Burcaw',), ('My Last Days: Meet Zach Sobiech',), ('Rebel with a Cause: The Sam Simon Story',), ('The Proposal',), ('Spody Gets His Gunz',), ('Do Not Disturb',), ('Inland Empire',), ('Jesus Hates Zombies',), ('The Flesh',), ('Campus Chillout!',), ('Freezerburn',), ('The Emperor Wears No Clothes',), ('Crystallization',), ('Duma',), ('Fly Away Home',), ('Never Cry Wolf',), ('Nutcracker',), ('Pigs!',), ('Rodeo',), ('Seems Like Only Yesterday',), ('The Black Stallion',), ('The Hello Machine',), ('The Perils of Priscilla',), ('Wind',), ('Good Night Valentino',), ('Babes Behind Bars',), ('Bada$$ Mothaf**kas',), ('Blood Dolls',), ('Blood of 1000 Virgins',), ('Crash and Burn',), ('Crash!',), ('Dangerous Worry Dolls',), (""Dead Man's Hand"",), ('Decadent Evil',), ('Decadent Evil II',), ('DevilDolls',), ('Doctor Mordrid',), ('Doll Graveyard',), ('Dollman vs. Demonic Toys',), (""Dr. Moreau's House of Pain"",), ('Evil Bong',), ('Evil Bong 3-D: The Wrath of Bong',), ('Evil Bong 420',), ('Evil Bong II: King Bong',), ('Evil Bong: High 5',), ('Gingerdead Man Vs. Evil Bong',), ('Head of the Family',), ('Hideous!',), ('Killer Eye: Halloween Haunt',), ('Kings of Cult',), ('Last Foxtrot in Burbank',), ('Meridian',), ('Metalstorm: The Destruction of Jared-Syn',), ('Mystery Monsters',), ('Nazithon: Decadence and Destruction',)]",True
IMDB_train_32,imdb,"What company produced the movie "" Juno "" ?",return the movie Juno; return company that produced #1,"select company_0.name from company as company_0, copyright as copyright_0, movie as movie_0 where movie_0.title = ""Juno"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT company.name FROM movie, copyright, company WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Juno' )","[('Fox Searchlight Pictures',), ('Mandate Pictures',), ('Mr. Mudd',)]","[('Fox Searchlight Pictures',), ('Mandate Pictures',), ('Mr. Mudd',)]",True
IMDB_train_33,imdb,Find all movies that were produced by Netflix,return movies; return #1 produced by Netflix,"select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = ""Netflix"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, copyright, company WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND company.name = 'Netflix'","[('13 Minutes',), ('Amanda Knox',), ('Amar',), ('Amateur',), ('Bright',), ('Crouching Tiger, Hidden Dragon: Sword of Destiny',), ('Divanation',), ('Ever After High: Way Too Wonderland',), ('First They Killed My Father: A Daughter of Cambodia Remembers',), ('Joe Rogan: Live',), ('Marco Polo: One Hundred Eyes',), (""Mike Epps: Don't Take It Personal"",), ('Oscillating Fan for Your Home',), ('Our Souls at Night',), ('Reggie Watts: Spatial',), ('Smosh: The Movie',), (""That's My Time: The Todd Lynn Story"",), ('The Comedians of Comedy',), ('The Panama Papers',), ('This Film Is Not Yet Rated',), ('Virunga: Gorillas in Peril',), ('War Machine',), ('What Happened, Miss Simone?',), (""Winter on Fire: Ukraine's Fight for Freedom"",), ('XOXO',), ('Zach Galifianakis: Live at the Purple Onion',)]","[('13 Minutes',), ('Amanda Knox',), ('Amar',), ('Amateur',), ('Bright',), ('Crouching Tiger, Hidden Dragon: Sword of Destiny',), ('Divanation',), ('Ever After High: Way Too Wonderland',), ('First They Killed My Father: A Daughter of Cambodia Remembers',), ('Joe Rogan: Live',), ('Marco Polo: One Hundred Eyes',), (""Mike Epps: Don't Take It Personal"",), ('Oscillating Fan for Your Home',), ('Our Souls at Night',), ('Reggie Watts: Spatial',), ('Smosh: The Movie',), (""That's My Time: The Todd Lynn Story"",), ('The Comedians of Comedy',), ('The Panama Papers',), ('This Film Is Not Yet Rated',), ('Virunga: Gorillas in Peril',), ('War Machine',), ('What Happened, Miss Simone?',), (""Winter on Fire: Ukraine's Fight for Freedom"",), ('XOXO',), ('Zach Galifianakis: Live at the Purple Onion',)]",True
IMDB_train_34,imdb,"Find all actors who were born in "" New York City "" in 1984",return actors; return #1 born in New York City; return #2 born in 1984,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""New York City"" and actor_0.birth_year = 1984 ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'New York City' AND actor.birth_year = 1984,"[('Anthony Ashmore',), ('Alex Billig',), ('Rocky Brito',), ('Rob Brown',), ('Paul Dano',), ('Barnaby De La Cruz',), ('Adrian Emmanuel',), ('Anthony Fazio',), ('Nicky Feliz',), ('Chris Ferro',), ('Remington Franklin',), ('Ethan Goldsmith',), ('Sérgio Hondjakoff',), ('Wolf Hudson',), ('Hunter Johansson',), ('Cullen Jones',), ('Tom Kemnitz Jr.',), ('Adam Lamberg',), ('Josh Malek',), ('Michael Mcallister Jr.',), ('Tony Mui',), ('Jeff Orlowski',), ('Max Pomeranc',), ('Victor Rasuk',), ('Nick Raynes',), ('Joshua Safdie',), ('Yaniv Schulman',), ('Jake M. Smith',), ('Orion Solarion',), ('James Spector',), ('Sean Stone',), ('Jake Thompson',), ('Nik Tyler',), ('Geoff Yong',), ('Nina Arianda',), ('Allie Calman',), ('Quinn Culkin',), ('Paz de la Huerta',), ('Noureen DeWulf',), ('Melonie Diaz',), ('Alexis Dziena',), ('Amanda Evora',), ('Lisa Flores',), ('Allison Hirschlag',), ('Chelsea Holland',), ('Scarlett Johansson',), ('Samantha Maldonado',), ('Elizabeth Masucci',), ('Lili Mirojnick',), ('Jessica Munch',), ('Reese Nanavati',), ('Ashley Peldon',), ('Chanty Sok',), ('Olivia Wilde',), ('Sita Young',), ('Quinton Aaron',)]","[('Anthony Ashmore',), ('Alex Billig',), ('Rocky Brito',), ('Rob Brown',), ('Paul Dano',), ('Barnaby De La Cruz',), ('Adrian Emmanuel',), ('Anthony Fazio',), ('Nicky Feliz',), ('Chris Ferro',), ('Remington Franklin',), ('Ethan Goldsmith',), ('Sérgio Hondjakoff',), ('Wolf Hudson',), ('Hunter Johansson',), ('Cullen Jones',), ('Tom Kemnitz Jr.',), ('Adam Lamberg',), ('Josh Malek',), ('Michael Mcallister Jr.',), ('Tony Mui',), ('Jeff Orlowski',), ('Max Pomeranc',), ('Victor Rasuk',), ('Nick Raynes',), ('Joshua Safdie',), ('Yaniv Schulman',), ('Jake M. Smith',), ('Orion Solarion',), ('James Spector',), ('Sean Stone',), ('Jake Thompson',), ('Nik Tyler',), ('Geoff Yong',), ('Nina Arianda',), ('Allie Calman',), ('Quinn Culkin',), ('Paz de la Huerta',), ('Noureen DeWulf',), ('Melonie Diaz',), ('Alexis Dziena',), ('Amanda Evora',), ('Lisa Flores',), ('Allison Hirschlag',), ('Chelsea Holland',), ('Scarlett Johansson',), ('Samantha Maldonado',), ('Elizabeth Masucci',), ('Lili Mirojnick',), ('Jessica Munch',), ('Reese Nanavati',), ('Ashley Peldon',), ('Chanty Sok',), ('Olivia Wilde',), ('Sita Young',), ('Quinton Aaron',)]",True
IMDB_train_35,imdb,Find all movies about Persians,return Persians; return movies about #1,"select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""Persians"" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT movie.mid FROM movie, tags, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'Persians' )",[],[],True
IMDB_train_36,imdb,"Who are the actors born in "" New York City "" after 1990 ?",return actors; return #1 born in New York City; return #2 born after 1990,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""New York City"" and actor_0.birth_year  >  1990 ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'New York City' AND actor.birth_year > 1990,"[('Vinny Alfano',), ('Moises Arias',), ('Jake T. Austin',), ('David Benger',), ('Derek Binsack',), ('Jonah Bobo',), ('Spencer Breslin',), ('Liam Broggy',), ('Jordan Burt',), ('Conor Carroll',), ('Harrison Chad',), ('Miles Chandler',), ('Zachary Clarke',), ('Milan Coyula',), ('Zach Cumer',), ('Seamus Davey-Fitzpatrick',), ('Pete Davidson',), ('Gabriel-Kane Day Lewis',), ('Clifford Lee Dickson',), ('Jamie Dolan',), ('Jeremy Fernandez',), ('Lucien Flores',), ('Brian Gilbert',), ('Alexander Goebbel',), ('Nolan Gould',), ('Eric Grossfeld',), ('Cole Hawkins',), ('Ian Hyland',), ('Dave Jia',), ('Matt Kempner',), ('Zuher Khan',), ('Owen Kline',), ('Jacob Kogan',), ('Lucas Leguizamo',), ('David Levi',), ('Gus Lewis',), ('Cody Lohan',), ('Leo Lungaro',), ('Marc Mandeville',), ('Leopold Manswell',), ('Jacob Maren',), ('Ben Matusow',), ('Timothy McCartney',), ('Beckett Melville',), ('Alexander Mercier',), ('Nicholas Merkerson',), ('Jonah Meyerson',), ('Stanley Nallem',), ('Anthony Del Negro',), (""Dylan O'Brien"",), ('Michael Oliver',), ('Antonio Ortiz',), ('Jesus Padilla',), ('Aaron Refvem',), ('Miles Robbins',), ('Tre C. Roberts',), ('Michael Christopher Rodney',), ('Jack Rovello',), ('Scott P. Sasso',), ('Spencer Scott',), ('Neel Sethi',), ('Tyler Silvers',), ('Isaac Jin Solstein',), ('Larry Sulner',), ('Richard Switzer',), ('Daniel Tay',), ('Leon Thomas III',), ('Gone Thursday',), ('Adam Turkel',), ('Diego Z. Turturro',), ('Christopher Jordan Wallace',), ('Eric Wilke',), ('Alex Wolff',), ('Gabriela Aisenberg',), ('Melissa Amber',), ('Leanna Archer',), ('Marlene Artov',), ('Amoni B.',), ('Azealia Banks',), ('Maya N. Blake',), ('Abigail Breslin',), ('Olivia Brown',), ('Raquel Castro',), ('Francesca Chaney',), ('Jessica Cherniak',), ('Rachel Covey',), ('Blair Dinucci',), ('Taylor Dior',), ('Grace Dunham',), ('India Ennenga',), ('Tiffany Evans',), ('Julia Garner',), ('Ashley Gerasimovich',), ('Paulina Gerzon',), ('Chelsea Harkins',), ('Calista Hill',), ('Gabriella Hill',), ('Madeline Hill',), ('Skai Jackson',), ('Ruby Jerins',), ('Sterling Jerins',), ('Lydia Jordan',), ('Elena Kampouris',), ('Serena Kerrigan',), ('Greta Kline',), ('Allegra Leguizamo',), ('Mandy Leon',), ('Sheryl Lipuma',), ('Ali Lohan',), ('Cadence Lux',), ('Kayla Maisonet',), ('Michaela McPherson',), (""Shelby O'Connell"",), ('Ursula Parker',), ('Nicole Patrick',), ('Taylor Patterson',), ('Nicolette Pierini',), ('Charlie Ray',), ('Katherine Rose Riley',), ('Emily Robinson',), ('Tatsumi Romano',), ('Saoirse Ronan',), ('Gracie Sbarge',), ('Scarlett Sperduto',), ('Stephanie Thiel',), ('Kianna Underwood',), ('Wyntergrace Williams',)]","[('Vinny Alfano',), ('Moises Arias',), ('Jake T. Austin',), ('David Benger',), ('Derek Binsack',), ('Jonah Bobo',), ('Spencer Breslin',), ('Liam Broggy',), ('Jordan Burt',), ('Conor Carroll',), ('Harrison Chad',), ('Miles Chandler',), ('Zachary Clarke',), ('Milan Coyula',), ('Zach Cumer',), ('Seamus Davey-Fitzpatrick',), ('Pete Davidson',), ('Gabriel-Kane Day Lewis',), ('Clifford Lee Dickson',), ('Jamie Dolan',), ('Jeremy Fernandez',), ('Lucien Flores',), ('Brian Gilbert',), ('Alexander Goebbel',), ('Nolan Gould',), ('Eric Grossfeld',), ('Cole Hawkins',), ('Ian Hyland',), ('Dave Jia',), ('Matt Kempner',), ('Zuher Khan',), ('Owen Kline',), ('Jacob Kogan',), ('Lucas Leguizamo',), ('David Levi',), ('Gus Lewis',), ('Cody Lohan',), ('Leo Lungaro',), ('Marc Mandeville',), ('Leopold Manswell',), ('Jacob Maren',), ('Ben Matusow',), ('Timothy McCartney',), ('Beckett Melville',), ('Alexander Mercier',), ('Nicholas Merkerson',), ('Jonah Meyerson',), ('Stanley Nallem',), ('Anthony Del Negro',), (""Dylan O'Brien"",), ('Michael Oliver',), ('Antonio Ortiz',), ('Jesus Padilla',), ('Aaron Refvem',), ('Miles Robbins',), ('Tre C. Roberts',), ('Michael Christopher Rodney',), ('Jack Rovello',), ('Scott P. Sasso',), ('Spencer Scott',), ('Neel Sethi',), ('Tyler Silvers',), ('Isaac Jin Solstein',), ('Larry Sulner',), ('Richard Switzer',), ('Daniel Tay',), ('Leon Thomas III',), ('Gone Thursday',), ('Adam Turkel',), ('Diego Z. Turturro',), ('Christopher Jordan Wallace',), ('Eric Wilke',), ('Alex Wolff',), ('Gabriela Aisenberg',), ('Melissa Amber',), ('Leanna Archer',), ('Marlene Artov',), ('Amoni B.',), ('Azealia Banks',), ('Maya N. Blake',), ('Abigail Breslin',), ('Olivia Brown',), ('Raquel Castro',), ('Francesca Chaney',), ('Jessica Cherniak',), ('Rachel Covey',), ('Blair Dinucci',), ('Taylor Dior',), ('Grace Dunham',), ('India Ennenga',), ('Tiffany Evans',), ('Julia Garner',), ('Ashley Gerasimovich',), ('Paulina Gerzon',), ('Chelsea Harkins',), ('Calista Hill',), ('Gabriella Hill',), ('Madeline Hill',), ('Skai Jackson',), ('Ruby Jerins',), ('Sterling Jerins',), ('Lydia Jordan',), ('Elena Kampouris',), ('Serena Kerrigan',), ('Greta Kline',), ('Allegra Leguizamo',), ('Mandy Leon',), ('Sheryl Lipuma',), ('Ali Lohan',), ('Cadence Lux',), ('Kayla Maisonet',), ('Michaela McPherson',), (""Shelby O'Connell"",), ('Ursula Parker',), ('Nicole Patrick',), ('Taylor Patterson',), ('Nicolette Pierini',), ('Charlie Ray',), ('Katherine Rose Riley',), ('Emily Robinson',), ('Tatsumi Romano',), ('Saoirse Ronan',), ('Gracie Sbarge',), ('Scarlett Sperduto',), ('Stephanie Thiel',), ('Kianna Underwood',), ('Wyntergrace Williams',)]",True
IMDB_train_37,imdb,"Find all movies produced by "" Walt Disney "" after 2010",return movies; return #1 produced by Walt Disney; return #2 after 2010,"select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = ""Walt Disney"" and movie_0.release_year  >  2010 and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid","SELECT movie.mid FROM movie, copyright, company WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND company.name = 'Walt Disney' AND movie.release_year > 2010",[],[],True
IMDB_train_38,imdb,"Find all movies featuring "" Benedict Cumberbatch """,return Benedict Cumberbatch; return movies featuring #1,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Benedict Cumberbatch"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM cast, actor, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Benedict Cumberbatch' )","[('2014 Laureus World Sports Awards',), ('2014 MTV Movie Awards',), ('20th Annual Screen Actors Guild Awards',), ('70th Golden Globe Awards',), ('72nd Golden Globe Awards',), ('72nd Golden Globe Awards',), ('9 Kisses',), ('August: Osage County',), ('Black Mass',), ('Breakthrough Prize 2014',), ('Creation',), ('Doctor Strange',), ('Dunkirk',), ('Four Lions',), ('Hawking',), ('National Theatre Live: Frankenstein',), ('National Theatre Live: Frankenstein',), ('National Theatre Live: Hamlet',), ('Shakespeare Live! From the RSC',), ('Sherlock Uncovered',), ('The 21st Annual Screen Actors Guild Awards',), ('The 64th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 8th Annual CNN Heroes: An All-Star Tribute',), ('The Big Fat Quiz of the Year',), ('The Big Fat Quiz of the Year',), ('The Oscars',), ('The Oscars',), ('The Real Sherlock Holmes',), ('Tinker Tailor Soldier Spy',), ('To Kill a King',), ('War Horse',), ('Zoolander 2',)]","[('2014 Laureus World Sports Awards',), ('2014 MTV Movie Awards',), ('20th Annual Screen Actors Guild Awards',), ('70th Golden Globe Awards',), ('72nd Golden Globe Awards',), ('72nd Golden Globe Awards',), ('9 Kisses',), ('August: Osage County',), ('Black Mass',), ('Breakthrough Prize 2014',), ('Creation',), ('Doctor Strange',), ('Dunkirk',), ('Four Lions',), ('Hawking',), ('National Theatre Live: Frankenstein',), ('National Theatre Live: Frankenstein',), ('National Theatre Live: Hamlet',), ('Shakespeare Live! From the RSC',), ('Sherlock Uncovered',), ('The 21st Annual Screen Actors Guild Awards',), ('The 64th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 8th Annual CNN Heroes: An All-Star Tribute',), ('The Big Fat Quiz of the Year',), ('The Big Fat Quiz of the Year',), ('The Oscars',), ('The Oscars',), ('The Real Sherlock Holmes',), ('Tinker Tailor Soldier Spy',), ('To Kill a King',), ('War Horse',), ('Zoolander 2',)]",True
IMDB_train_39,imdb,"Which movies did "" Alfred Hitchcock "" direct ?",return Alfred Hitchcock; return movies that #1 direct,"select movie_0.title from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Alfred Hitchcock"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.title FROM directed_by, director, movie WHERE director.did = directed_by.did AND directed_by.msid = movie.mid AND director.name IN ( SELECT director.name FROM director WHERE director.name = 'Alfred Hitchcock' )","[('Always Tell Your Wife',), ('An Elastic Affair',), ('Aventure malgache',), ('Blackmail',), ('Bon Voyage',), ('Champagne',), ('Dial M for Murder',), ('Downhill',), ('Easy Virtue',), ('Elstree Calling',), ('Family Plot',), ('Foreign Correspondent',), ('Frenzy',), ('I Confess',), ('Jamaica Inn',), ('Juno and the Paycock',), ('Lifeboat',), ('Marnie',), ('Mary',), ('Memory of the Camps',), ('Mr. & Mrs. Smith',), ('Murder!',), ('North by Northwest',), ('Notorious',), ('Number 13',), ('Number Seventeen',), ('Psycho',), ('Rear Window',), ('Rebecca',), ('Rich and Strange',), ('Rope',), ('Sabotage',), ('Saboteur',), ('Secret Agent',), ('Shadow of a Doubt',), ('Sound Test for Blackmail',), ('Spellbound',), ('Stage Fright',), ('Strangers on a Train',), ('Suspicion',), ('The 39 Steps',), ('The Birds',), (""The Farmer's Wife"",), ('The Fighting Generation',), ('The Lady Vanishes',), ('The Lodger: A Story of the London Fog',), ('The Man Who Knew Too Much',), ('The Man Who Knew Too Much',), ('The Manxman',), ('The Mountain Eagle',), ('The Paradine Case',), ('The Pleasure Garden',), ('The Ring',), ('The Skin Game',), ('The Trouble with Harry',), ('The Wrong Man',), ('To Catch a Thief',), ('Topaz',), ('Torn Curtain',), ('Under Capricorn',), ('Vertigo',), ('Waltzes from Vienna',), ('Watchtower Over Tomorrow',), ('Young and Innocent',)]","[('Always Tell Your Wife',), ('An Elastic Affair',), ('Aventure malgache',), ('Blackmail',), ('Bon Voyage',), ('Champagne',), ('Dial M for Murder',), ('Downhill',), ('Easy Virtue',), ('Elstree Calling',), ('Family Plot',), ('Foreign Correspondent',), ('Frenzy',), ('I Confess',), ('Jamaica Inn',), ('Juno and the Paycock',), ('Lifeboat',), ('Marnie',), ('Mary',), ('Memory of the Camps',), ('Mr. & Mrs. Smith',), ('Murder!',), ('North by Northwest',), ('Notorious',), ('Number 13',), ('Number Seventeen',), ('Psycho',), ('Rear Window',), ('Rebecca',), ('Rich and Strange',), ('Rope',), ('Sabotage',), ('Saboteur',), ('Secret Agent',), ('Shadow of a Doubt',), ('Sound Test for Blackmail',), ('Spellbound',), ('Stage Fright',), ('Strangers on a Train',), ('Suspicion',), ('The 39 Steps',), ('The Birds',), (""The Farmer's Wife"",), ('The Fighting Generation',), ('The Lady Vanishes',), ('The Lodger: A Story of the London Fog',), ('The Man Who Knew Too Much',), ('The Man Who Knew Too Much',), ('The Manxman',), ('The Mountain Eagle',), ('The Paradine Case',), ('The Pleasure Garden',), ('The Ring',), ('The Skin Game',), ('The Trouble with Harry',), ('The Wrong Man',), ('To Catch a Thief',), ('Topaz',), ('Torn Curtain',), ('Under Capricorn',), ('Vertigo',), ('Waltzes from Vienna',), ('Watchtower Over Tomorrow',), ('Young and Innocent',)]",True
IMDB_train_4,imdb,"Find all actors born in "" Los Angeles """,return actors; return #1 born in Los Angeles,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Los Angeles"" ;",SELECT actor.name FROM actor WHERE actor.birth_city = 'Los Angeles',"[('Paul Abascal',), ('Dalton Abbott',), ('Kareem Abdul-Jabbar',), ('Andrew Abeita',), ('Alan Abelew',), ('Phil Abrams',), ('Tyler Abugov',), ('Forrest J. Ackerman',), ('Danny Acosta',), ('Arthur Adams',), ('Ash Adams',), ('Carroll Adams',), ('Jason Leland Adams',), ('Jay Adams',), ('Joe Adams',), ('Peter Adams',), ('Phil Adams',), ('Cisco Adler',), ('Matt Adler',), ('Richmond L. Aguilar',), ('Philip Ahn',), ('Philson Ahn',), ('Ralph Ahn',), ('Steve Akahoshi',), ('Devon Alan',), ('Edward Albert',), ('Alex Albrecht',), ('Gerald Albright',), ('Kyle Alcazar',), ('Ian Alda',), ('John Alden',), ('William Aldrich',), ('John Ales',), ('Art Alexakis',), ('Dwayne Alexandre',), ('David Allen',), ('Gene Allen',), ('Larry Allen',), ('Melvin F. Allen',), ('Thad Allen',), ('David Alpert',), ('Herb Alpert',), ('Matthew R. Altman',), ('Fernando Alvarado',), ('Jose Alvarado',), ('Nico Amatullo',), ('Morgan Ames',), ('Alex Ander',), ('Glenn Anders',), ('Shedrack Anderson III',), ('Anthony Anderson',), ('Don Anderson',), ('Garret Anderson',), ('Jamal Anderson',), ('Samuel DeClan Anderson',), ('Shayne Anderson',), ('Steven Anderson',), ('Tommy Andre',), ('Kristos Andrews',), ('Mike Andrews',), ('Robert Andrews',), ('Mikel Angel',), ('Vincent Angelo',), ('Kenneth Anspach',), ('Ant',), ('Nimród Antal',), ('John Antony',), ('Arthur Aoyama',), ('Barrett Applegate',), ('Stanley Appleman',), ('Luka Apt',), ('Frank Aragon',), ('Jesse Aragon',), ('Gregg Araki',), ('Jack Aranson',), ('Shane Arenal',), ('Gilbert Arenas',), ('Robert Armin',), ('Adrian Arminius',), ('Blake Armstrong',), ('Byron Armstrong',), ('Govind Armstrong',), ('Desi Arnaz Jr.',), ('Paul Thomas Arnold',), ('Rod Arrants',), ('Chris Arreguin',), ('Brian Asawa',), ('Jeremy Asher',), ('John Asher',), ('Emmett Ashford',), ('Benno Ashrafi',), ('Mackenzie Astin',), ('Richard Atckison',), ('Ray Atkinson',), ('Sebastian Attie',), ('Jensen Atwood',), ('Robert August',), ('Sherman Augustus',), ('Blake Austin',), ('Carl Austin',), ('Frank Burt Avalon',), ('Loren Avedon',), ('Jackie Averill',), ('Lloyd Avery II',), ('Brian Avery',), ('Eric Avery',), ('Frankie Avina',), ('Gabriel Avina',), ('Ruben Avitia',), ('Jack Axelrod',), ('Manuel Ayulo',), ('Richard Azurdia',), ('Christopher Babers',), ('Rex Babin',), ('Baby LeRoy',), ('Michael Bacall',), ('Don Bachardy',), ('Shelby Bacon',), ('Sam Bacsa',), ('Ross Bagdasarian Jr.',), ('Prince Bagdasarian',), ('Ross Bagley',), ('David Alan Bailey',), ('Richard Bailey',), (""Richard 'Dr.' Baily"",), ('David Bair',), ('Jon Robin Baitz',), ('Bob Baker',), ('Fred Baker',), ('William Bakewell',), ('Justin Baldoni',), ('A. Michael Baldwin',), ('Rideaux Baldwin',), ('Eric Balfour',), ('Art Balinger',), ('Ben Baller',), ('Edoardo Ballerini',), ('Alex Band',), ('Charles Band',), ('Richard Band',), ('Johnny Bangert',), ('Frank Bank',), ('Arnold Bankston',), ('Jack Bannon',), ('Jack Banta',), ('Mike Barker',), ('Steve Barnett',), ('H. Michael Barnitz',), ('H.B. Barnum III',), ('Todd Baron',), ('Joel Barragan',), ('Bo Barrett',), ('Dale Barringer',), ('Joe Barry',), ('Wesley Barry',), ('John Drew Barrymore',), ('Brandon Baruch',), ('Gary Basey',), ('Ronald Bass',), ('Charles Bates',), ('Earl Battey',), ('Chris Bauer',), ('Alan Baumgarten',), ('Craig R. Baxley',), ('Eugene Baxter',), ('Michael Bay',), ('Gary Bayer',), (""Matthew 'Stymie' Beard"",), ('Tyler Bearde',), ('Benjamin Beatty',), ('Thomas Beatty',), ('Christopher Beaumont',), ('Beck',), ('Tony Becker',), ('Richard P. Beedle',), ('Bob Beemer',), ('Bucklind Beery',), ('Noah Beggs',), ('Ed Begley Jr.',), ('Roger Behrstock',), ('Charley Beil',), ('Harold Belfer',), ('Jordan Belfi',), ('Eric Allen Bell',), ('Gurney Bell',), ('Hank Bell',), ('Christian Benz Belnavis',), ('George Belotti',), ('Bobker Ben Ali',), ('Scott Ben-Yashar',), ('Don Bender',), ('Nick Benedict',), ('Ross Benjamin',), ('Joseph Bennett',), ('John Beradino',), ('Jerred Berg',), ('Kris Bergen',), ('Daniel M. Berger',), ('Keith Berger',), ('Peter E. Berger',)]","[('Paul Abascal',), ('Dalton Abbott',), ('Kareem Abdul-Jabbar',), ('Andrew Abeita',), ('Alan Abelew',), ('Phil Abrams',), ('Tyler Abugov',), ('Forrest J. Ackerman',), ('Danny Acosta',), ('Arthur Adams',), ('Ash Adams',), ('Carroll Adams',), ('Jason Leland Adams',), ('Jay Adams',), ('Joe Adams',), ('Peter Adams',), ('Phil Adams',), ('Cisco Adler',), ('Matt Adler',), ('Richmond L. Aguilar',), ('Philip Ahn',), ('Philson Ahn',), ('Ralph Ahn',), ('Steve Akahoshi',), ('Devon Alan',), ('Edward Albert',), ('Alex Albrecht',), ('Gerald Albright',), ('Kyle Alcazar',), ('Ian Alda',), ('John Alden',), ('William Aldrich',), ('John Ales',), ('Art Alexakis',), ('Dwayne Alexandre',), ('David Allen',), ('Gene Allen',), ('Larry Allen',), ('Melvin F. Allen',), ('Thad Allen',), ('David Alpert',), ('Herb Alpert',), ('Matthew R. Altman',), ('Fernando Alvarado',), ('Jose Alvarado',), ('Nico Amatullo',), ('Morgan Ames',), ('Alex Ander',), ('Glenn Anders',), ('Shedrack Anderson III',), ('Anthony Anderson',), ('Don Anderson',), ('Garret Anderson',), ('Jamal Anderson',), ('Samuel DeClan Anderson',), ('Shayne Anderson',), ('Steven Anderson',), ('Tommy Andre',), ('Kristos Andrews',), ('Mike Andrews',), ('Robert Andrews',), ('Mikel Angel',), ('Vincent Angelo',), ('Kenneth Anspach',), ('Ant',), ('Nimród Antal',), ('John Antony',), ('Arthur Aoyama',), ('Barrett Applegate',), ('Stanley Appleman',), ('Luka Apt',), ('Frank Aragon',), ('Jesse Aragon',), ('Gregg Araki',), ('Jack Aranson',), ('Shane Arenal',), ('Gilbert Arenas',), ('Robert Armin',), ('Adrian Arminius',), ('Blake Armstrong',), ('Byron Armstrong',), ('Govind Armstrong',), ('Desi Arnaz Jr.',), ('Paul Thomas Arnold',), ('Rod Arrants',), ('Chris Arreguin',), ('Brian Asawa',), ('Jeremy Asher',), ('John Asher',), ('Emmett Ashford',), ('Benno Ashrafi',), ('Mackenzie Astin',), ('Richard Atckison',), ('Ray Atkinson',), ('Sebastian Attie',), ('Jensen Atwood',), ('Robert August',), ('Sherman Augustus',), ('Blake Austin',), ('Carl Austin',), ('Frank Burt Avalon',), ('Loren Avedon',), ('Jackie Averill',), ('Lloyd Avery II',), ('Brian Avery',), ('Eric Avery',), ('Frankie Avina',), ('Gabriel Avina',), ('Ruben Avitia',), ('Jack Axelrod',), ('Manuel Ayulo',), ('Richard Azurdia',), ('Christopher Babers',), ('Rex Babin',), ('Baby LeRoy',), ('Michael Bacall',), ('Don Bachardy',), ('Shelby Bacon',), ('Sam Bacsa',), ('Ross Bagdasarian Jr.',), ('Prince Bagdasarian',), ('Ross Bagley',), ('David Alan Bailey',), ('Richard Bailey',), (""Richard 'Dr.' Baily"",), ('David Bair',), ('Jon Robin Baitz',), ('Bob Baker',), ('Fred Baker',), ('William Bakewell',), ('Justin Baldoni',), ('A. Michael Baldwin',), ('Rideaux Baldwin',), ('Eric Balfour',), ('Art Balinger',), ('Ben Baller',), ('Edoardo Ballerini',), ('Alex Band',), ('Charles Band',), ('Richard Band',), ('Johnny Bangert',), ('Frank Bank',), ('Arnold Bankston',), ('Jack Bannon',), ('Jack Banta',), ('Mike Barker',), ('Steve Barnett',), ('H. Michael Barnitz',), ('H.B. Barnum III',), ('Todd Baron',), ('Joel Barragan',), ('Bo Barrett',), ('Dale Barringer',), ('Joe Barry',), ('Wesley Barry',), ('John Drew Barrymore',), ('Brandon Baruch',), ('Gary Basey',), ('Ronald Bass',), ('Charles Bates',), ('Earl Battey',), ('Chris Bauer',), ('Alan Baumgarten',), ('Craig R. Baxley',), ('Eugene Baxter',), ('Michael Bay',), ('Gary Bayer',), (""Matthew 'Stymie' Beard"",), ('Tyler Bearde',), ('Benjamin Beatty',), ('Thomas Beatty',), ('Christopher Beaumont',), ('Beck',), ('Tony Becker',), ('Richard P. Beedle',), ('Bob Beemer',), ('Bucklind Beery',), ('Noah Beggs',), ('Ed Begley Jr.',), ('Roger Behrstock',), ('Charley Beil',), ('Harold Belfer',), ('Jordan Belfi',), ('Eric Allen Bell',), ('Gurney Bell',), ('Hank Bell',), ('Christian Benz Belnavis',), ('George Belotti',), ('Bobker Ben Ali',), ('Scott Ben-Yashar',), ('Don Bender',), ('Nick Benedict',), ('Ross Benjamin',), ('Joseph Bennett',), ('John Beradino',), ('Jerred Berg',), ('Kris Bergen',), ('Daniel M. Berger',), ('Keith Berger',), ('Peter E. Berger',)]",True
IMDB_train_40,imdb,Find all movies about Autism,return Autism; return movies about #1,"select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""Autism"" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT movie.mid FROM movie, tags, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'Autism' )",[],[],True
IMDB_train_41,imdb,"Find all movies directed by "" Woody Allen "" and featuring "" Scarlett Johansson """,return movies; return #1 directed by Woody Allen; return #1 featuring Scarlett Johansson; return #1 in both #2 and #3,"select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = ""Scarlett Johansson"" and director_0.name = ""Woody Allen"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT DISTINCT movie.title FROM director, directed_by, actor, movie, cast WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid = cast.msid AND cast.aid = actor.aid AND director.name = 'Woody Allen' AND actor.name = 'Scarlett Johansson'","[('Match Point',), ('Scoop',)]","[('Match Point',), ('Scoop',)]",True
IMDB_train_42,imdb,"What are all the tv series created by "" Shonda Rhimes "" ?",return tv series; return #1 created by Shonda Rhimes,"select tv_series_0.title from made_by as made_by_0, producer as producer_0, tv_series as tv_series_0 where producer_0.name = ""Shonda Rhimes"" and made_by_0.msid = tv_series_0.sid and made_by_0.pid = producer_0.pid ;","SELECT tv_series.title FROM producer, tv_series, made_by WHERE tv_series.sid = made_by.msid AND made_by.pid = producer.pid AND producer.name = 'Shonda Rhimes'","[('America Divided',), ('Seattle Grace: Message of Hope',), ('Seattle Grace: On Call',), ('Still Star-Crossed',)]","[('America Divided',), ('Seattle Grace: Message of Hope',), ('Seattle Grace: On Call',), ('Still Star-Crossed',)]",True
IMDB_train_43,imdb,"Who acts "" Olivia Pope "" in the series Scandal ?",return the series Scandal; return who acts in #1; return #2 that acts Olivia Pope,"select actor_0.name from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where cast_0.role = ""Olivia Pope"" and tv_series_0.title = ""Scandal"" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid ;","SELECT actor.name FROM cast, tv_series, actor WHERE tv_series.sid = cast.msid AND cast.aid = actor.aid AND tv_series.title IN ( SELECT tv_series.title FROM tv_series WHERE tv_series.title = 'Scandal' ) AND cast.role = 'Olivia Pope'","[('Kerry Washington',)]","[('Kerry Washington',)]",True
IMDB_train_44,imdb,"What are all the movies directed by "" Quentin Tarantino "" featuring "" Christoph Waltz "" ?",return movies; return #1 directed by Quentin Tarantino; return #2 featuring Christoph Waltz,"select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = ""Christoph Waltz"" and director_0.name = ""Quentin Tarantino"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.mid FROM director, actor, directed_by, movie WHERE director.birth_city = actor.birth_city AND movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Quentin Tarantino' AND actor.name = 'Christoph Waltz'","[('Django Unchained',), ('Inglourious Basterds',)]",[],False
IMDB_train_45,imdb,"Who directed the movie "" Inglourious Basterds "" ?",return the movie Inglourious Basterds; return who directed #1,"select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = ""Inglourious Basterds"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.name FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Inglourious Basterds' )","[('Eli Roth',), ('Quentin Tarantino',), ('Eli Raphael Roth',), ('Gorilka',), ('Quentin Tarrantino',), ('Kuenthin Taranthîno',), ('Q',), ('Eli R. Roth',), ('David Kaufbird',), ('Quentin Jerome Tarantino',), ('Q',), ('QT',)]","[('Eli Roth',), ('Quentin Tarantino',), ('Eli Raphael Roth',), ('Gorilka',), ('Quentin Tarrantino',), ('Kuenthin Taranthîno',), ('Q',), ('Eli R. Roth',), ('David Kaufbird',), ('Quentin Jerome Tarantino',), ('Q',), ('QT',)]",True
IMDB_train_46,imdb,"Who is the writer of the movie "" Django Unchained """,return the movie Django Unchained; return the writer of #1,"select writer_0.name from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = ""Django Unchained"" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid ;","SELECT writer.name FROM movie, writer, written_by WHERE movie.mid = written_by.msid AND written_by.wid = writer.wid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Django Unchained' )","[('Quentin Tarantino',)]","[('Quentin Tarantino',)]",True
IMDB_train_47,imdb,"What are the series featuring "" Kerry Washington "" ?",return Kerry Washington; return series featuring #1,"select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = ""Kerry Washington"" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid ;","SELECT tv_series.title FROM cast, tv_series, actor WHERE actor.aid = cast.aid AND cast.msid = tv_series.sid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kerry Washington' )","[('Scandal',)]","[('Scandal',)]",True
IMDB_train_48,imdb,"What are all the movies featuring "" Kerry Washington "" ?",return Kerry Washington; return movies featuring #1,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Kerry Washington"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM cast, actor, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kerry Washington' )","[('19th Annual Screen Actors Guild Awards',), ('2013 MTV Movie Awards',), ('2014 Golden Globe Arrivals Special',), ('20th Annual Screen Actors Guild Awards',), ('20th Annual Screen Actors Guild Awards',), ('30th Annual Film Independent Spirit Awards',), ('36th NAACP Image Awards',), ('38th Annual Kennedy Center Honors',), ('4: Rise of the Silver Surfer',), ('70th Golden Globe Awards',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('Capturing Idi Amin',), ('Django Unchained',), ('Fantastic Four',), ('Girl Rising',), ('I Think I Love My Wife',), ('Miracle at St. Anna',), ('Our Song',), ('Peeples',), ('Saturday Night Live: 40th Anniversary Special',), ('Saturday Night Live: Best of This Season',), ('Save the Last Dance',), ('She Hate Me',), ('The 2011 Independent Spirit Awards',), ('The 2013 Film Independent Spirit Awards',), ('The 46th Annual NAACP Image Awards',), ('The 47th NAACP Image Awards',), ('The 63rd Primetime Emmy Awards',), ('The 64th Annual Tony Awards',), ('The 64th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The Details',), ('The Last King of Scotland',), ('The Oscars',), ('The Oscars',), ('The Oscars',), ('The Oscars',), ('The Oscars Red Carpet Live',), ('TV Land Icon Awards 2016',)]","[('19th Annual Screen Actors Guild Awards',), ('2013 MTV Movie Awards',), ('2014 Golden Globe Arrivals Special',), ('20th Annual Screen Actors Guild Awards',), ('20th Annual Screen Actors Guild Awards',), ('30th Annual Film Independent Spirit Awards',), ('36th NAACP Image Awards',), ('38th Annual Kennedy Center Honors',), ('4: Rise of the Silver Surfer',), ('70th Golden Globe Awards',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('Capturing Idi Amin',), ('Django Unchained',), ('Fantastic Four',), ('Girl Rising',), ('I Think I Love My Wife',), ('Miracle at St. Anna',), ('Our Song',), ('Peeples',), ('Saturday Night Live: 40th Anniversary Special',), ('Saturday Night Live: Best of This Season',), ('Save the Last Dance',), ('She Hate Me',), ('The 2011 Independent Spirit Awards',), ('The 2013 Film Independent Spirit Awards',), ('The 46th Annual NAACP Image Awards',), ('The 47th NAACP Image Awards',), ('The 63rd Primetime Emmy Awards',), ('The 64th Annual Tony Awards',), ('The 64th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The Details',), ('The Last King of Scotland',), ('The Oscars',), ('The Oscars',), ('The Oscars',), ('The Oscars',), ('The Oscars Red Carpet Live',), ('TV Land Icon Awards 2016',)]",True
IMDB_train_49,imdb,"Find the directors of all movies featuring "" Kate Winslet """,return Kate Winslet; return movies featuring #1; return directors of #2,"select director_0.name from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = ""Kate Winslet"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.did FROM director, actor, movie, cast WHERE actor.birth_year = director.birth_year AND actor.aid = cast.aid AND cast.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM cast, actor, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kate Winslet' ) )","[('Alan Carter',), ('Alan Carter',), ('Jeff Margolis',), ('Alan Carter',), ('Louis J. Horvitz',), ('Lou Horvitz',), ('Michael Gottlieb',), ('Alan Smithee',), ('Michael Bernard Gottlieb',), ('Alan Rickman',), ('Alan Sidney Patrick Rickman',), ('Utz Weber',), ('Bill Couturié',), ('Bill Couturie',), ('William Couturié',), ('Sam Neill',), ('Judy Rymer',), ('John Dermot',), ('Nigel Neill',), ('Joshua Ligairi',), ('Andrew James',), ('Andrew Schleiffarth',), ('Josh Ligairi',), ('Andrew James Schleiffarth',), ('Steven Soderbergh',), ('Peter Andrews',), ('Mary Ann Bernard',), ('Sam Lowry',), ('Steve Soderbergh',), ('Steven Andrew Soderbergh',), ('Howard Hall',), ('Michael Apted',), ('Michael David Apted',), ('Michel Gondry',), ('Gary Hurst',), ('Gary Hearst',), ('Garry Hurst',), ('Marc Forster',), ('Peter Jackson',), ('Sir Peter Jackson',), ('PJ',), ('Pete',), ('Richard Eyre',), ('Sir Richard Eyre',), ('Michael Winterbottom',), ('Sam Mendes',), ('Midas Mendes',), ('Samuel Alexander Mendes',), ('Ang Lee',), ('An Lee',), ('An Li',), ('John Downer',), ('Alan Carter',), ('Andreas Morell',), ('Andreas Missler-Morell',), ('Andreas Missler-Morell',), ('Gene Weed',), ('Gene Weed',), ('Chris Donovan',), ('Chris Donavin',), ('Chris Donovan',), ('Chris Donavin',), ('Troy Miller',), ('Kabir Akhtar',), ('Joe DeMaio',), ('Joe De Maio',), ('Joseph DeMaio',), ('Troy T. Miller',), ('Troy Tee Miller',), ('Wilson Thomas',), ('Troy',), ('Chris Donovan',), ('Chris Donavin',), ('Chris Donovan',), ('Chris Donavin',), ('Chris Donovan',), ('Chris Donavin',), ('Jeff Margolis',), ('Louis J. Horvitz',), ('Lou Horvitz',), ('Louis J. Horvitz',), ('Lou Horvitz',), ('Louis J. Horvitz',), ('Errol Morris',), ('Lou Horvitz',), ('Louis J. Horvitz',), ('Roger Goodman',), ('Roger M. Goodman',), ('Lou Horvitz',), ('Joel Gallen',), ('Louis J. Horvitz',), ('Errol Morris',), ('Lou Horvitz',), ('Roger Goodman',), ('Allen P. Haines',), ('Roger M. Goodman',), ('Allen Haines',), ('Pete Docter',), ('Hamish Hamilton',), ('Henry Selick',), ('Anne Fletcher',), ('Richard A. Preuss',), ('Peter Docter',), (""Anne 'Mama' Fletcher'"",), (""Anne 'Mama' Fletcher"",), ('Anne M. Fletcher',), ('Ann Fletcher',), ('Mark Hamilton',), ('Rich Preuss',), ('C. Henry Selick',), ('Peter Hans Docter',), ('Mama',), ('Mark Hamilton',), ('Jocelyn Moorhouse',), ('Joss Moorhouse',), ('Jocelyn Denise Moorhouse',), ('Alan Parker',), ('Sir Alan William Parker',), ('Sir Alan Parker',), ('Alan William Parker',), ('Nikki Parsons',), ('Nightmare Parsons',), ('Nikki Pumpkin',), ('Sticky Pumpkin',), ('Glenn Weiss',), ('Glenn P. Weiss',), ('Stephen Daldry',), ('Stephen Daldry CBE',), ('Stephen David Daldry',), ('James Cameron',), ('J. C.',), ('Jim Cameron',), ('James Cameron and his Lawyers',), ('H.A. Milton',), ('Iron Jim',), ('Jim',), ('James Francis Cameron',), ('John Hillcoat',), ('Kevin Burns',), ('Shelley Lyons',)]","[(9675,), (16639,), (50385,), (51453,), (59134,), (63093,), (69093,), (74324,), (83090,), (97618,), (100272,), (103617,), (108846,), (120039,), (121617,), (125009,), (126913,), (138066,), (142870,), (146927,), (160789,), (161064,), (170970,), (182663,), (182981,), (186539,), (190102,), (192466,), (197937,), (224555,), (225271,), (229707,), (237822,), (242331,), (243340,), (247936,), (247941,), (254241,), (266094,), (268918,), (298983,), (299031,), (300304,), (302748,), (310912,), (318222,), (319522,), (332444,), (337330,), (337794,), (339097,), (354650,), (364955,), (366788,), (374631,), (378799,), (379724,), (388693,), (396990,), (405140,), (413445,), (424956,), (425914,), (426301,), (437512,), (444825,), (445774,), (446901,), (451886,), (466510,), (473918,), (482654,), (488720,), (492075,), (504541,), (507005,), (514626,), (518526,), (524415,), (541905,), (556603,), (570211,), (580580,), (586007,), (592440,), (596897,), (602289,), (609947,), (620239,), (630959,), (653470,), (654723,), (656039,), (656797,), (663573,), (664573,), (670353,), (683706,), (711105,), (712323,), (725784,), (733907,), (739472,), (742945,), (743539,), (749115,), (761882,), (762551,), (776623,), (777228,), (792203,), (793161,), (793193,), (796122,), (829941,), (833665,), (840165,), (855461,), (855926,), (859903,), (865953,), (867209,), (873786,), (875687,), (890085,), (890658,), (892684,), (896261,), (904568,), (906520,), (909436,), (913217,), (923160,), (927005,), (931373,), (937176,), (945319,), (956306,), (971890,), (972913,), (976927,), (978499,), (980131,), (980972,), (985613,), (995585,), (1002782,), (1008624,), (1012272,), (1012996,), (1013024,), (1029007,), (1029420,), (1031222,), (1032551,), (1050833,), (1051283,), (1069560,), (1074171,), (1076722,), (1081612,), (1082342,), (1091405,), (1091526,), (1091688,), (1105243,), (1108502,), (1115958,), (1119058,), (1132583,), (1136554,), (1138307,), (1138636,), (1139284,), (1143870,), (1148949,), (1153831,), (1155340,), (1155734,), (1167063,), (1169791,), (1169958,), (1174222,), (1181533,), (1183958,), (1188681,), (1190607,), (1191158,), (1199914,), (1204598,), (1205119,), (1207123,), (1213434,), (1225891,), (1229451,), (1234306,), (1235564,), (1236112,), (1236504,), (1246506,)]",False
IMDB_train_5,imdb,Find all actors who are from Canada,return actors; return #1 from Canada,"select actor_0.name from actor as actor_0 where actor_0.nationality = ""Canada"" ;",SELECT actor.name FROM actor WHERE actor.nationality = 'Canada',"[('Fareed Abdelhak',), ('Alistair Abell',), ('William Aberhart',), ('Raymond Ablack',), ('Chris Abraham',), ('Taylor Abrahamse',), ('Aaron Abrams',), ('Omid Abrams',), ('Jeff Abugov',), ('Dalmar Abuzeid',), ('Mark Acheson',), ('Mark D. Acheson',), ('Spencer Achtymichuk',), ('Don Ackerman',), ('Ken Ackles',), ('Daniel Adair',), ('Vikas Adam',), ('Bryan Adams',), ('Darren Adams',), ('Donald Adams',), ('Evan Adams',), ('Marty Adams',), ('Patrick J. Adams',), ('R.J. Adams',), ('Samuel Adams',), ('Steve Adams',), ('Frank Adamson',), ('Troy Adamson',), ('Michael Adamthwaite',), ('Trevor Addie',), ('Neil Affleck',), ('Ian Agard',), ('Amar Agha',), ('Trey Agnew',), ('Paul Ahmarani',), ('Rio Ahn',), ('Chief Akawanush',), ('Adam Albanese',), ('Somar Alberg',), ('Michel Albert',), ('Scott Albert',), ('Richard Alden',), ('Frank Aldous',), ('Joel Aldred',), ('Michael Aldred',), ('Henry Alessandroni',), ('Glen Alexander',), ('Hugh Alexander',), ('Lincoln Alexander',), ('Jan Michael Alfonso',), ('Kyle Alisharan',), ('Lane Allan',), ('Ted Allan',), ('Gabriel Allard',), ('Hugh Allen',), ('Jamie D. Allen',), ('Jeremy Peter Allen',), ('Ralph Allen',), ('Archie Alleyne',), ('Roger Allford',), ('Jordan Allison',), ('James Allodi',), ('Jonathan Allore',), ('James Allport',), ('Frank Allworth',), ('Frank S. Alonzi',), ('David Alpay',), ('David Alvarez',), ('Rick Alyea',), ('Jerry Ambler',), ('Tommy Ambrose',), ('Robbie Amell',), ('Stephen Amell',), ('Kwesi Ameyaw',), ('Dan Amos',), ('Michael A. Amos',), ('Zachary Amzallag',), ('David Anchel',), ('Jean-Michel Anctil',), ('Pascal Anctil',), ('Daniel Anderson',), ('Gerry Anderson',), ('Glenn Anderson',), ('Greg Anderson',), ('Austin Andrews',), ('Réal Andrews',), ('Ted Andrews',), ('Peter Andrianopoulos',), ('Gene Andrusco',), ('René Angelil',), ('Paul Anka',), ('Tom Anniko',), ('Ted Annis',), ('Cameron Ansell',), ('David Anselmo',), ('Zachary Ansley',), ('Andre Anthony',), ('Paul Anthony',), ('Benz Antoine',), ('Cas Anvar',), ('Andrew Appelle',), ('Steve Arbuckle',), ('Denys Arcand',), ('Gabriel Arcand',), ('Nathaniel Arcand',), ('Joshua Archambault',), ('Stéphane Archambault',), ('Richard Archer',), ('Craig Archibald',), ('Jean-Philippe Archibald',), ('John Ardell',), ('Charles Arling',), ('Brad Armstrong',), ('Dean Armstrong',), ('Jackson Armstrong',), ('William Armstrong',), ('François Arnaud',), ('Will Arnett',), ('Stefan Arngrim',), ('Ronnie Arniell',), ('Daniel Arnold',), ('Denny Arnold',), ('Nicholas Arnold',), ('Richard Arnold',), ('Jeffery Aro',), ('Alex Arsenault',), ('Douglas Arthurs',), ('Ryan Ash',), ('Aaron Ashmore',), ('Shawn Ashmore',), ('Jaimz Asmundson',), ('Adeeb Assaly',), ('Bernard Assiniwi',), ('George Athans',), ('Ted Atherton',), ('Harvey Atkin',), ('David Atkinson',), ('Frank Atkinson',), ('Toren Atkinson',), ('Christopher Attadia',), ('Mike Atwater',), ('Larry Aubrey',), ('Dylan Aucoin',), ('Nick Auf der Maur',), ('Georgie Auld',), ('Edwin Autridge',), ('David Avalon',), ('Roger Avary',), ('Sean Avery',), ('Richard Avonde',), ('John Awoods',), ('Dan Aykroyd',), ('Peter Aykroyd',), ('John Aylesworth',), ('Philippe Ayoub',), ('Benjamin Ayres',), ('William Azaroff',), ('Carlos Azevedos',), ('Mike Babcock',), ('Tony Babcock',), ('Matte Babel',), ('Babu',), ('Dave Babych',), ('Chris Bacchus',), ('Nino Bacci',), ('Michael Bach',), ('Ben Bachelder',), ('Randy Bachman',), ('Nathaniel Bacon',), ('Rohan Bader',), ('Frank Badgley',), ('Krish Baichwal',), ('René Bail',), ('Julian Bailey',), ('Bonar Bain',), ('Conrad Bain',), ('Larry Bain',), ('Scott Bairstow',), ('Chris Baker',), ('Darrin Baker',), ('Joby Baker',), ('Link Baker',), ('Simon Baker',), ('Dave Baksh',), ('Philippos Balabanos',), ('Shaun Balbar',), ('Rene Balcer',), ('Michael J. Baldasaro',), ('Dom Baldwin',), ('Robert Baldwin',), ('Danny Balkwill',), ('Dean Balkwill',), ('Blake Ball',), ('Michael Ball',), ('Sean Ballantyne',), ('Harold Ballard',), ('Jeffrey Ballard',), ('Steve Baltzois',), ('James Bamford',), ('Robert Bamford',)]","[('Fareed Abdelhak',), ('Alistair Abell',), ('William Aberhart',), ('Raymond Ablack',), ('Chris Abraham',), ('Taylor Abrahamse',), ('Aaron Abrams',), ('Omid Abrams',), ('Jeff Abugov',), ('Dalmar Abuzeid',), ('Mark Acheson',), ('Mark D. Acheson',), ('Spencer Achtymichuk',), ('Don Ackerman',), ('Ken Ackles',), ('Daniel Adair',), ('Vikas Adam',), ('Bryan Adams',), ('Darren Adams',), ('Donald Adams',), ('Evan Adams',), ('Marty Adams',), ('Patrick J. Adams',), ('R.J. Adams',), ('Samuel Adams',), ('Steve Adams',), ('Frank Adamson',), ('Troy Adamson',), ('Michael Adamthwaite',), ('Trevor Addie',), ('Neil Affleck',), ('Ian Agard',), ('Amar Agha',), ('Trey Agnew',), ('Paul Ahmarani',), ('Rio Ahn',), ('Chief Akawanush',), ('Adam Albanese',), ('Somar Alberg',), ('Michel Albert',), ('Scott Albert',), ('Richard Alden',), ('Frank Aldous',), ('Joel Aldred',), ('Michael Aldred',), ('Henry Alessandroni',), ('Glen Alexander',), ('Hugh Alexander',), ('Lincoln Alexander',), ('Jan Michael Alfonso',), ('Kyle Alisharan',), ('Lane Allan',), ('Ted Allan',), ('Gabriel Allard',), ('Hugh Allen',), ('Jamie D. Allen',), ('Jeremy Peter Allen',), ('Ralph Allen',), ('Archie Alleyne',), ('Roger Allford',), ('Jordan Allison',), ('James Allodi',), ('Jonathan Allore',), ('James Allport',), ('Frank Allworth',), ('Frank S. Alonzi',), ('David Alpay',), ('David Alvarez',), ('Rick Alyea',), ('Jerry Ambler',), ('Tommy Ambrose',), ('Robbie Amell',), ('Stephen Amell',), ('Kwesi Ameyaw',), ('Dan Amos',), ('Michael A. Amos',), ('Zachary Amzallag',), ('David Anchel',), ('Jean-Michel Anctil',), ('Pascal Anctil',), ('Daniel Anderson',), ('Gerry Anderson',), ('Glenn Anderson',), ('Greg Anderson',), ('Austin Andrews',), ('Réal Andrews',), ('Ted Andrews',), ('Peter Andrianopoulos',), ('Gene Andrusco',), ('René Angelil',), ('Paul Anka',), ('Tom Anniko',), ('Ted Annis',), ('Cameron Ansell',), ('David Anselmo',), ('Zachary Ansley',), ('Andre Anthony',), ('Paul Anthony',), ('Benz Antoine',), ('Cas Anvar',), ('Andrew Appelle',), ('Steve Arbuckle',), ('Denys Arcand',), ('Gabriel Arcand',), ('Nathaniel Arcand',), ('Joshua Archambault',), ('Stéphane Archambault',), ('Richard Archer',), ('Craig Archibald',), ('Jean-Philippe Archibald',), ('John Ardell',), ('Charles Arling',), ('Brad Armstrong',), ('Dean Armstrong',), ('Jackson Armstrong',), ('William Armstrong',), ('François Arnaud',), ('Will Arnett',), ('Stefan Arngrim',), ('Ronnie Arniell',), ('Daniel Arnold',), ('Denny Arnold',), ('Nicholas Arnold',), ('Richard Arnold',), ('Jeffery Aro',), ('Alex Arsenault',), ('Douglas Arthurs',), ('Ryan Ash',), ('Aaron Ashmore',), ('Shawn Ashmore',), ('Jaimz Asmundson',), ('Adeeb Assaly',), ('Bernard Assiniwi',), ('George Athans',), ('Ted Atherton',), ('Harvey Atkin',), ('David Atkinson',), ('Frank Atkinson',), ('Toren Atkinson',), ('Christopher Attadia',), ('Mike Atwater',), ('Larry Aubrey',), ('Dylan Aucoin',), ('Nick Auf der Maur',), ('Georgie Auld',), ('Edwin Autridge',), ('David Avalon',), ('Roger Avary',), ('Sean Avery',), ('Richard Avonde',), ('John Awoods',), ('Dan Aykroyd',), ('Peter Aykroyd',), ('John Aylesworth',), ('Philippe Ayoub',), ('Benjamin Ayres',), ('William Azaroff',), ('Carlos Azevedos',), ('Mike Babcock',), ('Tony Babcock',), ('Matte Babel',), ('Babu',), ('Dave Babych',), ('Chris Bacchus',), ('Nino Bacci',), ('Michael Bach',), ('Ben Bachelder',), ('Randy Bachman',), ('Nathaniel Bacon',), ('Rohan Bader',), ('Frank Badgley',), ('Krish Baichwal',), ('René Bail',), ('Julian Bailey',), ('Bonar Bain',), ('Conrad Bain',), ('Larry Bain',), ('Scott Bairstow',), ('Chris Baker',), ('Darrin Baker',), ('Joby Baker',), ('Link Baker',), ('Simon Baker',), ('Dave Baksh',), ('Philippos Balabanos',), ('Shaun Balbar',), ('Rene Balcer',), ('Michael J. Baldasaro',), ('Dom Baldwin',), ('Robert Baldwin',), ('Danny Balkwill',), ('Dean Balkwill',), ('Blake Ball',), ('Michael Ball',), ('Sean Ballantyne',), ('Harold Ballard',), ('Jeffrey Ballard',), ('Steve Baltzois',), ('James Bamford',), ('Robert Bamford',)]",True
IMDB_train_50,imdb,"Find the producers of all movies in which "" Kate Winslet "" is an actor",return movies; return actors of #1; return #1 where #2 is Kate Winslet; return producers of #3,"select producer_0.name from actor as actor_0, cast as cast_0, made_by as made_by_0, movie as movie_0, producer as producer_0 where actor_0.name = ""Kate Winslet"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and made_by_0.msid = movie_0.mid and made_by_0.pid = producer_0.pid ;","SELECT producer.pid FROM producer, actor, movie, cast WHERE actor.birth_year = producer.birth_year AND actor.aid = cast.aid AND cast.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM cast, actor, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM movie ) AND actor.name = 'Kate Winslet' )","[('Daryl Anderson',), ('Jeff Margolis',), ('Paul Napier',), ('Yale Summers',), ('Kathy Connell',), ('Shelley Fabares',), ('Karla Tamburrelli',), ('Mick McCullough',), (""Gloria Fujita-O'Brien"",), ('Daryl Anderson',), ('Jeff Margolis',), ('Paul Napier',), ('Yale Summers',), ('Kathy Connell',), ('Shelley Fabares',), ('Karla Tamburrelli',), ('Mick McCullough',), (""Gloria Fujita-O'Brien"",), ('Daryl Anderson',), ('Paul Fagen',), ('Jeff Margolis',), ('Quinn Monahan',), ('Paul Napier',), ('Yale Summers',), ('Kathy Connell',), ('Shelley Fabares',), ('JoBeth Williams',), ('Mick McCullough',), ('Benn Fleishman',), (""Gloria Fujita-O'Brien"",), ('Daryl Anderson',), ('Paul Fagen',), ('Jason George',), ('Quinn Monahan',), ('Woody Schultz',), ('Kathy Connell',), ('Shelley Fabares',), ('JoBeth Williams',), ('Jon Brockett',), ('Maggie Barrett Caulfield',), ('Mick McCullough',), ('Benn Fleishman',), (""Gloria Fujita-O'Brien"",), ('Cynthia Kistler',), ('Barry Adelman',), ('Jorge Camara',), ('Nicholas Goodman',), ('Allen Shapiro',), ('Lorenzo Soria',), ('Christie Dishner',), ('Meher Tatna',), ('Melissa Watkins Trueblood',), ('Al Schwartz',), ('Nicole Velasco',), ('Kathy Erickson',), ('Don Harary',), ('Mike Mahan',), ('Serge Rakhlin',), ('Louise VanPatten',), ('Peter Abrams',), ('J.P. Guerin',), ('Robert L. Levy',), ('Louise Rosner',), ('Mark Amin',), ('Jonathon Komack Martin',), ('Megan F. Ring',), ('Andrew Hersh',), ('Ray Cooper',), ('Zygi Kamasa',), ('Andrea Calderwood',), ('Vincent Gadelle',), ('Norman Merry',), ('Gail Egan',), ('Bertrand Faivre',), ('Richard Hewitt',), ('Lee Hodgkinson',), ('Kristy Jorgensen',), ('Christopher Miller',), ('Andrea Weigand',), ('Werner Kimmig',), ('Philipp Pröttel',), ('Peter Bart',), ('Bill Couturié',), ('Sheila Nevins',), ('John Hoffman',), ('Alexis Ercoli',), ('Timothy M. Gray',), ('Charlie Koones',), ('Anne Sandkuhler',), ('Bob Last',), ('Colin MacCabe',), ('Grant Campbell',), ('Paula Jalfon',), ('Vincent Burke',), ('Jason Connell',), ('Xavier Gutierrez',), ('Joshua Ligairi',), ('William Rowan Jr.',), ('Amber Bollinger',), ('Andrew James',), ('Stephen Oxman',), ('Rachel Mae Ligairi',), ('Jolyn Schleiffarth',), ('Zakaria Alaoui',), ('Gregory Jacobs',), ('Michael Shamberg',), ('Jeff Skoll',), ('Ricky Strauss',), ('Stacey Sher',), ('Chen On Chu',), ('Jonathan King',), ('Michael Polaire',), ('Graeme Ferguson',), ('Michele Hall',), ('Toni Myers',), ('Brad Ball',), ('David Brown',), ('Guy East',), ('Hanno Huth',), ('Mick Jagger',), ('Ate de Jong',), ('Lorne Michaels',), ('Nigel Sinclair',), ('Michael White',), ('Jeanney Kim',), ('Victoria Pearman',), ('Thomas Garvin',), ('Julian Plunkett-Dillon',), ('Robbert Aarts',), ('Georges Bermann',), ('Anthony Bregman',), ('Steve Golin',), ('Michael Jackman',), ('Charlie Kaufman',), ('Glenn Williamson',), ('Linda Fields',), ('David L. Bushell',), ('Dorian Langdon',), ('Robert Leighton',), ('Stephan Shelanski',), ('Naomi Jones',), ('Dan Maddicott',), ('Peter Orton',), ('Gary Binkow',), ('Richard N. Gladstein',), ('Neal Israel',), ('Bob Weinstein',), ('Harvey Weinstein',), ('Nellie Bellflower',), ('Michelle Sy',), ('Tracey Becker',), ('Michael Dreyer',), ('Jim Booth',), ('Hanno Huth',), ('Peter Jackson',), ('Bridget Bourke',), ('DTeflon',), ('Guy East',), ('Robert Fox',), ('Anthony Minghella',), ('Sydney Pollack',), ('Scott Rudin',), ('Harvey Weinstein',), ('David M. Thompson',), ('Michael Dreyer',), ('Thomas Hedley Jr.',), ('Andrew Eaton',), ('Mark Shivas',), ('Sheila Fraser Milne',), ('Stewart Till',), ('Bobby Cohen',), ('John Hart',), ('Sam Mendes',), ('Scott Rudin',), ('Pippa Harris',), ('Marion Rosenberg',), ('Ann Ruark',), ('Gina Amoroso',), ('Henry Fernaine',), ('David M. Thompson',), ('Nina Wolarsky',), ('Peter Kalmbach',), ('Sydney Pollack',), ('James Schamus',), ('Lindsay Doran',), ('Laurie Borg',), ('Geoff Stier',), ('Philip Dalton',), ('John Downer',), ('Matthew Gordon',), ('Lucinda Axelsson',), ('Bob Bain',), ('Paul Flattery',), ('Mike Hofferth',), ('Gregory Sills',), ('Ken Rose',), ('Cheryl Teetzel',), ('Joey Berlin',), ('Corie Henson',), ('George Collier',)]",ERROR,False
IMDB_train_51,imdb,"What are the series in which "" Scott Foley "" is an actor ?",return series; return actors of #1; return #1 where #2 is Scott Foley,"select tv_series_0.title from actor as actor_0, cast as cast_0, tv_series as tv_series_0 where actor_0.name = ""Scott Foley"" and actor_0.aid = cast_0.aid and cast_0.msid = tv_series_0.sid ;","SELECT tv_series.sid FROM cast, tv_series, actor WHERE actor.aid = cast.aid AND cast.msid = tv_series.sid AND tv_series.sid IN ( SELECT tv_series.sid FROM tv_series ) AND actor.name = 'Scott Foley'",[],[],True
IMDB_train_52,imdb,What company produced the series Scandal ?,return companies; return #1 that produced Scandal,"select company_0.name from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where tv_series_0.title = ""Scandal"" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid ;","SELECT company.name FROM tv_series, company, copyright WHERE company.id = copyright.cid AND copyright.msid = tv_series.sid AND tv_series.title = 'Scandal'","[('Central Independent Television',), ('Clive Morris Productions',), ('ABC Studios',), ('ShondaLand',)]","[('Central Independent Television',), ('Clive Morris Productions',), ('ABC Studios',), ('ShondaLand',)]",True
IMDB_train_53,imdb,Find all tv series produced by Netflix,return tv series; return #1 produced by Netflix,"select tv_series_0.title from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where company_0.name = ""Netflix"" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid ;","SELECT tv_series.title FROM copyright, company, tv_series WHERE tv_series.sid = copyright.msid AND copyright.cid = company.id AND company.name = 'Netflix'","[('A Series of Unfortunate Events',), ('Borgia',), ('Chelsea',), ('Cooked',), ('Dawn of the Croods',), ('G.L.O.W.',), ('Girlboss',), ('Godless',), ('Hibana',), ('Jessica Jones',), ('Lady Dynamite',), ('Llama Llama',), ('Making a Murderer',), ('Mindhunter',), ('Russell Peters Versus the World',), ('Scream: The TV Series',), ('Untitled Nick Stoller Project',), ('W/ Bob and David',), ('Wet Hot American Summer: 10 Years Later',)]","[('A Series of Unfortunate Events',), ('Borgia',), ('Chelsea',), ('Cooked',), ('Dawn of the Croods',), ('G.L.O.W.',), ('Girlboss',), ('Godless',), ('Hibana',), ('Jessica Jones',), ('Lady Dynamite',), ('Llama Llama',), ('Making a Murderer',), ('Mindhunter',), ('Russell Peters Versus the World',), ('Scream: The TV Series',), ('Untitled Nick Stoller Project',), ('W/ Bob and David',), ('Wet Hot American Summer: 10 Years Later',)]",True
IMDB_train_54,imdb,Find all movies produced by Netflix,return movies; return #1 produced by Netflix,"select movie_0.title from company as company_0, copyright as copyright_0, movie as movie_0 where company_0.name = ""Netflix"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, company, copyright WHERE movie.mid = copyright.msid AND copyright.cid = company.id AND company.name = 'Netflix'","[('13 Minutes',), ('Amanda Knox',), ('Amar',), ('Amateur',), ('Bright',), ('Crouching Tiger, Hidden Dragon: Sword of Destiny',), ('Divanation',), ('Ever After High: Way Too Wonderland',), ('First They Killed My Father: A Daughter of Cambodia Remembers',), ('Joe Rogan: Live',), ('Marco Polo: One Hundred Eyes',), (""Mike Epps: Don't Take It Personal"",), ('Oscillating Fan for Your Home',), ('Our Souls at Night',), ('Reggie Watts: Spatial',), ('Smosh: The Movie',), (""That's My Time: The Todd Lynn Story"",), ('The Comedians of Comedy',), ('The Panama Papers',), ('This Film Is Not Yet Rated',), ('Virunga: Gorillas in Peril',), ('War Machine',), ('What Happened, Miss Simone?',), (""Winter on Fire: Ukraine's Fight for Freedom"",), ('XOXO',), ('Zach Galifianakis: Live at the Purple Onion',)]","[('13 Minutes',), ('Amanda Knox',), ('Amar',), ('Amateur',), ('Bright',), ('Crouching Tiger, Hidden Dragon: Sword of Destiny',), ('Divanation',), ('Ever After High: Way Too Wonderland',), ('First They Killed My Father: A Daughter of Cambodia Remembers',), ('Joe Rogan: Live',), ('Marco Polo: One Hundred Eyes',), (""Mike Epps: Don't Take It Personal"",), ('Oscillating Fan for Your Home',), ('Our Souls at Night',), ('Reggie Watts: Spatial',), ('Smosh: The Movie',), (""That's My Time: The Todd Lynn Story"",), ('The Comedians of Comedy',), ('The Panama Papers',), ('This Film Is Not Yet Rated',), ('Virunga: Gorillas in Peril',), ('War Machine',), ('What Happened, Miss Simone?',), (""Winter on Fire: Ukraine's Fight for Freedom"",), ('XOXO',), ('Zach Galifianakis: Live at the Purple Onion',)]",True
IMDB_train_55,imdb,"Find all movies featuring "" Kevin Spacey """,return movies; return #1 featuring Kevin Spacey,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Kevin Spacey"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Kevin Spacey'","[(""16th Annual Critics' Choice Movie Awards"",), ('20th Annual Screen Actors Guild Awards',), ('20th Annual Screen Actors Guild Awards',), ('21',), ('22nd Annual Screen Actors Guild Awards',), ('2nd Annual Directors Guild of Great Britain DGGB Awards',), ('2nd Annual Screen Actors Guild Awards',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('A Time to Kill',), ('American Beauty',), ('Austin Powers in Goldmember',), ('Being Mean Is So Much Fun',), ('Breakthrough Prize 2013',), ('Comedy Central Roast of Denis Leary',), ('Consenting Adults',), ('David Blaine: Frozen in Time',), ('Envelope',), ('Father of Invention',), ('Freedom2speak v2.0',), ('Hackers Wanted',), ('Heartburn',), ('Horrible Bosses',), ('Horrible Bosses 2',), ('K-PAX',), ('L.A. Confidential: Off the Record...',), (""Long Day's Journey Into Night"",), ('My Least Favorite Career',), ('Nine Lives',), ('NOW: In the Wings on a World Stage',), ('Outbreak',), ('Pay It Forward',), ('Rebel in the Rye',), ('Rocket Gibraltar',), ('Saturday Night Live: The Best of Chris Kattan',), ('See No Evil, Hear No Evil',), ('SNL: 25 Years of Music',), ('Spirit of a Denture',), ('Superman Returns',), ('Swimming with Sharks',), ('Telstar: The Joe Meek Story',), ('The 21st Annual Screen Actors Guild Awards',), ('The 45th Annual Tony Awards',), ('The 50th British Academy Film Awards',), ('The 53rd Annual Golden Globe Awards',), ('The 53rd Annual Tony Awards',), ('The 55th Annual Golden Globe Awards',), ('The 57th Annual Golden Globe Awards',), ('The 58th Annual Golden Globe Awards',), ('The 59th Annual Golden Globe Awards',), ('The 5th Annual GQ Men of the Year Awards',), ('The 60th Primetime Emmy Awards',), ('The 61st Annual Tony Awards',), ('The 62nd Annual Golden Globe Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The 68th Annual Academy Awards',), ('The 68th Annual Golden Globe Awards',), ('The 69th Annual Academy Awards',), ('The 72nd Annual Academy Awards',), ('The 73rd Annual Academy Awards',), ('The 74th Annual Academy Awards',), ('The 75th Annual Academy Awards',), ('The 83rd Annual Academy Awards',), ('The Applicant',), ('The Curse of Superman',), ('The EE British Academy Film Awards',), ('The European Film Awards',), ('The Interrogation of Leo and Lisa',), ('The Negotiator',), ('The Orange British Academy Film Awards',), ('The Oscars',), ('The Shipping News',), ('The United States of Leland',), ('The Variety Club Showbiz Awards 2009',), ('The Ventriloquist',), ('Working Girl',)]","[(""16th Annual Critics' Choice Movie Awards"",), ('20th Annual Screen Actors Guild Awards',), ('20th Annual Screen Actors Guild Awards',), ('21',), ('22nd Annual Screen Actors Guild Awards',), ('2nd Annual Directors Guild of Great Britain DGGB Awards',), ('2nd Annual Screen Actors Guild Awards',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('A Time to Kill',), ('American Beauty',), ('Austin Powers in Goldmember',), ('Being Mean Is So Much Fun',), ('Breakthrough Prize 2013',), ('Comedy Central Roast of Denis Leary',), ('Consenting Adults',), ('David Blaine: Frozen in Time',), ('Envelope',), ('Father of Invention',), ('Freedom2speak v2.0',), ('Hackers Wanted',), ('Heartburn',), ('Horrible Bosses',), ('Horrible Bosses 2',), ('K-PAX',), ('L.A. Confidential: Off the Record...',), (""Long Day's Journey Into Night"",), ('My Least Favorite Career',), ('Nine Lives',), ('NOW: In the Wings on a World Stage',), ('Outbreak',), ('Pay It Forward',), ('Rebel in the Rye',), ('Rocket Gibraltar',), ('Saturday Night Live: The Best of Chris Kattan',), ('See No Evil, Hear No Evil',), ('SNL: 25 Years of Music',), ('Spirit of a Denture',), ('Superman Returns',), ('Swimming with Sharks',), ('Telstar: The Joe Meek Story',), ('The 21st Annual Screen Actors Guild Awards',), ('The 45th Annual Tony Awards',), ('The 50th British Academy Film Awards',), ('The 53rd Annual Golden Globe Awards',), ('The 53rd Annual Tony Awards',), ('The 55th Annual Golden Globe Awards',), ('The 57th Annual Golden Globe Awards',), ('The 58th Annual Golden Globe Awards',), ('The 59th Annual Golden Globe Awards',), ('The 5th Annual GQ Men of the Year Awards',), ('The 60th Primetime Emmy Awards',), ('The 61st Annual Tony Awards',), ('The 62nd Annual Golden Globe Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The 68th Annual Academy Awards',), ('The 68th Annual Golden Globe Awards',), ('The 69th Annual Academy Awards',), ('The 72nd Annual Academy Awards',), ('The 73rd Annual Academy Awards',), ('The 74th Annual Academy Awards',), ('The 75th Annual Academy Awards',), ('The 83rd Annual Academy Awards',), ('The Applicant',), ('The Curse of Superman',), ('The EE British Academy Film Awards',), ('The European Film Awards',), ('The Interrogation of Leo and Lisa',), ('The Negotiator',), ('The Orange British Academy Film Awards',), ('The Oscars',), ('The Shipping News',), ('The United States of Leland',), ('The Variety Club Showbiz Awards 2009',), ('The Ventriloquist',), ('Working Girl',)]",True
IMDB_train_56,imdb,"Who is the director of the series "" House of Cards "" produced by Netflix ?",return series; return #1 produced by Netflix; return #2 that is House of Cards; return director of #3,"select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where company_0.name = ""Netflix"" and tv_series_0.title = ""House of Cards"" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid ;","SELECT director.did FROM copyright, tv_series, company, director, directed_by WHERE tv_series.sid = directed_by.msid AND directed_by.did = director.did AND tv_series.sid = copyright.msid AND copyright.cid = company.id AND tv_series.sid IN ( SELECT tv_series.sid FROM copyright, company, tv_series WHERE tv_series.sid = copyright.msid AND copyright.cid = company.id AND company.name = 'Netflix' AND tv_series.title = 'House of Cards' )",[],[],True
IMDB_train_57,imdb,"Who is the director of the tv series "" House of Cards "" from 2013 ?",return tv series; return #1 from 2013; return #2 that is House of Cards; return director of #3,"select director_0.name from directed_by as directed_by_0, director as director_0, tv_series as tv_series_0 where tv_series_0.release_year = 2013 and tv_series_0.title = ""House of Cards"" and directed_by_0.did = director_0.did and directed_by_0.msid = tv_series_0.sid ;","SELECT director.did FROM director, tv_series, directed_by WHERE tv_series.sid = directed_by.msid AND directed_by.did = director.did AND tv_series.sid IN ( SELECT tv_series.sid FROM tv_series WHERE tv_series.release_year = 2013 AND tv_series.title = 'House of Cards' )",[],[],True
IMDB_train_58,imdb,"Find all movies in which "" Robin Wright "" appears",return Robin Wright; return movies of #1,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Robin Wright"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM actor, cast, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Robin Wright' )","[(""A Sky News Tonight Special: Muhammad Ali's Funeral"",), ('CBS News Special Report: Iraq Study Group News Conference',), ('Crisis Guide: Iran',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('73rd Golden Globe Awards',), ('Beowulf',), (""Boffo! Tinseltown's Bombs and Blockbusters"",), ('Everest',), ('Forrest Gump',), ('Hollywood Vice Squad',), ('Home',), ('Hounddog',), (""How to Kill Your Neighbor's Dog"",), ('Loved',), ('Message in a Bottle',), ('Moll Flanders',), ('Rampart',), (""She's So Lovely"",), ('Sorry, Haters',), ('The 20th IFP Independent Spirit Awards',), ('The 21st Annual Screen Actors Guild Awards',), ('The 52nd Annual Golden Globe Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The 76th Annual Academy Awards',), ('The 81st Annual Academy Awards',), ('The Conspirator',), ('The Last Castle',), ('The Princess Bride',), ('The Private Lives of Pippa Lee',), ('The Singing Detective',), ('Through the Eyes of Forrest Gump',), ('Toys',), ('Unbreakable',), ('Wonder Woman',)]","[(""A Sky News Tonight Special: Muhammad Ali's Funeral"",), ('CBS News Special Report: Iraq Study Group News Conference',), ('Crisis Guide: Iran',), ('71st Golden Globe Awards',), ('72nd Golden Globe Awards',), ('73rd Golden Globe Awards',), ('Beowulf',), (""Boffo! Tinseltown's Bombs and Blockbusters"",), ('Everest',), ('Forrest Gump',), ('Hollywood Vice Squad',), ('Home',), ('Hounddog',), (""How to Kill Your Neighbor's Dog"",), ('Loved',), ('Message in a Bottle',), ('Moll Flanders',), ('Rampart',), (""She's So Lovely"",), ('Sorry, Haters',), ('The 20th IFP Independent Spirit Awards',), ('The 21st Annual Screen Actors Guild Awards',), ('The 52nd Annual Golden Globe Awards',), ('The 65th Primetime Emmy Awards',), ('The 66th Primetime Emmy Awards',), ('The 67th Primetime Emmy Awards',), ('The 76th Annual Academy Awards',), ('The 81st Annual Academy Awards',), ('The Conspirator',), ('The Last Castle',), ('The Princess Bride',), ('The Private Lives of Pippa Lee',), ('The Singing Detective',), ('Through the Eyes of Forrest Gump',), ('Toys',), ('Unbreakable',), ('Wonder Woman',)]",True
IMDB_train_59,imdb,Find all the female actors from Austin,return actors; return #1 that are female; return #2 from Austin,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Austin"" and actor_0.gender = ""female"" ;",SELECT actor.name FROM actor WHERE actor.gender = 'female' AND actor.birth_city = 'Austin',"[('Elaine Anderson',), ('Tracy Arnold',), ('Stacy Lynn Austin',), ('Kimberly Barnett',), ('Tomi Barrett',), ('Kimi Bateman',), ('Alecia Batson',), ('Angela Bettis',), ('Bobbi Billard',), ('Annie Bond',), ('Susanna Boney',), ('Cheri Cabiya',), ('Allie Carico',), ('Aurora Marie Chase',), ('Ciara',), ('Karina Clark',), ('Nellie Connally',), ('Evelyn Courtney',), ('Crystal Crawford',), ('Lella Cuberli',), ('Wallis Currie-Wood',), ('Mardi DeLong',), ('Kristen Noelle Devine',), ('Megan Devine',), ('Lana Dieterich',), ('Alexa Doggett',), ('Muriel Duckworth',), ('Dawn Dunlap',), ('Katy Dunlap',), ('Amy Earhart',), ('Margaret Easley',), ('Lauren Eichner',), ('May Emory',), ('Morgan Farris',), ('Carly Fiorina',), ('Michelle Forbes',), ('Katie Fountain',), ('Amanda Kay Goggin',), ('Johanna Goldsmith',), ('Katherine Goodrich',), ('Zoe Graham',), ('Sarah Hagan',), ('Percy Haswell',), ('Amber Heard',), ('Kelsey Higgs',), ('Amanda Hope',), ('Natalie Hultman',), ('Elena Hurst',), ('Marianne Hyatt',), ('Elise Ivy',), ('Sarah Jarosz',), ('Janelle Johnson Dolenz',), ('Dakota Johnson',), ('Echo Johnson',), ('Megan Johnson',), ('Kacey Jordan',), ('Heather Kafka',), ('Suzan Kaminga',), ('Zoe Keller',), ('Leigh Kilton',), ('Dannie Helen Loraine Knowles',), ('Kate Krause',), ('Shelly Kristaponis',), ('Kandace Krueger',), ('Karen Kuykendall',), ('Lilas Lane',), ('Julia Lashae',), ('Jessica Looney',), ('Kyle MacDonnell',), ('Nieko Mann',), ('Thea Marie',), ('Arianne Martin',), ('Jennifer Matyear',), ('Lexi Moeller',), ('Ashlyn Molloy',), ('Shannon Morris',), ('Krystal Morton',), ('Christina Murphy',), ('Emma Nicolas',), ('Hannah Nicolas',), ('Natalie Nouri',), ('Sarah Nouri',), ('Tonie Perensky',), ('Maia Petee',), ('Micaela Phillips',), ('Grace Phipps',), ('Sarah Prikryl',), ('Robin Prough',), ('Rachel Beth Reznick',), ('Lindsey Robertson',), ('Elizabeth Rogers',), ('Jennifer Rovero',), ('Adrienne Spiridellis',), ('Sarah Talbot',), ('Angela Thompson',), ('Trillium',), ('Kathy Valentine',), ('Marguerite Warner',), ('Caitlin Wehrle',), ('Aria Whitney',), ('Elizabeth Gwynne Wilson',), ('Jill Winn',), ('Kelly Winn',), ('Leslie Winston',), ('Allison Wittliff',)]","[('Elaine Anderson',), ('Tracy Arnold',), ('Stacy Lynn Austin',), ('Kimberly Barnett',), ('Tomi Barrett',), ('Kimi Bateman',), ('Alecia Batson',), ('Angela Bettis',), ('Bobbi Billard',), ('Annie Bond',), ('Susanna Boney',), ('Cheri Cabiya',), ('Allie Carico',), ('Aurora Marie Chase',), ('Ciara',), ('Karina Clark',), ('Nellie Connally',), ('Evelyn Courtney',), ('Crystal Crawford',), ('Lella Cuberli',), ('Wallis Currie-Wood',), ('Mardi DeLong',), ('Kristen Noelle Devine',), ('Megan Devine',), ('Lana Dieterich',), ('Alexa Doggett',), ('Muriel Duckworth',), ('Dawn Dunlap',), ('Katy Dunlap',), ('Amy Earhart',), ('Margaret Easley',), ('Lauren Eichner',), ('May Emory',), ('Morgan Farris',), ('Carly Fiorina',), ('Michelle Forbes',), ('Katie Fountain',), ('Amanda Kay Goggin',), ('Johanna Goldsmith',), ('Katherine Goodrich',), ('Zoe Graham',), ('Sarah Hagan',), ('Percy Haswell',), ('Amber Heard',), ('Kelsey Higgs',), ('Amanda Hope',), ('Natalie Hultman',), ('Elena Hurst',), ('Marianne Hyatt',), ('Elise Ivy',), ('Sarah Jarosz',), ('Janelle Johnson Dolenz',), ('Dakota Johnson',), ('Echo Johnson',), ('Megan Johnson',), ('Kacey Jordan',), ('Heather Kafka',), ('Suzan Kaminga',), ('Zoe Keller',), ('Leigh Kilton',), ('Dannie Helen Loraine Knowles',), ('Kate Krause',), ('Shelly Kristaponis',), ('Kandace Krueger',), ('Karen Kuykendall',), ('Lilas Lane',), ('Julia Lashae',), ('Jessica Looney',), ('Kyle MacDonnell',), ('Nieko Mann',), ('Thea Marie',), ('Arianne Martin',), ('Jennifer Matyear',), ('Lexi Moeller',), ('Ashlyn Molloy',), ('Shannon Morris',), ('Krystal Morton',), ('Christina Murphy',), ('Emma Nicolas',), ('Hannah Nicolas',), ('Natalie Nouri',), ('Sarah Nouri',), ('Tonie Perensky',), ('Maia Petee',), ('Micaela Phillips',), ('Grace Phipps',), ('Sarah Prikryl',), ('Robin Prough',), ('Rachel Beth Reznick',), ('Lindsey Robertson',), ('Elizabeth Rogers',), ('Jennifer Rovero',), ('Adrienne Spiridellis',), ('Sarah Talbot',), ('Angela Thompson',), ('Trillium',), ('Kathy Valentine',), ('Marguerite Warner',), ('Caitlin Wehrle',), ('Aria Whitney',), ('Elizabeth Gwynne Wilson',), ('Jill Winn',), ('Kelly Winn',), ('Leslie Winston',), ('Allison Wittliff',)]",True
IMDB_train_6,imdb,Find all actors who were born in 1984,return actors; return #1 born in 1984,select actor_0.name from actor as actor_0 where actor_0.birth_year = 1984 ;,SELECT actor.name FROM actor WHERE actor.birth_year = 1984,"[('Hussain Abdullah',), ('Dennis Abernethy',), ('Nabil Abou-Harb',), ('Brahim Achabbakhe',), ('Damián Acosta',), ('Dimas Aditya',), ('Alexander Adler',), ('Viorel Cristian Agapie',), ('Merlyn Agnew-Haycraft',), ('Alan Aguilera',), ('Nick Ahlgrim',), ('Emil Ahlén',), ('Jin Akanishi',), ('Micah Alberti',), ('Ian Albetski',), ('Ian Alda',), ('Jan Michael Alfonso',), ('Arsher Ali',), ('Garrett Allain',), ('Stuart Allard',), ('Joey Allen',), ('Warren Lewis Allen',), ('Luke Allen-Gale',), ('Marshall Allman',), ('Michael Aloni',), ('Naeem Alvi',), ('Javier Ambrossi',), ('Samuel Anderson',), ('Cláudio Andrade',), ('Andrés Andreani',), ('James Francis Andrews',), ('Hero Angeles',), ('Afa Anoai Jr.',), ('Carmelo Anthony',), ('McKinley Anthony',), ('Jack Antonoff',), ('Michael Antosy',), ('Vincen Arch',), ('Dustin Ardine',), ('Mehroz Arif',), ('Marc Arnason',), ('Luke Arnold',), ('André Arteche',), ('Marcin Artecki',), ('Andrew Arvedon',), ('Ryan Ash',), ('Jim Ashilevi',), ('Anthony Ashmore',), ('Ben Askren',), ('Fabian Asserbäck',), ('Brahim Attaeb',), ('Ian Atwood',), ('Taylor August',), ('Jonathan Austin',), ('Grant Babbitt',), ('Joe Babcock',), ('Johnny Baca',), ('Hugo Bachelet',), ('Mårten Backman',), ('Salih Bademci',), ('Prince Bagdasarian',), ('Adam Bagni',), ('Edwin Bailey',), ('Travis Baker',), ('Sunkrish Bala',), ('Tyson Balcomb',), ('João Baldasserini',), ('Justin Baldoni',), ('Brian Balzerini',), ('Hernando Bansuelo',), ('Bei-Er Bao',), ('João Baptista',), ('Emmanuel A. Baptiste',), ('Ricardo Barbosa',), ('Aleksey Bardukov',), ('Mieszko Barglik',), ('Wesley Barker',), ('Tyler Barnes',), ('Matt Barr',), ('Jeremy Barrett',), ('Jesse Barrett-Mills',), ('Sebastián Barriuso',), ('Logan Bartholomew',), ('James Bartle',), ('Jonathan Bauer',), ('Justin Bauer',), ('Rick Bauer',), ('Álvaro Bautista',), ('Eser Bayar',), ('Pawl Bazile',), ('Tanner Beard',), ('Stephen Beattie',), ('William Beatty',), ('Eric Beaudry',), ('Rory Beauregard',), ('Alex Becconsall',), ('Harlys Becerra',), ('Igor Beciric',), ('Joshua Beck-Jones',), ('Aaron Beckstead',), ('Michael Behm',), ('Joe Bell',), ('Mike Bell',), ('Joseph Benavidez',), ('Petar Bencina',), ('Ævar Þór Benediktsson',), ('Jeremiah Bennett',), ('John Aaron Bennett',), ('Gareth Bennett-Ryan',), ('Jason Benoit',), ('Stepán Benoni',), ('Nikolai Bentsler',), ('Stuart Berberich',), ('Michael Berendt',), ('Eric Berlynn',), ('Sergio Bermúdez',), ('Kent Jude Bernard',), ('Blake Berris',), ('Giulio Berruti',), ('Cleo Berry',), ('Antony Bert',), ('Nicola Berto',), ('Wilson Bethel',), ('Jordan Bettinger',), ('Ryan Bevilacqua',), ('Balder Beyer',), ('Leonid Bichevin',), ('Ozan Bilen',), ('Alex Billig',), ('Chad Billingsley',), ('Rodin Alper Bingol',), ('Odin Lund Biron',), ('Steven Erik Bishop',), ('Krzysztof Bitdorf',), ('Pierre Bittencourt',), ('Euan Blair',), ('Jacob Blair',), ('Kellen Blair',), ('Cody Block',), ('Jeremy Blossom',), ('Chris Blount',), ('Brandon Blue',), ('Trevor Blumas',), ('Cody Matthew Blymire',), ('Raphael Bob-Waksberg',), ('Manuel Bocero',), ('Todd Boeckman',), ('Steven Boen',), ('Brad Bohannon',), ('Adan Bolevar',), ('Joseph Bolz',), ('Francisco Bolívar',), ('Adam Boncz',), ('Peter Bond',), ('Jason Boniello',), ('Salvatore Bono',), ('Brett Ryan Bonowicz',), ('Adam Boorstin',), ('Dylan Booth',), ('Petr Borovec',), ('David Borrego',), ('Chris Bosh',), ('John Bosher',), ('Todd Bosley',), ('Michael Bottos',), ('Charles-Jean Boucher',), ('Paul Boukadakis',), ('Eric Bouwer',), ('Matthew Bowen',), ('Angelo Bowers',), ('Giles Bowman',), ('Jeffrey Bowyer-Chapman',), ('Cameron Boyd',), ('Matthew Boyle',), ('Ryan Boyle',), ('Klee Bragger',), ('Mark Bransky',), ('Ciprian Brasoveanu',), ('Konrad Brattke',), ('Josh Brener',), ('Geoff Breton',), ('Lux Avery Briar',), ('Félix Briaud',), ('Dustin Bricker',), ('Arthur Bridgers',), ('Andrew Briedis',), ('Dontrail Brinson',), ('Sean Briskey',), ('Rocky Brito',), ('Herb Britt',), ('Jon Lee Brody',), ('Dane Brookes',), ('Ahmad Brooks',), ('Darin Brooks',), ('Brandon Brown',), ('Kourtney Brown',), ('Rob Brown',), ('Brandon Browner',), ('James T. Bruce IV',), ('Bruno',)]","[('Hussain Abdullah',), ('Dennis Abernethy',), ('Nabil Abou-Harb',), ('Brahim Achabbakhe',), ('Damián Acosta',), ('Dimas Aditya',), ('Alexander Adler',), ('Viorel Cristian Agapie',), ('Merlyn Agnew-Haycraft',), ('Alan Aguilera',), ('Nick Ahlgrim',), ('Emil Ahlén',), ('Jin Akanishi',), ('Micah Alberti',), ('Ian Albetski',), ('Ian Alda',), ('Jan Michael Alfonso',), ('Arsher Ali',), ('Garrett Allain',), ('Stuart Allard',), ('Joey Allen',), ('Warren Lewis Allen',), ('Luke Allen-Gale',), ('Marshall Allman',), ('Michael Aloni',), ('Naeem Alvi',), ('Javier Ambrossi',), ('Samuel Anderson',), ('Cláudio Andrade',), ('Andrés Andreani',), ('James Francis Andrews',), ('Hero Angeles',), ('Afa Anoai Jr.',), ('Carmelo Anthony',), ('McKinley Anthony',), ('Jack Antonoff',), ('Michael Antosy',), ('Vincen Arch',), ('Dustin Ardine',), ('Mehroz Arif',), ('Marc Arnason',), ('Luke Arnold',), ('André Arteche',), ('Marcin Artecki',), ('Andrew Arvedon',), ('Ryan Ash',), ('Jim Ashilevi',), ('Anthony Ashmore',), ('Ben Askren',), ('Fabian Asserbäck',), ('Brahim Attaeb',), ('Ian Atwood',), ('Taylor August',), ('Jonathan Austin',), ('Grant Babbitt',), ('Joe Babcock',), ('Johnny Baca',), ('Hugo Bachelet',), ('Mårten Backman',), ('Salih Bademci',), ('Prince Bagdasarian',), ('Adam Bagni',), ('Edwin Bailey',), ('Travis Baker',), ('Sunkrish Bala',), ('Tyson Balcomb',), ('João Baldasserini',), ('Justin Baldoni',), ('Brian Balzerini',), ('Hernando Bansuelo',), ('Bei-Er Bao',), ('João Baptista',), ('Emmanuel A. Baptiste',), ('Ricardo Barbosa',), ('Aleksey Bardukov',), ('Mieszko Barglik',), ('Wesley Barker',), ('Tyler Barnes',), ('Matt Barr',), ('Jeremy Barrett',), ('Jesse Barrett-Mills',), ('Sebastián Barriuso',), ('Logan Bartholomew',), ('James Bartle',), ('Jonathan Bauer',), ('Justin Bauer',), ('Rick Bauer',), ('Álvaro Bautista',), ('Eser Bayar',), ('Pawl Bazile',), ('Tanner Beard',), ('Stephen Beattie',), ('William Beatty',), ('Eric Beaudry',), ('Rory Beauregard',), ('Alex Becconsall',), ('Harlys Becerra',), ('Igor Beciric',), ('Joshua Beck-Jones',), ('Aaron Beckstead',), ('Michael Behm',), ('Joe Bell',), ('Mike Bell',), ('Joseph Benavidez',), ('Petar Bencina',), ('Ævar Þór Benediktsson',), ('Jeremiah Bennett',), ('John Aaron Bennett',), ('Gareth Bennett-Ryan',), ('Jason Benoit',), ('Stepán Benoni',), ('Nikolai Bentsler',), ('Stuart Berberich',), ('Michael Berendt',), ('Eric Berlynn',), ('Sergio Bermúdez',), ('Kent Jude Bernard',), ('Blake Berris',), ('Giulio Berruti',), ('Cleo Berry',), ('Antony Bert',), ('Nicola Berto',), ('Wilson Bethel',), ('Jordan Bettinger',), ('Ryan Bevilacqua',), ('Balder Beyer',), ('Leonid Bichevin',), ('Ozan Bilen',), ('Alex Billig',), ('Chad Billingsley',), ('Rodin Alper Bingol',), ('Odin Lund Biron',), ('Steven Erik Bishop',), ('Krzysztof Bitdorf',), ('Pierre Bittencourt',), ('Euan Blair',), ('Jacob Blair',), ('Kellen Blair',), ('Cody Block',), ('Jeremy Blossom',), ('Chris Blount',), ('Brandon Blue',), ('Trevor Blumas',), ('Cody Matthew Blymire',), ('Raphael Bob-Waksberg',), ('Manuel Bocero',), ('Todd Boeckman',), ('Steven Boen',), ('Brad Bohannon',), ('Adan Bolevar',), ('Joseph Bolz',), ('Francisco Bolívar',), ('Adam Boncz',), ('Peter Bond',), ('Jason Boniello',), ('Salvatore Bono',), ('Brett Ryan Bonowicz',), ('Adam Boorstin',), ('Dylan Booth',), ('Petr Borovec',), ('David Borrego',), ('Chris Bosh',), ('John Bosher',), ('Todd Bosley',), ('Michael Bottos',), ('Charles-Jean Boucher',), ('Paul Boukadakis',), ('Eric Bouwer',), ('Matthew Bowen',), ('Angelo Bowers',), ('Giles Bowman',), ('Jeffrey Bowyer-Chapman',), ('Cameron Boyd',), ('Matthew Boyle',), ('Ryan Boyle',), ('Klee Bragger',), ('Mark Bransky',), ('Ciprian Brasoveanu',), ('Konrad Brattke',), ('Josh Brener',), ('Geoff Breton',), ('Lux Avery Briar',), ('Félix Briaud',), ('Dustin Bricker',), ('Arthur Bridgers',), ('Andrew Briedis',), ('Dontrail Brinson',), ('Sean Briskey',), ('Rocky Brito',), ('Herb Britt',), ('Jon Lee Brody',), ('Dane Brookes',), ('Ahmad Brooks',), ('Darin Brooks',), ('Brandon Brown',), ('Kourtney Brown',), ('Rob Brown',), ('Brandon Browner',), ('James T. Bruce IV',), ('Bruno',)]",True
IMDB_train_60,imdb,Find all actors from Austin born after 1980,return actors; return #1 from Austin; return #1 born after 1980; return #1 in both #2 and #3,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""Austin"" and actor_0.birth_year  >  1980 ;",SELECT DISTINCT actor.name FROM actor WHERE actor.birth_city = 'Austin' AND actor.birth_year > 1980,"[('Marshall Allman',), ('Adam Alvarez',), ('Brian Bogart',), ('Luke Broadlick',), ('Rowdy Brown',), ('Aaron Burns',), ('Pedro Campos',), ('D.J. Castillo',), ('Sonny Castillo',), ('Dominik Chilleri',), ('John Chilleri',), ('Ellar Coltrane',), ('Michael Ted Ferris',), ('Cole Fowler',), ('Zach Freeman',), ('Paul Galvan',), ('Bobby Gaston',), ('Chris Gouker',), ('Spencer Greenwood',), ('Kanin Howell',), ('Christopher Hurt',), ('Angus T. Jones',), ('Omid Kalantari',), ('Nick Krause',), ('Max Kruemcke',), ('Jack Kyser',), ('Ricky Lee',), ('Seth Lee',), ('Gabriel Luna',), ('Will Martin',), ('James Leonardo Mayberry',), ('Justin Mentell',), ('James Merryman',), ('Trevor Doyle Nelson',), ('Azure D. Osborne-Lee',), ('Glen Powell',), ('Vincent James Prendergast',), ('Jonny Riojas',), ('Racer Rodriguez',), ('Rebel Rodriguez',), ('Rocket Rodriguez',), ('John Hawthorne Smith',), ('Evan Stern',), ('Trev',), ('Joe Vargas',), ('Andrew Washington',), ('Herman Whitney III',), ('Stacy Lynn Austin',), ('Kimberly Barnett',), ('Annie Bond',), ('Susanna Boney',), ('Allie Carico',), ('Aurora Marie Chase',), ('Ciara',), ('Karina Clark',), ('Evelyn Courtney',), ('Crystal Crawford',), ('Wallis Currie-Wood',), ('Kristen Noelle Devine',), ('Megan Devine',), ('Alexa Doggett',), ('Katy Dunlap',), ('Lauren Eichner',), ('Morgan Farris',), ('Katie Fountain',), ('Amanda Kay Goggin',), ('Zoe Graham',), ('Sarah Hagan',), ('Amber Heard',), ('Kelsey Higgs',), ('Elena Hurst',), ('Elise Ivy',), ('Sarah Jarosz',), ('Dakota Johnson',), ('Kacey Jordan',), ('Zoe Keller',), ('Dannie Helen Loraine Knowles',), ('Kate Krause',), ('Nieko Mann',), ('Thea Marie',), ('Arianne Martin',), ('Lexi Moeller',), ('Ashlyn Molloy',), ('Krystal Morton',), ('Christina Murphy',), ('Emma Nicolas',), ('Hannah Nicolas',), ('Natalie Nouri',), ('Sarah Nouri',), ('Maia Petee',), ('Micaela Phillips',), ('Grace Phipps',), ('Robin Prough',), ('Rachel Beth Reznick',), ('Lindsey Robertson',), ('Sarah Talbot',), ('Trillium',), ('Caitlin Wehrle',), ('Aria Whitney',), ('Elizabeth Gwynne Wilson',)]","[('Marshall Allman',), ('Adam Alvarez',), ('Brian Bogart',), ('Luke Broadlick',), ('Rowdy Brown',), ('Aaron Burns',), ('Pedro Campos',), ('D.J. Castillo',), ('Sonny Castillo',), ('Dominik Chilleri',), ('John Chilleri',), ('Ellar Coltrane',), ('Michael Ted Ferris',), ('Cole Fowler',), ('Zach Freeman',), ('Paul Galvan',), ('Bobby Gaston',), ('Chris Gouker',), ('Spencer Greenwood',), ('Kanin Howell',), ('Christopher Hurt',), ('Angus T. Jones',), ('Omid Kalantari',), ('Nick Krause',), ('Max Kruemcke',), ('Jack Kyser',), ('Ricky Lee',), ('Seth Lee',), ('Gabriel Luna',), ('Will Martin',), ('James Leonardo Mayberry',), ('Justin Mentell',), ('James Merryman',), ('Trevor Doyle Nelson',), ('Azure D. Osborne-Lee',), ('Glen Powell',), ('Vincent James Prendergast',), ('Jonny Riojas',), ('Racer Rodriguez',), ('Rebel Rodriguez',), ('Rocket Rodriguez',), ('John Hawthorne Smith',), ('Evan Stern',), ('Trev',), ('Joe Vargas',), ('Andrew Washington',), ('Herman Whitney III',), ('Stacy Lynn Austin',), ('Kimberly Barnett',), ('Annie Bond',), ('Susanna Boney',), ('Allie Carico',), ('Aurora Marie Chase',), ('Ciara',), ('Karina Clark',), ('Evelyn Courtney',), ('Crystal Crawford',), ('Wallis Currie-Wood',), ('Kristen Noelle Devine',), ('Megan Devine',), ('Alexa Doggett',), ('Katy Dunlap',), ('Lauren Eichner',), ('Morgan Farris',), ('Katie Fountain',), ('Amanda Kay Goggin',), ('Zoe Graham',), ('Sarah Hagan',), ('Amber Heard',), ('Kelsey Higgs',), ('Elena Hurst',), ('Elise Ivy',), ('Sarah Jarosz',), ('Dakota Johnson',), ('Kacey Jordan',), ('Zoe Keller',), ('Dannie Helen Loraine Knowles',), ('Kate Krause',), ('Nieko Mann',), ('Thea Marie',), ('Arianne Martin',), ('Lexi Moeller',), ('Ashlyn Molloy',), ('Krystal Morton',), ('Christina Murphy',), ('Emma Nicolas',), ('Hannah Nicolas',), ('Natalie Nouri',), ('Sarah Nouri',), ('Maia Petee',), ('Micaela Phillips',), ('Grace Phipps',), ('Robin Prough',), ('Rachel Beth Reznick',), ('Lindsey Robertson',), ('Sarah Talbot',), ('Trillium',), ('Caitlin Wehrle',), ('Aria Whitney',), ('Elizabeth Gwynne Wilson',)]",True
IMDB_train_61,imdb,"How many movies are there that are directed by "" Steven Spielberg "" and featuring "" Matt Damon "" ?",return movies; return #1 directed by Steven Spielberg; return #2 featuring Matt Damon; return number of #3,"select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = ""Matt Damon"" and director_0.name = ""Steven Spielberg"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.mid FROM actor, movie, director, directed_by WHERE director.birth_year = actor.birth_year AND movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Steven Spielberg' AND actor.name = 'Matt Damon'",[],[],True
IMDB_train_62,imdb,Find all actors from Italy born after 1980,return actors; return #1 from Italy; return #2 born after 1980,"select actor_0.name from actor as actor_0 where actor_0.birth_year  >  1980 and actor_0.nationality = ""Italy"" ;",SELECT actor.name FROM actor WHERE actor.nationality = 'Italy' AND actor.birth_year > 1980,"[('Dario Aita',), ('Francesco Paolo Alessi',), ('Vincenzo Alfieri',), ('Claudio Ammendola',), ('Gabriele Anagni',), ('Mirko Antichi',), ('Jacopo Olmo Antinori',), ('Diego Artioli',), ('Vincenzo Aschettino',), ('Carlo Astuti',), ('Andrea Baglio',), ('Ascanio Balbo',), ('Lorenzo Balducci',), ('Roberto Basilico',), ('Michele Basso',), ('Luigi Benvisto',), ('Giulio Berruti',), ('Nicola Berto',), ('Glen Blackhall',), ('Alessandro Borghi',), ('Emanuele Bosi',), ('Lorenzo Branchetti',), ('Matteo Branciamore',), ('Michael Cadeddu',), ('Simone Canosa',), ('Giorgio Cantarini',), ('Gianclaudio Caretta',), ('Giulio Carmassi',), ('Francesco Casisa',), ('Pasquale Cassalia',), ('Thomas Centaro',), ('Thomas Cibelli',), ('Paolo Cioni',), ('Paolo Cirio',), ('Eric Coco',), ('Frenck Coppola',), ('Angela Curiello',), (""Marco D'Amore"",), (""Biagio d'Anelli"",), (""Pio D'Antini"",), (""Eros D'Antona"",), (""Roberto D'Antona"",), (""Diego D'Elia"",), ('Alessandro Damiani',), ('Enoch-Jude Danquah',), ('Giulio Forges Davanzati',), ('Lorenzo De Angelis',), ('Simone De Marinis',), ('Mattia De Martino',), ('Brando De Sica',), ('Francesco De Simone',), ('Leonardo Della Bianca',), ('Giuseppe Di Bella',), ('Gianluca Di Gennaro',), ('Sacha Dominis',), ('Ciro Esposito',), ('Gabriele Fabbro',), ('Giacomo Fadda',), ('Francesco Falchetto',), ('Guglielmo Favilla',), ('Fdaeji',), ('Luca Fiamenghi',), ('Gabriele Foresti',), ('Ludovico Fremont',), ('Giacomo Gabrielli',), ('Gabriele Galli',), ('Fabio Ghidoni',), ('Andrea Giannetta',), ('Francesco Giuffrida',), ('Paolo Goddi',), ('Amedeo Grieco',), ('Luca Guastini',), ('Sebastian Gutsche',), ('Thomas Haberer',), ('Ed Hendrik',), ('Marco Iannitello',), ('Brando Improta',), ('Robert Jaboni',), ('Daniele La Leggia',), ('Maximilian Law',), ('Venus Leone',), ('Giuseppe Vitantonio Liuzzi',), ('Marco Macor',), ('Michele Maganza',), ('Gabriele Manfredi',), ('Luca Marinelli',), ('Nicolò Marino',), ('Stefano Martinelli',), ('Francesco Martino',), ('Fabio Massa',), ('Francesco Massaccesi',), ('Davide Mastrangelo',), ('Tommaso Matelli',), ('Mehdi Meskar',), ('Cosimo Messeri',), ('Paolo Migliorelli',), ('Diego Sebastian Misasi',), ('Daniele Misischia',), ('Michael Jamal Mitchell',), ('Leonardo Monfardini',), ('Francesco Montanari',), ('Fabio Mucci',), ('Silvio Muccino',), ('Gianandrea Muià',), ('Fabrizio Carlo Muscia',), ('Paolo Muzio',), ('Yuri Napoli',), ('Manuel Nardi',), ('Russell Nauman',), ('Walter Nicoletti',), ('Antonello Novellino',), ('Lele Nucera',), ('Gerardo Orlando',), ('Brando Pacitto',), ('Luca Padrini',), ('Leonardo Pallenberg',), ('Marco Pancrazi',), ('Adriano Pantaleo',), ('Stefano Parrinello',), ('Gabriele Patriarca',), ('Lorenzo Pedrotti',), ('Andrea Pergolesi',), ('Davide Perino',), ('Alfonso Perugini',), ('Ciro Petrone',), ('Matteo Pianezzi',), ('Max Pietricola',), ('Antonio Pisu',), ('Ugo Piva',), ('Brenno Placido',), ('Filippo M. Prandi',), ('Vittorio Emanuele Propizio',), ('Fabrizio Provinciali',), ('Filippo Pucillo',), ('Tommaso Ramenghi',), ('Mirko Ranù',), ('Primo Reggiani',), ('Liam Riccardo',), ('Michael Righini',), ('Matteo Ripaldi',), ('Federico Robbiano',), ('Gabriele Rossi',), ('Chef Rubio',), ('Peppe Ruggeri',), ('Clemente Russo',), ('Alessandro Sacco',), ('Alessio Sakara',), ('Giuseppe Sanfelice',), ('Edoardo Scarantino',), ('Andrea Scarduzio',), ('Alessandro Schiassi',), ('Francesco Scianna',), ('Matteo Scifoni',), ('Niccolò Senni',), ('Mirco Sgarzi',), ('Davide Silvestri',), ('Jacopo Sipari di Pescasseroli',), ('Rudy Smaila',), ('Giuseppe Soleri',), ('Alessandro Sperduti',), ('Cole Sprouse',), ('Dylan Sprouse',), ('Giuseppe Sulfaro',), ('Ottavio Taddei',), ('Riccardo Tamburini',), ('Giorgio Tavecchio',), ('Gianfranco Terrin',), ('Luca Turco',), ('Matteo Urzia',), ('Joseph Vales',), ('Luca Della Valle',), ('Nicolas Vaporidis',), ('Doug Walker',), ('Enzo Zelocchi',), ('Lorenzo Zurzolo',), ('Laura Adriani',), ('Eleonora Albrecht',), ('Giada Arena',), ('Arisa',), ('Maria Chiara Augenti',), ('Giuditta Avossa',), ('Malika Ayane',), ('Cristina Baldino',), ('Bianca Balti',), ('Tania Bambaci',), ('Isabelle Barciulli',), ('Elena Barolo',), ('Rini Bell',), ('Alice Bellagamba',), ('Lucia Bellini',), ('Giulia Bertini',), ('Federica Bertolani',), ('Valeria Bilello',), ('Ludovica Bizzaglia',), ('Ilary Blasi',), ('Mariel Alliata Bronner',), ('Roberta Bruni',), ('Sofia Bruscoli',), ('Carla Buttarazzi',), ('Eleonora Cadeddu',)]","[('Dario Aita',), ('Francesco Paolo Alessi',), ('Vincenzo Alfieri',), ('Claudio Ammendola',), ('Gabriele Anagni',), ('Mirko Antichi',), ('Jacopo Olmo Antinori',), ('Diego Artioli',), ('Vincenzo Aschettino',), ('Carlo Astuti',), ('Andrea Baglio',), ('Ascanio Balbo',), ('Lorenzo Balducci',), ('Roberto Basilico',), ('Michele Basso',), ('Luigi Benvisto',), ('Giulio Berruti',), ('Nicola Berto',), ('Glen Blackhall',), ('Alessandro Borghi',), ('Emanuele Bosi',), ('Lorenzo Branchetti',), ('Matteo Branciamore',), ('Michael Cadeddu',), ('Simone Canosa',), ('Giorgio Cantarini',), ('Gianclaudio Caretta',), ('Giulio Carmassi',), ('Francesco Casisa',), ('Pasquale Cassalia',), ('Thomas Centaro',), ('Thomas Cibelli',), ('Paolo Cioni',), ('Paolo Cirio',), ('Eric Coco',), ('Frenck Coppola',), ('Angela Curiello',), (""Marco D'Amore"",), (""Biagio d'Anelli"",), (""Pio D'Antini"",), (""Eros D'Antona"",), (""Roberto D'Antona"",), (""Diego D'Elia"",), ('Alessandro Damiani',), ('Enoch-Jude Danquah',), ('Giulio Forges Davanzati',), ('Lorenzo De Angelis',), ('Simone De Marinis',), ('Mattia De Martino',), ('Brando De Sica',), ('Francesco De Simone',), ('Leonardo Della Bianca',), ('Giuseppe Di Bella',), ('Gianluca Di Gennaro',), ('Sacha Dominis',), ('Ciro Esposito',), ('Gabriele Fabbro',), ('Giacomo Fadda',), ('Francesco Falchetto',), ('Guglielmo Favilla',), ('Fdaeji',), ('Luca Fiamenghi',), ('Gabriele Foresti',), ('Ludovico Fremont',), ('Giacomo Gabrielli',), ('Gabriele Galli',), ('Fabio Ghidoni',), ('Andrea Giannetta',), ('Francesco Giuffrida',), ('Paolo Goddi',), ('Amedeo Grieco',), ('Luca Guastini',), ('Sebastian Gutsche',), ('Thomas Haberer',), ('Ed Hendrik',), ('Marco Iannitello',), ('Brando Improta',), ('Robert Jaboni',), ('Daniele La Leggia',), ('Maximilian Law',), ('Venus Leone',), ('Giuseppe Vitantonio Liuzzi',), ('Marco Macor',), ('Michele Maganza',), ('Gabriele Manfredi',), ('Luca Marinelli',), ('Nicolò Marino',), ('Stefano Martinelli',), ('Francesco Martino',), ('Fabio Massa',), ('Francesco Massaccesi',), ('Davide Mastrangelo',), ('Tommaso Matelli',), ('Mehdi Meskar',), ('Cosimo Messeri',), ('Paolo Migliorelli',), ('Diego Sebastian Misasi',), ('Daniele Misischia',), ('Michael Jamal Mitchell',), ('Leonardo Monfardini',), ('Francesco Montanari',), ('Fabio Mucci',), ('Silvio Muccino',), ('Gianandrea Muià',), ('Fabrizio Carlo Muscia',), ('Paolo Muzio',), ('Yuri Napoli',), ('Manuel Nardi',), ('Russell Nauman',), ('Walter Nicoletti',), ('Antonello Novellino',), ('Lele Nucera',), ('Gerardo Orlando',), ('Brando Pacitto',), ('Luca Padrini',), ('Leonardo Pallenberg',), ('Marco Pancrazi',), ('Adriano Pantaleo',), ('Stefano Parrinello',), ('Gabriele Patriarca',), ('Lorenzo Pedrotti',), ('Andrea Pergolesi',), ('Davide Perino',), ('Alfonso Perugini',), ('Ciro Petrone',), ('Matteo Pianezzi',), ('Max Pietricola',), ('Antonio Pisu',), ('Ugo Piva',), ('Brenno Placido',), ('Filippo M. Prandi',), ('Vittorio Emanuele Propizio',), ('Fabrizio Provinciali',), ('Filippo Pucillo',), ('Tommaso Ramenghi',), ('Mirko Ranù',), ('Primo Reggiani',), ('Liam Riccardo',), ('Michael Righini',), ('Matteo Ripaldi',), ('Federico Robbiano',), ('Gabriele Rossi',), ('Chef Rubio',), ('Peppe Ruggeri',), ('Clemente Russo',), ('Alessandro Sacco',), ('Alessio Sakara',), ('Giuseppe Sanfelice',), ('Edoardo Scarantino',), ('Andrea Scarduzio',), ('Alessandro Schiassi',), ('Francesco Scianna',), ('Matteo Scifoni',), ('Niccolò Senni',), ('Mirco Sgarzi',), ('Davide Silvestri',), ('Jacopo Sipari di Pescasseroli',), ('Rudy Smaila',), ('Giuseppe Soleri',), ('Alessandro Sperduti',), ('Cole Sprouse',), ('Dylan Sprouse',), ('Giuseppe Sulfaro',), ('Ottavio Taddei',), ('Riccardo Tamburini',), ('Giorgio Tavecchio',), ('Gianfranco Terrin',), ('Luca Turco',), ('Matteo Urzia',), ('Joseph Vales',), ('Luca Della Valle',), ('Nicolas Vaporidis',), ('Doug Walker',), ('Enzo Zelocchi',), ('Lorenzo Zurzolo',), ('Laura Adriani',), ('Eleonora Albrecht',), ('Giada Arena',), ('Arisa',), ('Maria Chiara Augenti',), ('Giuditta Avossa',), ('Malika Ayane',), ('Cristina Baldino',), ('Bianca Balti',), ('Tania Bambaci',), ('Isabelle Barciulli',), ('Elena Barolo',), ('Rini Bell',), ('Alice Bellagamba',), ('Lucia Bellini',), ('Giulia Bertini',), ('Federica Bertolani',), ('Valeria Bilello',), ('Ludovica Bizzaglia',), ('Ilary Blasi',), ('Mariel Alliata Bronner',), ('Roberta Bruni',), ('Sofia Bruscoli',), ('Carla Buttarazzi',), ('Eleonora Cadeddu',)]",True
IMDB_train_63,imdb,"Find all the female actors born in "" New York City "" after 1980",return actors; return #1 that are female; return #2 born in New York City; return #3 born after 1980,"select actor_0.name from actor as actor_0 where actor_0.birth_city = ""New York City"" and actor_0.birth_year  >  1980 and actor_0.gender = ""female"" ;",SELECT actor.name FROM actor WHERE actor.gender = 'female' AND actor.birth_city = 'New York City' AND actor.birth_year > 1980,"[('Amanda Aday',), ('Gabriela Aisenberg',), ('Asa Akira',), ('Haley Alexis',), ('Fatima Ali',), ('Sasha Allen',), ('Melissa Amber',), ('Eva Amurri Martino',), ('Capri Anderson',), ('Stephanie Andujar',), ('Devon Aoki',), ('A.J. Applegate',), ('Leanna Archer',), ('Charli Arcouette-Martineau',), ('Nina Arianda',), ('Angelina Armani',), ('Marlene Artov',), ('Victoria Asher',), ('Sophie Auster',), ('Finise Avery',), ('Krista Ayne',), ('Amoni B.',), ('Adrienne Bailon',), ('Kt Baldassaro',), ('Azealia Banks',), ('Karissa Barcelo',), ('Yvette Bass',), ('Lola Bates-Campbell',), ('Kelly Baugher',), ('Shanna Becker',), ('Theresa Bennett',), ('Brianne Berkson',), ('Maya N. Blake',), ('Adrianna Bremont',), ('Darian Brenner',), ('Abigail Breslin',), ('Amanda Brooks',), ('Olivia Brown',), ('Jessica Caban',), ('Allie Calman',), ('Emily Carmichael',), ('Desiree Casado',), ('Raquel Castro',), ('Francesca Cecil',), ('Jennifer Cetrone',), ('Francesca Chaney',), ('Jessica Cherniak',), ('Danielle Colangelo',), ('Rachel Covey',), ('Jackie Cruz',), ('Renae Cruz',), ('Quinn Culkin',), ('Jessica Cunningham',), ('Yaya DaCosta',), ('Alexandra Daddario',), ('Valentina de Angelis',), ('Paz de la Huerta',), ('Meredith Deane',), ('Lana Del Rey',), ('Bonnie Dennison',), ('Kea Devay',), ('Maryelle DeVitto',), ('Noureen DeWulf',), ('Melonie Diaz',), ('Marié Digby',), ('Blair Dinucci',), ('Taylor Dior',), ('Charlene-Vanessa Draytón',), ('Grace Dunham',), ('Lena Dunham',), ('Alexis Dziena',), ('Abby Elliott',), ('Michelle Elyse',), ('India Ennenga',), ('Shareeka Epps',), ('Tiffany Evans',), ('Amanda Evora',), ('Audrey Elizabeth Fafard',), ('Gabriella Fanuele',), ('Maggie Farley',), ('Melissa Farman',), ('Tai Fauci',), ('Sabrina Ferrer',), ('Dana Arielle Fields',), ('Jesilyn Figueroa',), ('Lisa Flores',), ('Elena Franklin',), ('Lady Gaga',), ('Julia Garner',), ('Jordan Elizabeth Gelber',), ('Katrina Gellar',), ('Ashley Gerasimovich',), ('Paulina Gerzon',), ('Danielle Glick',), ('Andrea Gold',), ('Grace Gummer',), ('Mamie Gummer',), ('Samantha Gutterman',), ('Zoë Hall',), ('Elizabeth Hannah',), ('Chelsea Harkins',), ('Isis Harris',), ('Zelda Harris',), ('Anne Hathaway',), ('Shirley Henriquez',), ('Christina Hernandez',), ('Calista Hill',), ('Gabriella Hill',), ('Madeline Hill',), ('Paris Hilton',), ('Allison Hirschlag',), ('Gaby Hoffmann',), ('Tiffany Holiday',), ('Chelsea Holland',), ('Barbara Hollander',), ('Teresa Hui',), ('Sarah Hyland',), ('Alaina Irizarry',), ('Sarah Rachel Isenberg',), ('Skai Jackson',), ('Kayla Jane',), ('Jessica Jennings',), ('Ruby Jerins',), ('Sterling Jerins',), ('Cherie Jimenez',), ('Scarlett Johansson',), ('Sarah Jonker',), ('Lydia Jordan',), ('Elena Kampouris',), ('Serena Kerrigan',), ('Alicia Keys',), ('Jiah Khan',), ('Linda Király',), ('Greta Kline',), ('Anastasia Konstantinou',), ('Shelby Kovant',), ('Eileen Kovener',), ('Alice Kremelberg',), ('Cassidy Ladden',), ('Cyrenne Laljie',), ('Lisa Lang',), ('Rachelle Leconte',), ('Allegra Leguizamo',), ('Abigail Leib',), ('Mandy Leon',), ('Jessica Lewis',), ('Sheryl Lipuma',), ('Zoe Lister-Jones',), ('Chelsea Logan',), ('Ali Lohan',), ('Lindsay Lohan',), ('Olivia Luccardi',), ('Katharine Luckinbill',), ('Carmen Luvana',), ('Cadence Lux',), ('Kayla Maisonet',), ('Samantha Maldonado',), ('Lil Mama',), ('Gia Mantegna',), ('Celine Marget',), ('Judy Marte',), ('Elizabeth Masucci',), ('Mariana Matthews',), ('Michaela McPherson',), ('Jennifer Merrill',), ('Courtney Merritt',), ('Lea Michele',), ('Sienna Miller',), ('Lili Mirojnick',), ('Jessica Munch',), ('Reese Nanavati',), ('Victoria Ng',), (""Shelby O'Connell"",), ('Jeanne Orr',), ('Jeannie Ortega',), ('Mabel Pantaleon',), ('Ursula Parker',), ('Michelle Pascarella',), ('Erin Patricia',), ('Nicole Patrick',), ('Taylor Patterson',), ('Sharron Paul',), ('Ashley Peldon',), ('Courtney Peldon',), ('Nicolette Pierini',), ('Jenn Pinto',), ('Candice Preau',), ('Sally Pressman',), ('Condola Rashad',), ('Angelica Raven',), ('Charlie Ray',), ('Sue Redman',), ('Alisa Reyes',), ('Katherine Rose Riley',), ('Mulani Rivera',), ('Raelene Roberts',), ('Emily Robinson',), ('Rachel Robinson',), ('Tatsumi Romano',), ('Saoirse Ronan',)]","[('Amanda Aday',), ('Gabriela Aisenberg',), ('Asa Akira',), ('Haley Alexis',), ('Fatima Ali',), ('Sasha Allen',), ('Melissa Amber',), ('Eva Amurri Martino',), ('Capri Anderson',), ('Stephanie Andujar',), ('Devon Aoki',), ('A.J. Applegate',), ('Leanna Archer',), ('Charli Arcouette-Martineau',), ('Nina Arianda',), ('Angelina Armani',), ('Marlene Artov',), ('Victoria Asher',), ('Sophie Auster',), ('Finise Avery',), ('Krista Ayne',), ('Amoni B.',), ('Adrienne Bailon',), ('Kt Baldassaro',), ('Azealia Banks',), ('Karissa Barcelo',), ('Yvette Bass',), ('Lola Bates-Campbell',), ('Kelly Baugher',), ('Shanna Becker',), ('Theresa Bennett',), ('Brianne Berkson',), ('Maya N. Blake',), ('Adrianna Bremont',), ('Darian Brenner',), ('Abigail Breslin',), ('Amanda Brooks',), ('Olivia Brown',), ('Jessica Caban',), ('Allie Calman',), ('Emily Carmichael',), ('Desiree Casado',), ('Raquel Castro',), ('Francesca Cecil',), ('Jennifer Cetrone',), ('Francesca Chaney',), ('Jessica Cherniak',), ('Danielle Colangelo',), ('Rachel Covey',), ('Jackie Cruz',), ('Renae Cruz',), ('Quinn Culkin',), ('Jessica Cunningham',), ('Yaya DaCosta',), ('Alexandra Daddario',), ('Valentina de Angelis',), ('Paz de la Huerta',), ('Meredith Deane',), ('Lana Del Rey',), ('Bonnie Dennison',), ('Kea Devay',), ('Maryelle DeVitto',), ('Noureen DeWulf',), ('Melonie Diaz',), ('Marié Digby',), ('Blair Dinucci',), ('Taylor Dior',), ('Charlene-Vanessa Draytón',), ('Grace Dunham',), ('Lena Dunham',), ('Alexis Dziena',), ('Abby Elliott',), ('Michelle Elyse',), ('India Ennenga',), ('Shareeka Epps',), ('Tiffany Evans',), ('Amanda Evora',), ('Audrey Elizabeth Fafard',), ('Gabriella Fanuele',), ('Maggie Farley',), ('Melissa Farman',), ('Tai Fauci',), ('Sabrina Ferrer',), ('Dana Arielle Fields',), ('Jesilyn Figueroa',), ('Lisa Flores',), ('Elena Franklin',), ('Lady Gaga',), ('Julia Garner',), ('Jordan Elizabeth Gelber',), ('Katrina Gellar',), ('Ashley Gerasimovich',), ('Paulina Gerzon',), ('Danielle Glick',), ('Andrea Gold',), ('Grace Gummer',), ('Mamie Gummer',), ('Samantha Gutterman',), ('Zoë Hall',), ('Elizabeth Hannah',), ('Chelsea Harkins',), ('Isis Harris',), ('Zelda Harris',), ('Anne Hathaway',), ('Shirley Henriquez',), ('Christina Hernandez',), ('Calista Hill',), ('Gabriella Hill',), ('Madeline Hill',), ('Paris Hilton',), ('Allison Hirschlag',), ('Gaby Hoffmann',), ('Tiffany Holiday',), ('Chelsea Holland',), ('Barbara Hollander',), ('Teresa Hui',), ('Sarah Hyland',), ('Alaina Irizarry',), ('Sarah Rachel Isenberg',), ('Skai Jackson',), ('Kayla Jane',), ('Jessica Jennings',), ('Ruby Jerins',), ('Sterling Jerins',), ('Cherie Jimenez',), ('Scarlett Johansson',), ('Sarah Jonker',), ('Lydia Jordan',), ('Elena Kampouris',), ('Serena Kerrigan',), ('Alicia Keys',), ('Jiah Khan',), ('Linda Király',), ('Greta Kline',), ('Anastasia Konstantinou',), ('Shelby Kovant',), ('Eileen Kovener',), ('Alice Kremelberg',), ('Cassidy Ladden',), ('Cyrenne Laljie',), ('Lisa Lang',), ('Rachelle Leconte',), ('Allegra Leguizamo',), ('Abigail Leib',), ('Mandy Leon',), ('Jessica Lewis',), ('Sheryl Lipuma',), ('Zoe Lister-Jones',), ('Chelsea Logan',), ('Ali Lohan',), ('Lindsay Lohan',), ('Olivia Luccardi',), ('Katharine Luckinbill',), ('Carmen Luvana',), ('Cadence Lux',), ('Kayla Maisonet',), ('Samantha Maldonado',), ('Lil Mama',), ('Gia Mantegna',), ('Celine Marget',), ('Judy Marte',), ('Elizabeth Masucci',), ('Mariana Matthews',), ('Michaela McPherson',), ('Jennifer Merrill',), ('Courtney Merritt',), ('Lea Michele',), ('Sienna Miller',), ('Lili Mirojnick',), ('Jessica Munch',), ('Reese Nanavati',), ('Victoria Ng',), (""Shelby O'Connell"",), ('Jeanne Orr',), ('Jeannie Ortega',), ('Mabel Pantaleon',), ('Ursula Parker',), ('Michelle Pascarella',), ('Erin Patricia',), ('Nicole Patrick',), ('Taylor Patterson',), ('Sharron Paul',), ('Ashley Peldon',), ('Courtney Peldon',), ('Nicolette Pierini',), ('Jenn Pinto',), ('Candice Preau',), ('Sally Pressman',), ('Condola Rashad',), ('Angelica Raven',), ('Charlie Ray',), ('Sue Redman',), ('Alisa Reyes',), ('Katherine Rose Riley',), ('Mulani Rivera',), ('Raelene Roberts',), ('Emily Robinson',), ('Rachel Robinson',), ('Tatsumi Romano',), ('Saoirse Ronan',)]",True
IMDB_train_64,imdb,"Find all the female actors in the movie "" Saving Private Ryan """,return the movie Saving Private Ryan; return actors of #1; return #2 that are female,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.gender = ""female"" and movie_0.title = ""Saving Private Ryan"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Saving Private Ryan' ) AND actor.gender = 'female'","[('Amanda Boxer',), ('Kathleen Byron',), ('Valerie Colgan',), ('Michelle Evans',), ('Dorothy Grumbar',), ('Anna Maguire',), ('Abbe Muschallik',), ('Nina Muschallik',), ('Kathleen Elizabeth Fell',)]","[('Amanda Boxer',), ('Kathleen Byron',), ('Valerie Colgan',), ('Michelle Evans',), ('Dorothy Grumbar',), ('Anna Maguire',), ('Abbe Muschallik',), ('Nina Muschallik',), ('Kathleen Elizabeth Fell',)]",True
IMDB_train_65,imdb,"Who acts as "" Alan Turing "" in the movie "" The Imitation Game "" ?",return the movie The Imitation Game; return who acts in #1; return #2 that acts as Alan Turing,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = ""Alan Turing"" and movie_0.title = ""The Imitation Game"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'The Imitation Game' ) AND cast.role = 'Alan Turing'","[('Alex Lawther',)]","[('Alex Lawther',)]",True
IMDB_train_66,imdb,"Who is the actor playing "" Alan Turing "" in "" The Imitation Game "" ?",return The Imitation Game; return actors of #1; return #2 playing Alan Turing,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where cast_0.role = ""Alan Turing"" and movie_0.title = ""The Imitation Game"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'The Imitation Game' ) AND cast.role = 'Alan Turing'","[('Alex Lawther',)]","[('Alex Lawther',)]",True
IMDB_train_67,imdb,"What year was the movie "" The Imitation Game "" produced",return the movie The Imitation Game; return produced year of #1,"select movie_0.release_year from movie as movie_0 where movie_0.title = ""The Imitation Game"" ;",SELECT movie.release_year FROM movie WHERE movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'The Imitation Game' ),"[(2008,), (2014,)]","[(2008,), (2014,)]",True
IMDB_train_68,imdb,Find all movies about Iraq war,return Iraq war; return movies about #1,"select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""Iraq war"" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT movie.mid FROM movie, tags, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'Iraq war' )",[],[],True
IMDB_train_69,imdb,Find all the directors who are from Afghanistan,return directors; return #1 from Afghanistan,"select director_0.name from director as director_0 where director_0.nationality = ""Afghanistan"" ;",SELECT director.name FROM director WHERE director.nationality = 'Afghanistan',"[('Jem Cohen',), ('Razi Mohebi',), ('Moniere',), ('Ali Olomi',), ('Manyar I. Parwani',), ('Atiq Rahimi',), ('Rangeela',), ('Fazila Amiri',), ('Khaled Ibrahimi',), ('Walid Nakschbandi',), ('Yama Rahimi',), ('Roya Sadat',), ('Jawed Wassel',)]","[('Jem Cohen',), ('Razi Mohebi',), ('Moniere',), ('Ali Olomi',), ('Manyar I. Parwani',), ('Atiq Rahimi',), ('Rangeela',), ('Fazila Amiri',), ('Khaled Ibrahimi',), ('Walid Nakschbandi',), ('Yama Rahimi',), ('Roya Sadat',), ('Jawed Wassel',)]",True
IMDB_train_7,imdb,"In what year was "" Benedict Cumberbatch "" born",return Benedict Cumberbatch; return year born of #1,"select actor_0.birth_year from actor as actor_0 where actor_0.name = ""Benedict Cumberbatch"" ;",SELECT actor.birth_year FROM actor WHERE actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Benedict Cumberbatch' ),"[(1976,)]","[(1976,)]",True
IMDB_train_70,imdb,Give me the name of all the actors from Afghanistan,return actors; return #1 from Afghanistan; return names of #2,"select actor_0.name from actor as actor_0 where actor_0.nationality = ""Afghanistan"" ;",SELECT actor.name FROM actor WHERE actor.aid IN ( SELECT actor.aid FROM actor WHERE actor.nationality = 'Afghanistan' ),"[('Ehsan Aman',), ('Sabiullah Anwar',), ('Muhammed Cangören',), ('Jem Cohen',), ('Zekeria Ebrahimi',), ('Fahim Fazli',), ('Mustafa Haidari',), ('Gulbuddin Hekmatyar',), ('Khaled Hosseini',), ('Hamid Karzai',), ('Hashmat Khan',), ('Ahmad Khan Mahmoodzada',), ('Ahmad Shah Massoud',), ('Moniere',), ('Ali Olomi',), ('Burhanuddin Rabbani',), ('Rangeela',), ('Wali Razaqi',), ('Baktash Zaher',), ('Marina Golbahari',), ('Fereshta Kazemi',), ('NiNa',), ('Shaima Rezayee',), ('Soraya Wilkinson-Wyke',), ('Yalda',)]","[('Ehsan Aman',), ('Sabiullah Anwar',), ('Muhammed Cangören',), ('Jem Cohen',), ('Zekeria Ebrahimi',), ('Fahim Fazli',), ('Mustafa Haidari',), ('Gulbuddin Hekmatyar',), ('Khaled Hosseini',), ('Hamid Karzai',), ('Hashmat Khan',), ('Ahmad Khan Mahmoodzada',), ('Ahmad Shah Massoud',), ('Moniere',), ('Ali Olomi',), ('Burhanuddin Rabbani',), ('Rangeela',), ('Wali Razaqi',), ('Baktash Zaher',), ('Marina Golbahari',), ('Fereshta Kazemi',), ('NiNa',), ('Shaima Rezayee',), ('Soraya Wilkinson-Wyke',), ('Yalda',)]",True
IMDB_train_71,imdb,"Who is the writer of "" The Truman Show """,return The Truman Show; return writer of #1,"select writer_0.name from movie as movie_0, writer as writer_0, written_by as written_by_0 where movie_0.title = ""The Truman Show"" and movie_0.mid = written_by_0.msid and writer_0.wid = written_by_0.wid ;","SELECT writer.name FROM movie, writer, written_by WHERE movie.mid = written_by.msid AND written_by.wid = writer.wid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'The Truman Show' )","[('Andrew Niccol',)]","[('Andrew Niccol',)]",True
IMDB_train_72,imdb,List all the Sci-Fi movies which released in 2010,return movies; return #1 that are Sci-Fi; return #2 released in 2010,"select movie_0.title from classification as classification_0, genre as genre_0, movie as movie_0 where genre_0.genre = ""Sci-Fi"" and movie_0.release_year = 2010 and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, classification, genre WHERE movie.mid = classification.msid AND classification.gid = genre.gid AND genre.genre = 'Sci-Fi' AND movie.release_year = 2010","[('(v.) to Augment',), ('-75Deg X 42Deg',), ('.hack//Quantum: Walking Party',), ('.hack//Quantum: Wired Prisoner',), ('009: The Reopening',), ('072 Sentai G-ranger',), ('1,001 Ways to Enjoy the Missionary Position',), ('1/4 Inch',), ('10 + ½ + 1 = Making of 11½',), ('10:17',), ('11:58',), ('12:01',), ('15 Till Midnight',), ('1925',), ('1945A',), ('1991',), ('2009: A Delayed Night',), ('2012: The End',), ('2013',), ('2016',), ('2016 2',), ('2020 A.D.',), ('2030 - Aufstand der Jungen',), ('21/12/12',), ('3 Miles Under',), ('3 Tasks for the Telekinetic in Training',), ('4 Minutes',), ('41',), ('42',), ('576-Orgy',), ('72 to 1',), ('A Better Tomorrow',), ('A Brand New Universe',), ('A Break in the Clouds',), ('A Brief History of the Origin of A.E.L.I.T.A.',), ('A Broadcast Called Life',), ('A Cowboy Never Dies',), ('A Crowd of Small Adventures: Bang Bang',), ('A Day for a Dark Sky',), (""A Director's Playground: Vincenzo Natali on the Set of Splice"",), ('A Dream of Falling',), ('A Fictitious Thesis',), ('A Foundling',), ('A Grave Mistake',), ('A Killer App',), ('A Light in the Darkness: Part One',), ('A Menina e o Gigante',), ('A Pipás',), ('A Rusty Wind',), ('A Stitch in Time',), ('A Stunt in Tight Places with James BamBam Bamford',), ('A Time Shared Unlimited',), ('A Very Special Message from Darth Stewie',), ('Aayirathil Oruvan',), ('Aberrations in the Cycle',), ('Absolute.ness',), ('Absurd Solemnity',), ('Accordion',), ('Action Replayy',), ('Adaptation to Mercury',), ('Adventures of an Earthling',), ('Aeroamphibious Rescue Quadrate',), ('Afterspace',), ('Agency Time',), ('Ahnectha: Voiceless Room',), ('Air Co.',), ('Air Heart',), ('Alaina Huffman',), ('Aleph to Taw: Part 4',), ('Algore Nwoerhneorn',), ('Alice Was Here',), ('Alien 0',), ('Alien Agenda',), ('Alien Opponent',), ('Alien Sex Project',), ('Alien Tourists',), ('Alien Vengeance',), ('Alien Vengeance II: Rogue Element',), ('Alien Vengeance: A Night Alone',), ('Alien vs. Ninja',), ('Alienative',), ('All American Zombie Drugs',), ('All Systems Go, Neil Armstrong',), (""All the President's Favorite Foods"",), ('All the Time in the World',), ('Alone',), ('Alone',), ('Alpha 0.7',), ('Alter Ego',), ('Alter Human',), ('Altitude',), ('Altitude Falling',), ('Amid the Rubble',), ('An Anomaly of the Theory',), ('An Illness at the House',), ('An Immortal Tale',), ('And Hell Followed with Them',), ('And Then I Died',), ('Andante',), ('Android',), ('Android 413',), ('Androides',), ('AniMen: Triton Force',), ('Anica 2148: The Scale War',), ('Anica II: Enemy of the Region',), ('Animus',), ('Annihilation',), ('Ano',), ('Anomaly',), ('Anomaly: Oblivion',), ('Antedon',), ('Anthology of Terror: Prelude',), ('Anti-Hero',), ('Apartment 7',), ('Apocalypse Story',), ('App of Time',), ('Araneum',), ('Arctic Blast',), ('Arctic Predator',), ('Are We Alone?',), ('Armageddon 2012',), ('Artificial Paradise, Inc.',), ('Ashes',), ('Assisted Living',), ('Astro Boy vs. The Junkyard Pirates',), ('Astronaut',), ('Atlan',), ('Atlantis Down',), ('Atom Boy Versus Alcohol',), ('Atom Shock!',), ('Atomic Brain Invasion',), ('Attack of the Aliens',), ('Attack of the Global Warming Creatures',), ('Attack of the Nerds',), ('Augmented (Hyper) Reality: Domestic Robocop',), ('Avatarphosis',), ('Avenging Force: The Scarab',), ('Avisa que amanhã já nem existe',), ('Awakening',), ('Awakening',), ('Axis',), ('Azul liviano',), ('Azureus Rising',), ('Backfire',), ('Backlight',), ('Backyard Cult',), ('Banana',), ('Barrier: The Invisible Machine',), ('Batman: Under the Red Hood',), ('Before We Slip',), ('Belligerent Moose vs. The Army of Flesh Eaters',), ('Bend the Universe',), ('Best Before',), ('Beta',), ('Betty Goes Boom',), ('Beware of the Stranger',), ('Beware the Watchers',), ('Beyond',), ('Beyond the Black Rainbow',), ('Beyond the Door',), ('Bikini Monsters',), ('Billy Baxter and the Mystery of Dr. Amazo',), ('Bio Apocalypse',), ('Bionic Beginnings',), ('Black Star',), ('Blackstar Warrior',), ('Blindspot',), ('Blonde Ringlet',), ('Blood and Relics',), ('Bloody Christmas 2: La révolte des sapins',), ('Blue Market',), ('Bombay Beach',), ('Bonnie',), ('Bottles',), ('Bounced',), (""Bounty on a Dead Man's Head"",), ('BoxWorld',), ('Boxed',), ('Boybot',), ('Brain Maggots from Outer Space',), ('Braincell',), ('Breakaway/Backdown',), ('Breathe',), ('Breathe (3D)',), (""Brennan's Sacrament"",), ('Brian J Smith',), ('Briansaurus',), ('Bridges',), ('Bridgetown',), ('Bringing It Up',), ('BroBot: Your Robot Wingman',), ('Broken Mirrors',), ('Broomba',), ('Brothers from Creatures Unknown',), ('Browncoats: Redemption',), ('Brødrene Dal og Vikingsverdets Forbannelse',), ('Bubble Head',), ('BuddyBot',), ('Bugbaby',), ('Bunker',)]","[('(v.) to Augment',), ('-75Deg X 42Deg',), ('.hack//Quantum: Walking Party',), ('.hack//Quantum: Wired Prisoner',), ('009: The Reopening',), ('072 Sentai G-ranger',), ('1,001 Ways to Enjoy the Missionary Position',), ('1/4 Inch',), ('10 + ½ + 1 = Making of 11½',), ('10:17',), ('11:58',), ('12:01',), ('15 Till Midnight',), ('1925',), ('1945A',), ('1991',), ('2009: A Delayed Night',), ('2012: The End',), ('2013',), ('2016',), ('2016 2',), ('2020 A.D.',), ('2030 - Aufstand der Jungen',), ('21/12/12',), ('3 Miles Under',), ('3 Tasks for the Telekinetic in Training',), ('4 Minutes',), ('41',), ('42',), ('576-Orgy',), ('72 to 1',), ('A Better Tomorrow',), ('A Brand New Universe',), ('A Break in the Clouds',), ('A Brief History of the Origin of A.E.L.I.T.A.',), ('A Broadcast Called Life',), ('A Cowboy Never Dies',), ('A Crowd of Small Adventures: Bang Bang',), ('A Day for a Dark Sky',), (""A Director's Playground: Vincenzo Natali on the Set of Splice"",), ('A Dream of Falling',), ('A Fictitious Thesis',), ('A Foundling',), ('A Grave Mistake',), ('A Killer App',), ('A Light in the Darkness: Part One',), ('A Menina e o Gigante',), ('A Pipás',), ('A Rusty Wind',), ('A Stitch in Time',), ('A Stunt in Tight Places with James BamBam Bamford',), ('A Time Shared Unlimited',), ('A Very Special Message from Darth Stewie',), ('Aayirathil Oruvan',), ('Aberrations in the Cycle',), ('Absolute.ness',), ('Absurd Solemnity',), ('Accordion',), ('Action Replayy',), ('Adaptation to Mercury',), ('Adventures of an Earthling',), ('Aeroamphibious Rescue Quadrate',), ('Afterspace',), ('Agency Time',), ('Ahnectha: Voiceless Room',), ('Air Co.',), ('Air Heart',), ('Alaina Huffman',), ('Aleph to Taw: Part 4',), ('Algore Nwoerhneorn',), ('Alice Was Here',), ('Alien 0',), ('Alien Agenda',), ('Alien Opponent',), ('Alien Sex Project',), ('Alien Tourists',), ('Alien Vengeance',), ('Alien Vengeance II: Rogue Element',), ('Alien Vengeance: A Night Alone',), ('Alien vs. Ninja',), ('Alienative',), ('All American Zombie Drugs',), ('All Systems Go, Neil Armstrong',), (""All the President's Favorite Foods"",), ('All the Time in the World',), ('Alone',), ('Alone',), ('Alpha 0.7',), ('Alter Ego',), ('Alter Human',), ('Altitude',), ('Altitude Falling',), ('Amid the Rubble',), ('An Anomaly of the Theory',), ('An Illness at the House',), ('An Immortal Tale',), ('And Hell Followed with Them',), ('And Then I Died',), ('Andante',), ('Android',), ('Android 413',), ('Androides',), ('AniMen: Triton Force',), ('Anica 2148: The Scale War',), ('Anica II: Enemy of the Region',), ('Animus',), ('Annihilation',), ('Ano',), ('Anomaly',), ('Anomaly: Oblivion',), ('Antedon',), ('Anthology of Terror: Prelude',), ('Anti-Hero',), ('Apartment 7',), ('Apocalypse Story',), ('App of Time',), ('Araneum',), ('Arctic Blast',), ('Arctic Predator',), ('Are We Alone?',), ('Armageddon 2012',), ('Artificial Paradise, Inc.',), ('Ashes',), ('Assisted Living',), ('Astro Boy vs. The Junkyard Pirates',), ('Astronaut',), ('Atlan',), ('Atlantis Down',), ('Atom Boy Versus Alcohol',), ('Atom Shock!',), ('Atomic Brain Invasion',), ('Attack of the Aliens',), ('Attack of the Global Warming Creatures',), ('Attack of the Nerds',), ('Augmented (Hyper) Reality: Domestic Robocop',), ('Avatarphosis',), ('Avenging Force: The Scarab',), ('Avisa que amanhã já nem existe',), ('Awakening',), ('Awakening',), ('Axis',), ('Azul liviano',), ('Azureus Rising',), ('Backfire',), ('Backlight',), ('Backyard Cult',), ('Banana',), ('Barrier: The Invisible Machine',), ('Batman: Under the Red Hood',), ('Before We Slip',), ('Belligerent Moose vs. The Army of Flesh Eaters',), ('Bend the Universe',), ('Best Before',), ('Beta',), ('Betty Goes Boom',), ('Beware of the Stranger',), ('Beware the Watchers',), ('Beyond',), ('Beyond the Black Rainbow',), ('Beyond the Door',), ('Bikini Monsters',), ('Billy Baxter and the Mystery of Dr. Amazo',), ('Bio Apocalypse',), ('Bionic Beginnings',), ('Black Star',), ('Blackstar Warrior',), ('Blindspot',), ('Blonde Ringlet',), ('Blood and Relics',), ('Bloody Christmas 2: La révolte des sapins',), ('Blue Market',), ('Bombay Beach',), ('Bonnie',), ('Bottles',), ('Bounced',), (""Bounty on a Dead Man's Head"",), ('BoxWorld',), ('Boxed',), ('Boybot',), ('Brain Maggots from Outer Space',), ('Braincell',), ('Breakaway/Backdown',), ('Breathe',), ('Breathe (3D)',), (""Brennan's Sacrament"",), ('Brian J Smith',), ('Briansaurus',), ('Bridges',), ('Bridgetown',), ('Bringing It Up',), ('BroBot: Your Robot Wingman',), ('Broken Mirrors',), ('Broomba',), ('Brothers from Creatures Unknown',), ('Browncoats: Redemption',), ('Brødrene Dal og Vikingsverdets Forbannelse',), ('Bubble Head',), ('BuddyBot',), ('Bugbaby',), ('Bunker',)]",True
IMDB_train_73,imdb,"Find the actors who played in the movie "" Camp X-Ray """,return the movie Camp X-Ray; return actors of #1,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = ""Camp X-Ray"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.name FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Camp X-Ray' )","[('Yousuf Azami',), ('Kyle Bornheimer',), ('Buda',), ('Lane Garrison',), ('Daniel Leavitt',), ('Jian Leonardo',), ('John Carroll Lynch',), ('Mark Naji',), ('LaDell Preston',), ('Brandon Seider',), ('Richard Serio',), ('Anoop Simon',), ('Robert Tarpinian',), ('Nawal Bengholam',), ('Holli Dean',), ('Julia Duffy',), ('Marwan Khouzam',), ('Le Dell Preston',), ('Ladell Preston',), ('Ladell G. Preston',), ('Preston Ladell',), ('Kyle Edward Bornheimer',), ('Jian Peng Zhu',), ('Leonardo',), ('Leo',), ('Jian Leonardo',), ('Anoop',), ('Simon',), ('Anoop Shamim',), ('Yousef Azani',), ('John Lynch',), ('John Caroll Lynch',), ('Lane Edward Garrison',), ('Julia Duff',), ('Julia Margaret Hinds',), ('Meemo',), ('Jian',), ('Brandon Lee Seider',)]","[('Yousuf Azami',), ('Kyle Bornheimer',), ('Buda',), ('Lane Garrison',), ('Daniel Leavitt',), ('Jian Leonardo',), ('John Carroll Lynch',), ('Mark Naji',), ('LaDell Preston',), ('Brandon Seider',), ('Richard Serio',), ('Anoop Simon',), ('Robert Tarpinian',), ('Nawal Bengholam',), ('Holli Dean',), ('Julia Duffy',), ('Marwan Khouzam',), ('Le Dell Preston',), ('Ladell Preston',), ('Ladell G. Preston',), ('Preston Ladell',), ('Kyle Edward Bornheimer',), ('Jian Peng Zhu',), ('Leonardo',), ('Leo',), ('Jian Leonardo',), ('Anoop',), ('Simon',), ('Anoop Shamim',), ('Yousef Azani',), ('John Lynch',), ('John Caroll Lynch',), ('Lane Edward Garrison',), ('Julia Duff',), ('Julia Margaret Hinds',), ('Meemo',), ('Jian',), ('Brandon Lee Seider',)]",True
IMDB_train_74,imdb,"Find all actors from Canada who acted in "" James Bond "" movies",return James Bond movies; return actors of #1; return #2 from Canada,"select actor_0.name from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.nationality = ""Canada"" and movie_0.title = ""James Bond"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT actor.aid FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'James Bond' ) AND actor.nationality = 'Canada'",[],[],True
IMDB_train_75,imdb,"List "" James Bond "" directors",return James Bond; return directors of #1,"select director_0.name from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = ""James Bond"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.name FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'James Bond' )","[('Baiju Kottarakkara',), ('Sai Kishore Macha',), ('Biju Kottarakkara',)]","[('Baiju Kottarakkara',), ('Sai Kishore Macha',), ('Biju Kottarakkara',)]",True
IMDB_train_76,imdb,"find all films in which "" Rowan Atkinson "" acted as "" Mr. Bean """,return Mr. Bean; return #1 acted by Rowan Atkinson; return films of #2,"select movie_0.title from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Rowan Atkinson"" and cast_0.role = ""Mr. Bean"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT cast.id FROM actor, cast WHERE cast.aid = actor.aid AND cast.role IN ( SELECT cast.role FROM actor, cast WHERE cast.aid = actor.aid AND cast.role = 'Mr. Bean' AND actor.name = 'Rowan Atkinson' )","[('Bean',), ('Bean: Scenes Unseen',), ('Comic Relief',), ('Comic Relief 2007: The Big One',), ('Comic Relief Presents the Pick of the Nose',), ('Comic Relief: Behind the Nose',), ('Comic Relief: The Invasion of the Comic Tomatoes',), ('Election 92',), ('London 2012 Olympic Opening Ceremony: Isles of Wonder',), ('Morir de humor',), ('Mr Bean: Blind Date',), ('Mr Bean: Funeral',), ('Mr Bean: The Bus Stop',), ('Mr Bean: The Library',), ('Mr Bean: Torvill and Bean',), (""Mr. Bean's Holiday"",), (""Mr. Bean's Red Nose Day"",), (""Mr. Bean's Wedding"",), ('The Amazing Adventures of Mr. Bean',), ('The Exciting Escapades of Mr. Bean',), ('The Final Frolics of Mr. Bean',), ('The Merry Mishaps of Mr. Bean',), ('The Perilous Persuits of Mr. Bean',), ('Unseen Bean',), ('XXX Summer Olympics Opening Ceremony',), ('¿De qué te ríes?',)]","[(7704086,), (7704088,), (7704110,), (7704114,), (7704115,), (7704120,), (7704123,), (7704126,), (7704148,), (7704156,), (7704157,), (7704158,), (7704159,), (7704160,), (7704161,), (7704162,), (7704166,), (7704167,), (7704178,), (7704181,), (7704182,), (7704188,), (7704189,), (7704201,), (7704204,), (7704205,), (7704211,), (8233938,), (9130445,), (10103931,), (10384353,), (10975058,), (11535906,), (11638570,), (11996289,), (12604346,), (15856562,), (15856585,), (15856608,), (17520275,), (17520277,), (17520283,), (17520284,), (17520286,), (17520287,), (17520289,), (17520295,), (17520296,), (17520297,), (17520298,), (17520299,), (17520306,), (17520309,), (17520315,), (17520320,), (17520321,), (17520323,), (17520324,), (17520326,), (17520327,), (17520328,), (17520333,), (17520335,), (17520336,), (17520338,), (17520349,), (17520351,), (17520357,), (17520358,), (17520360,), (17520361,), (17520363,), (17520369,), (17520370,), (17520371,), (17520372,), (17520373,), (17520380,), (17520383,), (17520389,), (17520394,), (17520395,), (17520397,), (17520398,), (17520400,), (17520401,), (17520402,), (17520407,), (17520409,), (17520410,), (17520412,), (18248499,), (18248501,), (18248507,), (18248508,), (18248510,), (18248511,), (18248513,), (18248519,), (18248520,), (18248521,), (18248522,), (18248523,), (18248530,), (18248533,), (18248539,), (18248544,), (18248545,), (18248547,), (18248548,), (18248550,), (18248551,), (18248552,), (18248557,), (18248559,), (18248560,), (18248562,), (18248570,), (18248572,), (18248578,), (18248579,), (18248581,), (18248582,), (18248584,), (18248590,), (18248591,), (18248592,), (18248593,), (18248594,), (18248601,), (18248604,), (18248610,), (18248615,), (18248616,), (18248618,), (18248619,), (18248621,), (18248622,), (18248623,), (18248628,), (18248630,), (18248631,), (18248633,), (18672035,), (19708022,), (19764169,), (20067725,)]",False
IMDB_train_77,imdb,"List all the movies directed by "" Asghar Farhadi "" in which "" Taraneh Alidoosti "" played",return movies; return #1 directed by Asghar Farhadi; return #2 where Taraneh Alidoosti played,"select movie_0.title from actor as actor_0, cast as cast_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where actor_0.name = ""Taraneh Alidoosti"" and director_0.name = ""Asghar Farhadi"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT movie.mid FROM actor, movie, director, directed_by WHERE director.birth_year = actor.birth_year AND movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Asghar Farhadi' AND actor.name = 'Taraneh Alidoosti'",[],[],True
IMDB_train_78,imdb,"where is the director of "" The Past "" from",return The Past; return director of #1; return where is #2 from,"select director_0.birth_city from directed_by as directed_by_0, director as director_0, movie as movie_0 where movie_0.title = ""The Past"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.birth_city FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.did IN ( SELECT director.did FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'The Past' ) )","[(None,), (None,)]","[(None,), (None,)]",True
IMDB_train_79,imdb,"who acted the role of "" Mr. Bean """,return who acted; return roles of #1; return #1 where #2 is Mr. Bean,"select actor_0.name from actor as actor_0, cast as cast_0 where cast_0.role = ""Mr. Bean"" and actor_0.aid = cast_0.aid ;","SELECT actor.name FROM actor, cast WHERE cast.aid = actor.aid AND actor.name IN ( SELECT actor.name FROM actor ) AND cast.role = 'Mr. Bean'","[('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Marc Cameron',), ('Frank Forsyth',), ('Rajiv Khilnani',), ('Matthew Leonard-Lesniak',), ('Takahiro Morooka',), ('Ivan Purser',), ('Martin Reinl',), ('Edward Sedgwick',), ('Jasper van der Put',), ('Ed Segwick',), ('Ed Sedgwick',), ('Edgar Sedgwick',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Frank Forsythe',), ('Moro',), ('Matthew Lesniak',), ('Stephan Colli',)]","[('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Rowan Atkinson',), ('Marc Cameron',), ('Frank Forsyth',), ('Rajiv Khilnani',), ('Matthew Leonard-Lesniak',), ('Takahiro Morooka',), ('Ivan Purser',), ('Martin Reinl',), ('Edward Sedgwick',), ('Jasper van der Put',), ('Ed Segwick',), ('Ed Sedgwick',), ('Edgar Sedgwick',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Ro Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Mr. Rowan Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Rowan Sebastian Atkinson',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Row',), ('Frank Forsythe',), ('Moro',), ('Matthew Lesniak',), ('Stephan Colli',)]",True
IMDB_train_8,imdb,"What is the nationality of the actor "" Christoph Waltz "" ?",return Christoph Waltz; return nationality of #1,"select actor_0.nationality from actor as actor_0 where actor_0.name = ""Christoph Waltz"" ;",SELECT actor.nationality FROM actor WHERE actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Christoph Waltz' ),"[('Austria',)]","[('Austria',)]",True
IMDB_train_80,imdb,"what are the genres of movies directed by "" Asghar Farhadi """,return movies; return #1 directed by Asghar Farhadi; return genres of #2,"select genre_0.genre from classification as classification_0, directed_by as directed_by_0, director as director_0, genre as genre_0, movie as movie_0 where director_0.name = ""Asghar Farhadi"" and classification_0.gid = genre_0.gid and classification_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT genre.genre FROM movie, genre, director, directed_by, classification WHERE movie.mid = classification.msid AND classification.gid = genre.gid AND movie.mid = directed_by.msid AND directed_by.did = director.did AND movie.mid IN ( SELECT movie.mid FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Asghar Farhadi' )","[('Drama',), ('Mystery',), ('Romance',), ('Thriller',), ('Drama',), ('Mystery',), ('Thriller',), ('Drama',), ('Drama',), ('Mystery',), ('Drama',), ('Mystery',), ('Drama',), ('Drama',), ('Drama',)]","[('Drama',), ('Mystery',), ('Romance',), ('Drama',), ('Mystery',), ('Thriller',), ('Drama',), ('Thriller',), ('Drama',), ('Mystery',), ('Drama',), ('Mystery',), ('Drama',), ('Drama',), ('Drama',)]",True
IMDB_train_81,imdb,"Which movie had the character "" Daffy Duck """,return movies; return characters of #1; return #1 where #2 is Daffy Duck,"select movie_0.title from cast as cast_0, movie as movie_0 where cast_0.role = ""Daffy Duck"" and cast_0.msid = movie_0.mid ;","SELECT movie.title FROM movie, cast WHERE cast.msid = movie.mid AND movie.title IN ( SELECT movie.title FROM movie ) AND cast.role = 'Daffy Duck'","[('Bah Humduck!: A Looney Tunes Christmas',), (""Bugs Bunny's Lunar Tunes"",), ('Carrotblanca',), ('Daffy Duck for President',), ('Looney Tunes Sing-Alongs',), ('Looney Tunes: Back in Action',), ('Looney Tunes: Reality Check',), ('Looney Tunes: Stranger Than Fiction',), ('Marvin the Martian in the Third Dimension',), ('Quest for Camelot Sing-Alongs',), (""Tweety's High-Flying Adventure"",), ('Space Jam',), ('Duck Dodgers in Attack of the Drones',), ('(Blooper) Bunny!',), ('Box-Office Bunny',), (""Bugs Bunny's Creature Features"",), ('Cartoon All-Stars to the Rescue',), ('Cartoon Network 20th Anniversary',), ('Gremlins 2: The New Batch',), ('Happy Birthday, Bugs!: 50 Looney Years',), ('Invasion of the Bunny Snatchers',), ('Looney Tunes: Rabbits Run',), ('A Corny Concerto',), ('A Coy Decoy',), ('A Pest in the House',), ('A Squeak in the Deep',), ('A Star Is Bored',), ('A Taste of Catnip',), ('A-Haunting We Will Go',), (""Ain't That Ducky"",), ('Ali Baba Bunny',), ('Along Came Daffy',), ('Apes of Wrath',), ('Aqua Duck',), ('Assault and Peppered',), ('Baby Bottleneck',), ('Beanstalk Bunny',), ('Behind the Tunes: A Conversation with Tex Avery',), (""Behind the Tunes: A Hunting We Will Go - Chuck Jones' Wabbit Season Twilogy"",), ('Behind the Tunes: Animal Quackers',), ('Behind the Tunes: Blanc Expressions',), ('Behind the Tunes: Bugs - A Rabbit for All Seasonings',), ('Behind the Tunes: Crash! Bang! Boom! - The Wild Sounds of Treg Brown',), ('Behind the Tunes: Hard Luck Duck',), ('Behind the Tunes: Looney Tunes Go Hollywood',), ('Behind the Tunes: Man from Wackyland - The Art of Bob Clampett',), ('Birth of a Notion',), ('Boobs in the Woods',), ('Book Revue',), ('Boston Quackie',), ('Bugs & Daffy: The Wartime Cartoons',), ('Bugs Bunny in Space',), (""Bugs Bunny's 3rd Movie: 1001 Rabbit Tales"",), (""Bugs Bunny's Creature Features"",), (""Bugs Bunny's Easter Special"",), (""Bugs Bunny's Howl-oween Special"",), (""Bugs Bunny's Mad World of Television"",), (""Bugs Bunny's Valentine"",), ('Bugs vs. Daffy: Battle of the Music Video Stars',), ('Carnival of the Animals',), ('Chili Corn Corny',), ('Conrad the Sailor',), ('Corn on the Cop',), ('Cracked Quack',), ('Daffy - The Commando',), ('Daffy Dilly',), ('Daffy Doodles',), ('Daffy Duck & Egghead',), ('Daffy Duck and the Dinosaur',), ('Daffy Duck Hunt',), ('Daffy Duck in Hollywood',), ('Daffy Duck Slept Here',), (""Daffy Duck's Easter Show"",), (""Daffy Duck's Movie: Fantastic Island"",), (""Daffy Duck's Quackbusters"",), (""Daffy Duck's Thanks-for-Giving Special"",), ('Daffy Flies North',), ('Daffy Rents',), (""Daffy's Diner"",), (""Daffy's Inn Trouble"",), (""Daffy's Rhapsody"",), (""Daffy's Southern Exposure"",), ('Design for Leaving',), ('Dime to Retire',), (""Don't Axe Me"",), ('Draftee Daffy',), ('Drip-Along Daffy',), ('Duck Amuck',), ('Duck Dodgers and the Return of the 24½th Century',), ('Duck Soup to Nuts',), ('Duck! Rabbit, Duck!',), ('Ducking the Devil',), ('Fast Buck Duck',), ('Feather Bluster',), ('Feather Finger',), ('Fiesta Fiasco',), ('Fifty Years of Bugs Bunny in 3 1/2 Minutes',), ('Fool Coverage',), ('Go Away Stowaway',), ('Go Go Amigo',), ('Golden Yeggs',), ('Good Noose',), ('His Bitter Half',), ('Holiday for Drumsticks',), ('Hollywood Daffy',), ('How Bugs Bunny Won the West',), ('Howard the Duck',), ('Irreverent Imagination: The Golden Age of the Looney Tunes',), (""It's Nice to Have a Mouse Around the House"",), ('Looney Tunes 50th Anniversary',), ('Looney Tunes Sing-Alongs',), ('Looney, Looney, Looney Bugs Bunny Movie',), ('Mexican Joyride',), ('Mexican Mousepiece',), ('Moby Duck',), ('Mucho Locos',), ('Muscle Tussle',), ('My Favorite Duck',), ('Nasty Quacks',), ('People Are Bunny',), ('Person to Bunny',), ('Plane Daffy',), ('Porky & Daffy',), (""Porky Pig's Feat"",), (""Porky's Duck Hunt"",), (""Porky's Last Stand"",), ('Quack Shot',), ('Quacker Tracker',), ('Quackodile Tears',), ('Quest for Camelot Sing-Alongs',), ('Rabbit Fire',), ('Rabbit Seasoning',), ('Riff Raffy Daffy',), ('Rocket Squad',), ('Rodent to Stardom',), ('Rover Dangerfield',), ('Sahara Hare',), ('Scalp Trouble',), ('Scrap Happy Daffy',), ('See Ya Later Gladiator',), ('Show Biz Bugs',), ('Skyscraper Caper',), ('Slightly Daffy',), ('Snow Excuse',), ('Speedy Ghost to Town',), ('Stork Naked',), ('Stupor Duck',), ('Suppressed Duck',), ('Swing Ding Amigo',), ('Tease for Two',), ('The Abominable Snow Rabbit',), ('The Astroduck',), (""The Bugs Bunny Mother's Day Special"",), ('The Bugs Bunny/Road-Runner Movie',), ('The Chocolate Chase',), ('The Daffy Doc',), ('The Daffy Duckaroo',), ('The Ducksters',), ('The Duxorcist',), ('The Great Piggy Bank Robbery',), ('The Henpecked Duck',), ('The High and the Flighty',), ('The Iceman Ducketh',), ('The Impatient Patient',), ('The Million Hare',), ('The Music Mice-Tro',), ('The Night of the Living Duck',), ('The Prize Pest',), ('The Scarlet Pumpernickel',), ('The Spy Swatter',), ('The Stupid Cupid',), ('The Stupor Salesman',), ('The Super Snooper',), ('The Up-Standing Sitter',), ('The Wise Quacking Duck',), ('The Yolks on You',), ('This Is a Life?',), ('Thumb Fun',), ('Tick Tock Tuckered',), ('To Duck... or Not to Duck',), ('Tom Turk and Daffy',), ('Toonheads: The Lost Cartoons',), ('Well Worn Daffy',), ('What Makes Daffy Duck',), ('Who Framed Roger Rabbit',), ('Wise Quackers',), ('Wise Quacks',), ('Yankee Doodle Daffy',), ('You Ought to Be in Pictures',), ('You Were Never Duckier',), ('Superior Duck',), (""Bugs Bunny's Creature Features"",), (""Daffy Duck's Quackbusters"",), ('The Night of the Living Duck',), ('Superior Duck',), ('Superior Duck',), ('Space Jam',), ('Space Jam',), ('Space Jam',), ('Space Jam',)]","[('Bah Humduck!: A Looney Tunes Christmas',), (""Bugs Bunny's Lunar Tunes"",), ('Carrotblanca',), ('Daffy Duck for President',), ('Looney Tunes Sing-Alongs',), ('Looney Tunes: Back in Action',), ('Looney Tunes: Reality Check',), ('Looney Tunes: Stranger Than Fiction',), ('Marvin the Martian in the Third Dimension',), ('Quest for Camelot Sing-Alongs',), (""Tweety's High-Flying Adventure"",), ('Space Jam',), ('Duck Dodgers in Attack of the Drones',), ('(Blooper) Bunny!',), ('Box-Office Bunny',), (""Bugs Bunny's Creature Features"",), ('Cartoon All-Stars to the Rescue',), ('Cartoon Network 20th Anniversary',), ('Gremlins 2: The New Batch',), ('Happy Birthday, Bugs!: 50 Looney Years',), ('Invasion of the Bunny Snatchers',), ('Looney Tunes: Rabbits Run',), ('A Corny Concerto',), ('A Coy Decoy',), ('A Pest in the House',), ('A Squeak in the Deep',), ('A Star Is Bored',), ('A Taste of Catnip',), ('A-Haunting We Will Go',), (""Ain't That Ducky"",), ('Ali Baba Bunny',), ('Along Came Daffy',), ('Apes of Wrath',), ('Aqua Duck',), ('Assault and Peppered',), ('Baby Bottleneck',), ('Beanstalk Bunny',), ('Behind the Tunes: A Conversation with Tex Avery',), (""Behind the Tunes: A Hunting We Will Go - Chuck Jones' Wabbit Season Twilogy"",), ('Behind the Tunes: Animal Quackers',), ('Behind the Tunes: Blanc Expressions',), ('Behind the Tunes: Bugs - A Rabbit for All Seasonings',), ('Behind the Tunes: Crash! Bang! Boom! - The Wild Sounds of Treg Brown',), ('Behind the Tunes: Hard Luck Duck',), ('Behind the Tunes: Looney Tunes Go Hollywood',), ('Behind the Tunes: Man from Wackyland - The Art of Bob Clampett',), ('Birth of a Notion',), ('Boobs in the Woods',), ('Book Revue',), ('Boston Quackie',), ('Bugs & Daffy: The Wartime Cartoons',), ('Bugs Bunny in Space',), (""Bugs Bunny's 3rd Movie: 1001 Rabbit Tales"",), (""Bugs Bunny's Creature Features"",), (""Bugs Bunny's Easter Special"",), (""Bugs Bunny's Howl-oween Special"",), (""Bugs Bunny's Mad World of Television"",), (""Bugs Bunny's Valentine"",), ('Bugs vs. Daffy: Battle of the Music Video Stars',), ('Carnival of the Animals',), ('Chili Corn Corny',), ('Conrad the Sailor',), ('Corn on the Cop',), ('Cracked Quack',), ('Daffy - The Commando',), ('Daffy Dilly',), ('Daffy Doodles',), ('Daffy Duck & Egghead',), ('Daffy Duck and the Dinosaur',), ('Daffy Duck Hunt',), ('Daffy Duck in Hollywood',), ('Daffy Duck Slept Here',), (""Daffy Duck's Easter Show"",), (""Daffy Duck's Movie: Fantastic Island"",), (""Daffy Duck's Quackbusters"",), (""Daffy Duck's Thanks-for-Giving Special"",), ('Daffy Flies North',), ('Daffy Rents',), (""Daffy's Diner"",), (""Daffy's Inn Trouble"",), (""Daffy's Rhapsody"",), (""Daffy's Southern Exposure"",), ('Design for Leaving',), ('Dime to Retire',), (""Don't Axe Me"",), ('Draftee Daffy',), ('Drip-Along Daffy',), ('Duck Amuck',), ('Duck Dodgers and the Return of the 24½th Century',), ('Duck Soup to Nuts',), ('Duck! Rabbit, Duck!',), ('Ducking the Devil',), ('Fast Buck Duck',), ('Feather Bluster',), ('Feather Finger',), ('Fiesta Fiasco',), ('Fifty Years of Bugs Bunny in 3 1/2 Minutes',), ('Fool Coverage',), ('Go Away Stowaway',), ('Go Go Amigo',), ('Golden Yeggs',), ('Good Noose',), ('His Bitter Half',), ('Holiday for Drumsticks',), ('Hollywood Daffy',), ('How Bugs Bunny Won the West',), ('Howard the Duck',), ('Irreverent Imagination: The Golden Age of the Looney Tunes',), (""It's Nice to Have a Mouse Around the House"",), ('Looney Tunes 50th Anniversary',), ('Looney Tunes Sing-Alongs',), ('Looney, Looney, Looney Bugs Bunny Movie',), ('Mexican Joyride',), ('Mexican Mousepiece',), ('Moby Duck',), ('Mucho Locos',), ('Muscle Tussle',), ('My Favorite Duck',), ('Nasty Quacks',), ('People Are Bunny',), ('Person to Bunny',), ('Plane Daffy',), ('Porky & Daffy',), (""Porky Pig's Feat"",), (""Porky's Duck Hunt"",), (""Porky's Last Stand"",), ('Quack Shot',), ('Quacker Tracker',), ('Quackodile Tears',), ('Quest for Camelot Sing-Alongs',), ('Rabbit Fire',), ('Rabbit Seasoning',), ('Riff Raffy Daffy',), ('Rocket Squad',), ('Rodent to Stardom',), ('Rover Dangerfield',), ('Sahara Hare',), ('Scalp Trouble',), ('Scrap Happy Daffy',), ('See Ya Later Gladiator',), ('Show Biz Bugs',), ('Skyscraper Caper',), ('Slightly Daffy',), ('Snow Excuse',), ('Speedy Ghost to Town',), ('Stork Naked',), ('Stupor Duck',), ('Suppressed Duck',), ('Swing Ding Amigo',), ('Tease for Two',), ('The Abominable Snow Rabbit',), ('The Astroduck',), (""The Bugs Bunny Mother's Day Special"",), ('The Bugs Bunny/Road-Runner Movie',), ('The Chocolate Chase',), ('The Daffy Doc',), ('The Daffy Duckaroo',), ('The Ducksters',), ('The Duxorcist',), ('The Great Piggy Bank Robbery',), ('The Henpecked Duck',), ('The High and the Flighty',), ('The Iceman Ducketh',), ('The Impatient Patient',), ('The Million Hare',), ('The Music Mice-Tro',), ('The Night of the Living Duck',), ('The Prize Pest',), ('The Scarlet Pumpernickel',), ('The Spy Swatter',), ('The Stupid Cupid',), ('The Stupor Salesman',), ('The Super Snooper',), ('The Up-Standing Sitter',), ('The Wise Quacking Duck',), ('The Yolks on You',), ('This Is a Life?',), ('Thumb Fun',), ('Tick Tock Tuckered',), ('To Duck... or Not to Duck',), ('Tom Turk and Daffy',), ('Toonheads: The Lost Cartoons',), ('Well Worn Daffy',), ('What Makes Daffy Duck',), ('Who Framed Roger Rabbit',), ('Wise Quackers',), ('Wise Quacks',), ('Yankee Doodle Daffy',), ('You Ought to Be in Pictures',), ('You Were Never Duckier',), ('Superior Duck',), (""Bugs Bunny's Creature Features"",), (""Daffy Duck's Quackbusters"",), ('The Night of the Living Duck',), ('Superior Duck',), ('Superior Duck',), ('Space Jam',), ('Space Jam',), ('Space Jam',), ('Space Jam',)]",True
IMDB_train_82,imdb,"which company funded the "" Mickey Mouse "" series",return the Mickey Mouse series; return company that funded #1,"select company_0.name from company as company_0, copyright as copyright_0, tv_series as tv_series_0 where tv_series_0.title = ""Mickey Mouse"" and company_0.id = copyright_0.cid and copyright_0.msid = tv_series_0.sid ;","SELECT company.name FROM copyright, company, tv_series WHERE tv_series.sid = copyright.msid AND copyright.cid = company.id AND tv_series.title IN ( SELECT tv_series.title FROM tv_series WHERE tv_series.title = 'Mickey Mouse' )","[('Disney Television Animation',)]","[('Disney Television Animation',)]",True
IMDB_train_83,imdb,"What are the major roles in the movie "" Daddy Long Legs """,return the movie Daddy Long Legs; return major roles of #1,"select cast_0.role from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = ""Daddy Long Legs"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT cast.role FROM movie, cast WHERE movie.mid = cast.msid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Daddy Long Legs' )","[('Deliveryman',), ('Jervis Pendleton III',), ('Billy - Orphan',), ('Jervis Pendleton',), ('Second Jeweler',), ('Orphan',), (""Student in 'Sluefoot' Dance Sequence"",), ('Griggs',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('French Lieutenant',), ('Mr. Bronson',), ('Chauffeur',), ('Minister at Commencement',), (""Student in 'Sluefoot' Dance Sequence"",), ('Graduation Extra',), ('Army Sergeant',), ('Jeweler',), ('Hotel Manager',), ('Deliveryman',), ('Bellhop',), ('Guide',), ('Ambassador Alexander Williamson',), ('Airport Extra',), ('French Farmer',), ('Wykoff',), ('Freddie Perkins',), ('Orphan',), ('Prom Attendee',), ('Art Gallery Patron',), ('Hotel Waiter',), (""Sally's Beau"",), ('Art Gallery Patron',), ('Commission Member',), ('Cab Driver',), ('Asst. Hotel Manager',), ('Graduation Extra',), ('Man in Elevator',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Commission Member',), ('Art Gallery Patron',), ('Miss Carrington',), ('Athetic Girl Dancer',), ('Blonde dancer',), ('Miss Pritchard',), ('Madame Sevanne',), ('Inquisitive Woman',), ('College Girl',), ('Mrs. Semple',), ('Orphan',), ('Gertrude Pendleton',), ('Dignified Woman',), ('College Girl',), ('College Girl',), ('College Girl',), ('College Girl',), ('College Girl',), ('Linda Pendleton',), ('College Girl',), ('Mrs. Lippett',), ('Alicia Pritchard',), ('Codene, Orphan Girl',), ('College Girl',), ('College Dean',), ('Mrs. Paula Pendleton',), ('Asst. Hotel Manager',), ('Deliveryman',), ('Deliveryman',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Mrs. Semple',), ('Billy - Orphan',), ('Billy - Orphan',), ('Hotel Waiter',), ('Hotel Waiter',), ('Hotel Waiter',), ('Dignified Woman',), (""Student in 'Sluefoot' Dance Sequence"",), ('Miss Carrington',), ('Graduation Extra',), ('Dignified Woman',), ('Gertrude Pendleton',), ('French Farmer',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Inquisitive Woman',), ('Inquisitive Woman',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Linda Pendleton',), ('Linda Pendleton',), ('Second Jeweler',), ('Commission Member',), ('Chauffeur',), ('Chauffeur',), ('Chauffeur',), ('Chauffeur',), ('College Girl',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Mr. Bronson',), ('Mr. Bronson',), ('Mr. Bronson',), ('Art Gallery Patron',), ('College Girl',), ('College Girl',), ('Army Sergeant',), ('College Girl',), ('College Girl',), ('Orphan',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Codene, Orphan Girl',), ('Jervis Pendleton',), ('Chauffeur',), ('Commission Member',), ('Mr. Bronson',), ('Airport Extra',), ('Billy - Orphan',), (""Sally's Beau"",), (""Sally's Beau"",), (""Sally's Beau"",), (""Sally's Beau"",), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Jervis Pendleton III',), ('College Girl',), ('Ambassador Alexander Williamson',), ('Codene, Orphan Girl',), ('Mrs. Lippett',), ('Mrs. Lippett',), ('College Girl',), ('College Girl',), ('College Girl',), ('Madame Sevanne',), ('College Dean',), ('College Dean',), ('Deliveryman',), ('Hotel Manager',), ('Miss Pritchard',), ('Airport Extra',), ('Graduation Extra',), ('Graduation Extra',), ('Art Gallery Patron',), ('Mrs. Paula Pendleton',), ('Mrs. Paula Pendleton',), ('Ambassador Alexander Williamson',), ('Guide',), ('Inquisitive Woman',), ('Inquisitive Woman',), ('Art Gallery Patron',), ('Deliveryman',), ('Deliveryman',), ('Linda Pendleton',), ('College Girl',), ('College Girl',), ('College Girl',), ('Miss Pritchard',), ('College Girl',), ('Griggs',), ('Graduation Extra',), ('Orphan',), ('Orphan',), ('Orphan',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Orphan',), ('Orphan',), ('Orphan',), ('Man in Elevator',), ('Commission Member',), ('Commission Member',), ('Commission Member',), ('Freddie Perkins',), ('Freddie Perkins',), ('Gertrude Pendleton',), ('Art Gallery Patron',)]","[('Deliveryman',), ('Jervis Pendleton III',), ('Billy - Orphan',), ('Jervis Pendleton',), ('Second Jeweler',), ('Orphan',), (""Student in 'Sluefoot' Dance Sequence"",), ('Griggs',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('French Lieutenant',), ('Mr. Bronson',), ('Chauffeur',), ('Minister at Commencement',), (""Student in 'Sluefoot' Dance Sequence"",), ('Graduation Extra',), ('Army Sergeant',), ('Jeweler',), ('Hotel Manager',), ('Deliveryman',), ('Bellhop',), ('Guide',), ('Ambassador Alexander Williamson',), ('Airport Extra',), ('French Farmer',), ('Wykoff',), ('Freddie Perkins',), ('Orphan',), ('Prom Attendee',), ('Art Gallery Patron',), ('Hotel Waiter',), (""Sally's Beau"",), ('Art Gallery Patron',), ('Commission Member',), ('Cab Driver',), ('Asst. Hotel Manager',), ('Graduation Extra',), ('Man in Elevator',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Commission Member',), ('Art Gallery Patron',), ('Miss Carrington',), ('Athetic Girl Dancer',), ('Blonde dancer',), ('Miss Pritchard',), ('Madame Sevanne',), ('Inquisitive Woman',), ('College Girl',), ('Mrs. Semple',), ('Orphan',), ('Gertrude Pendleton',), ('Dignified Woman',), ('College Girl',), ('College Girl',), ('College Girl',), ('College Girl',), ('College Girl',), ('Linda Pendleton',), ('College Girl',), ('Mrs. Lippett',), ('Alicia Pritchard',), ('Codene, Orphan Girl',), ('College Girl',), ('College Dean',), ('Mrs. Paula Pendleton',), ('Asst. Hotel Manager',), ('Deliveryman',), ('Deliveryman',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Hotel Manager',), ('Mrs. Semple',), ('Billy - Orphan',), ('Billy - Orphan',), ('Hotel Waiter',), ('Hotel Waiter',), ('Hotel Waiter',), ('Dignified Woman',), (""Student in 'Sluefoot' Dance Sequence"",), ('Miss Carrington',), ('Graduation Extra',), ('Dignified Woman',), ('Gertrude Pendleton',), ('French Farmer',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Inquisitive Woman',), ('Inquisitive Woman',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Minister at Commencement',), ('Linda Pendleton',), ('Linda Pendleton',), ('Second Jeweler',), ('Commission Member',), ('Chauffeur',), ('Chauffeur',), ('Chauffeur',), ('Chauffeur',), ('College Girl',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Mr. Bronson',), ('Mr. Bronson',), ('Mr. Bronson',), ('Art Gallery Patron',), ('College Girl',), ('College Girl',), ('Army Sergeant',), ('College Girl',), ('College Girl',), ('Orphan',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Asst. Hotel Manager',), ('Codene, Orphan Girl',), ('Jervis Pendleton',), ('Chauffeur',), ('Commission Member',), ('Mr. Bronson',), ('Airport Extra',), ('Billy - Orphan',), (""Sally's Beau"",), (""Sally's Beau"",), (""Sally's Beau"",), (""Sally's Beau"",), ('Art Gallery Patron',), ('Art Gallery Patron',), ('Jervis Pendleton III',), ('College Girl',), ('Ambassador Alexander Williamson',), ('Codene, Orphan Girl',), ('Mrs. Lippett',), ('Mrs. Lippett',), ('College Girl',), ('College Girl',), ('College Girl',), ('Madame Sevanne',), ('College Dean',), ('College Dean',), ('Deliveryman',), ('Hotel Manager',), ('Miss Pritchard',), ('Airport Extra',), ('Graduation Extra',), ('Graduation Extra',), ('Art Gallery Patron',), ('Mrs. Paula Pendleton',), ('Mrs. Paula Pendleton',), ('Ambassador Alexander Williamson',), ('Guide',), ('Inquisitive Woman',), ('Inquisitive Woman',), ('Art Gallery Patron',), ('Deliveryman',), ('Deliveryman',), ('Linda Pendleton',), ('College Girl',), ('College Girl',), ('College Girl',), ('Miss Pritchard',), ('College Girl',), ('Griggs',), ('Graduation Extra',), ('Orphan',), ('Orphan',), ('Orphan',), ('Man in White Suit, Ballet Nightmare Sequence',), ('Orphan',), ('Orphan',), ('Orphan',), ('Man in Elevator',), ('Commission Member',), ('Commission Member',), ('Commission Member',), ('Freddie Perkins',), ('Freddie Perkins',), ('Gertrude Pendleton',), ('Art Gallery Patron',)]",True
IMDB_train_84,imdb,"List all male directors who worked with the "" NBCUniversal "" company",return companies; return #1 that is NBCUniversal; return directors of #2; return #3 that are male,"select director_0.name from company as company_0, copyright as copyright_0, directed_by as directed_by_0, director as director_0, movie as movie_0 where company_0.name = ""NBCUniversal"" and director_0.gender = ""male"" and company_0.id = copyright_0.cid and copyright_0.msid = movie_0.mid and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT director.did FROM movie, copyright, company, director, directed_by WHERE company.id = copyright.cid AND copyright.msid = movie.mid AND movie.mid = directed_by.msid AND directed_by.did = director.did AND company.id IN ( SELECT company.id FROM company WHERE company.name = 'NBCUniversal' ) AND director.gender = 'male'",[],[],True
IMDB_train_85,imdb,What are the movies related to nuclear weapons,return nuclear weapons; return movies of #1,"select movie_0.title from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""nuclear weapons"" and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT movie.mid FROM movie, tags, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'nuclear weapons' )",[],[],True
IMDB_train_86,imdb,List all the directors of movies about nuclear weapons,return nuclear weapons; return movies about #1; return directors of #2,"select director_0.name from directed_by as directed_by_0, director as director_0, keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""nuclear weapons"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT director.did FROM movie, tags, director, keyword, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND keyword.id = tags.kid AND tags.msid = movie.mid AND movie.mid IN ( SELECT movie.mid FROM movie, tags, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'nuclear weapons' ) )",[],[],True
IMDB_train_87,imdb,"What is the number of movies in which "" Jennifer Aniston "" acted after 2010 ?",return Jennifer Aniston; return movies of #1; return #2 after 2010; return number of #3,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Jennifer Aniston"" and movie_0.release_year  >  2010 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.title) FROM actor, cast, movie WHERE actor.aid = cast.aid AND cast.msid = movie.mid AND actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Jennifer Aniston' ) AND movie.release_year > 2010","[(14,)]","[(14,)]",True
IMDB_train_88,imdb,"What is the number of actors in the movie "" Grumpier Old Men "" ?",return the movie Grumpier Old Men; return actors of #1; return number of #2,"select count(distinct(actor_0.name)) from actor as actor_0, cast as cast_0, movie as movie_0 where movie_0.title = ""Grumpier Old Men"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT actor.aid) FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND movie.title IN ( SELECT movie.title FROM movie WHERE movie.title = 'Grumpier Old Men' )","[(54,)]","[(54,)]",True
IMDB_train_89,imdb,"How many movies did "" Alfred Hitchcock "" direct ?",return movies; return #1 that Alfred Hitchcock direct; return number of #2,"select count(distinct(movie_0.title)) from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Alfred Hitchcock"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.title) FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Alfred Hitchcock'","[(63,)]","[(63,)]",True
IMDB_train_9,imdb,"When was "" Kevin Spacey "" born ?",return Kevin Spacey; return when was #1 born,"select actor_0.birth_year from actor as actor_0 where actor_0.name = ""Kevin Spacey""",SELECT actor.birth_year FROM actor WHERE actor.name IN ( SELECT actor.name FROM actor WHERE actor.name = 'Kevin Spacey' ),"[(1959,)]","[(1959,)]",True
IMDB_train_90,imdb,How many movies were produced in the year 2012 ?,return movies; return produced year of #1; return #1 where #2 is 2012; return number of #3,select count(distinct(movie_0.title)) from movie as movie_0 where movie_0.release_year = 2012 ;,SELECT COUNT(DISTINCT movie.title) FROM movie WHERE movie.title IN ( SELECT movie.title FROM movie ) AND movie.release_year = 2012,"[(55686,)]","[(55686,)]",True
IMDB_train_91,imdb,"What is the number of movies directed by "" Woody Allen "" per year ?",return movies; return #1 directed by Woody Allen; return year of #2; return the number of #2 for each #3,"select count(distinct(movie_0.title)), movie_0.release_year from directed_by as directed_by_0, director as director_0, movie as movie_0 where director_0.name = ""Woody Allen"" and directed_by_0.did = director_0.did and directed_by_0.msid = movie_0.mid group by movie_0.release_year ;","SELECT movie.release_year, COUNT(movie.mid) FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Woody Allen' AND movie.mid IN ( SELECT movie.mid FROM movie, director, directed_by WHERE movie.mid = directed_by.msid AND directed_by.did = director.did AND director.name = 'Woody Allen' ) GROUP BY movie.release_year","[(1, 1966), (1, 1969), (2, 1971), (1, 1972), (1, 1973), (1, 1975), (1, 1977), (1, 1978), (1, 1979), (1, 1980), (1, 1982), (1, 1983), (1, 1984), (1, 1985), (1, 1986), (2, 1987), (1, 1988), (2, 1989), (1, 1990), (1, 1991), (1, 1992), (1, 1993), (2, 1994), (1, 1995), (1, 1996), (1, 1997), (1, 1998), (1, 1999), (1, 2000), (3, 2001), (1, 2002), (1, 2003), (1, 2004), (1, 2005), (1, 2006), (1, 2007), (1, 2008), (1, 2009), (1, 2010), (1, 2011), (1, 2012), (1, 2013), (1, 2014), (1, 2015), (1, 2016), (1, 2017)]","[(1966, 1), (1969, 1), (1971, 2), (1972, 1), (1973, 1), (1975, 1), (1977, 1), (1978, 1), (1979, 1), (1980, 1), (1982, 1), (1983, 1), (1984, 1), (1985, 1), (1986, 1), (1987, 2), (1988, 1), (1989, 2), (1990, 1), (1991, 1), (1992, 1), (1993, 1), (1994, 2), (1995, 1), (1996, 1), (1997, 1), (1998, 1), (1999, 1), (2000, 1), (2001, 3), (2002, 1), (2003, 1), (2004, 1), (2005, 1), (2006, 1), (2007, 1), (2008, 1), (2009, 1), (2010, 1), (2011, 1), (2012, 1), (2013, 1), (2014, 1), (2015, 1), (2016, 1), (2017, 1)]",True
IMDB_train_92,imdb,What is the number of movies produced in 2013 ?,return movies; return #1 produced in 2013; return number of #2,select count(distinct(movie_0.title)) from movie as movie_0 where movie_0.release_year = 2013 ;,SELECT COUNT(DISTINCT movie.title) FROM movie WHERE movie.release_year = 2013,"[(58562,)]","[(58562,)]",True
IMDB_train_93,imdb,"How many movies did "" Ronald Reagan "" act in ?",return movies; return #1 that Ronald Reagan act in; return number of #2,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Ronald Reagan"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.mid) FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Ronald Reagan'","[(98,)]","[(98,)]",True
IMDB_train_94,imdb,"How many actors were born in "" Los Angeles "" after 2000 ?",return actors; return #1 born in Los Angeles; return #2 born after 2000; return number of #3,"select count(distinct(actor_0.name)) from actor as actor_0 where actor_0.birth_city = ""Los Angeles"" and actor_0.birth_year  >  2000 ;",SELECT COUNT(actor.aid) FROM actor WHERE actor.birth_city = 'Los Angeles' AND actor.birth_year > 2000,"[(32,)]","[(32,)]",True
IMDB_train_95,imdb,"How many movies did "" Humphrey Bogart "" act in before 1942 ?",return movies; return #1 that Humphrey Bogart act in; return #1 before 1942; return #1 in both #2 and #3; return number of #4,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Humphrey Bogart"" and movie_0.release_year < 1942 and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.mid) FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Humphrey Bogart' AND movie.release_year < 1942","[(26,)]","[(26,)]",True
IMDB_train_96,imdb,"What is the number of movies that "" Brad Pitt "" acts in per year ?",return movies; return #1 that Brad Pitt acts in; return years of #2; return the number of #2 for each #3,"select movie_0.release_year, count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Brad Pitt"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid group by movie_0.release_year ;","SELECT movie.release_year, COUNT(DISTINCT movie.mid) FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Brad Pitt' AND movie.mid IN ( SELECT movie.mid FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Brad Pitt' ) GROUP BY movie.release_year","[(1987, 2), (1989, 1), (1990, 1), (1991, 1), (1992, 2), (1993, 2), (1994, 2), (1995, 3), (1996, 2), (1997, 1), (1998, 1), (1999, 1), (2000, 1), (2001, 1), (2002, 2), (2003, 1), (2004, 1), (2005, 2), (2007, 1), (2008, 2), (2009, 4), (2010, 2), (2011, 2), (2012, 4), (2013, 2), (2014, 4), (2015, 1), (2016, 4), (2017, 1)]","[(1987, 2), (1989, 1), (1990, 1), (1991, 1), (1992, 2), (1993, 2), (1994, 2), (1995, 3), (1996, 2), (1997, 1), (1998, 1), (1999, 1), (2000, 1), (2001, 1), (2002, 2), (2003, 1), (2004, 1), (2005, 2), (2007, 1), (2008, 2), (2009, 4), (2010, 2), (2011, 2), (2012, 4), (2013, 2), (2014, 4), (2015, 1), (2016, 4), (2017, 1)]",True
IMDB_train_97,imdb,"What is the number of movies in which "" Tom Cruise "" acted ?",return movies; return #1 that Tom Cruise acted in; return number of #2,"select count(distinct(movie_0.title)) from actor as actor_0, cast as cast_0, movie as movie_0 where actor_0.name = ""Tom Cruise"" and actor_0.aid = cast_0.aid and cast_0.msid = movie_0.mid ;","SELECT COUNT(DISTINCT movie.title) FROM movie, cast, actor WHERE movie.mid = cast.msid AND cast.aid = actor.aid AND actor.name = 'Tom Cruise'","[(65,)]","[(65,)]",True
IMDB_train_98,imdb,How many movies about Iraq war were produced in 2015 ?,return Iraq war; return movies about #1; return #2 produced in 2015; return number of #3,"select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""Iraq war"" and movie_0.release_year = 2015 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT COUNT(movie.mid) FROM tags, movie, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'Iraq war' ) AND movie.release_year = 2015","[(0,)]","[(0,)]",True
IMDB_train_99,imdb,How many movies about Persians were released after 1990 ?,return Persians; return movies about #1; return #2 released after 1990; return number of #3,"select count(distinct(movie_0.title)) from keyword as keyword_0, movie as movie_0, tags as tags_0 where keyword_0.keyword = ""Persians"" and movie_0.release_year  >  1990 and keyword_0.id = tags_0.kid and movie_0.mid = tags_0.msid ;","SELECT COUNT(movie.mid) FROM tags, movie, keyword WHERE keyword.id = tags.kid AND tags.msid = movie.mid AND keyword.keyword IN ( SELECT keyword.keyword FROM keyword WHERE keyword.keyword = 'Persians' ) AND movie.release_year > 1990","[(0,)]","[(0,)]",True
