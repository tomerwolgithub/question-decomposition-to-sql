{
    "data": [
        {
            "example_id": "GEO_dev_0",
            "db_id": "geo",
            "question": "what is the biggest city in arizona ",
            "qdmr": "return cities ;return #1 in arizona ;return size of #2 ;return #2 where #3 is biggest",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.state_name = 'arizona' AND city.population = (SELECT max(city.population) FROM city WHERE city.state_name = 'arizona');",
            "denotation_gold": [
                [
                    "phoenix"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' ) AND city.state_name = 'arizona' ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "phoenix"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in arizona ;return size of #2 ;return #2 where #3 is biggest",
                "question": "what is the biggest city in arizona ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'arizona'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "arizona"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in arizona",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' ) AND city.state_name = 'arizona' ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' )"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "arizona"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in arizona",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arizona' ) AND city.state_name = 'arizona' ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_1",
            "db_id": "geo",
            "question": "which rivers run through the state with the largest city in the us ? ",
            "qdmr": "return the us ;return cities of #1 ;return size of #2 ;return #2 where #3 is the largest ;return the state of #4 ;return the rivers that run through #5",
            "sql_gold": "SELECT river.river_name FROM river WHERE river.traverse IN (SELECT city.state_name FROM city WHERE city.population = (SELECT max(city.population) FROM city));",
            "denotation_gold": [
                [
                    "delaware"
                ],
                [
                    "allegheny"
                ],
                [
                    "hudson"
                ]
            ],
            "sql_ground": "SELECT river.country_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return the us ;return cities of #1 ;return size of #2 ;return #2 where #3 is the largest ;return the state of #4 ;return the rivers that run through #5",
                "question": "which rivers run through the state with the largest city in the us ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.country_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.country_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "the us",
                            "the us"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "river.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.country_name",
                                "IN",
                                "( SELECT river.country_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "the us cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "river.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "river.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) )"
                            ],
                            [
                                "river.country_name",
                                "IN",
                                "( SELECT river.country_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "the us cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ],
                            [
                                "river.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT highlow.state_name FROM state, highlow, city, river WHERE state.state_name = highlow.state_name AND city.state_name = state.state_name AND river.country_name = city.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "city",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "city.state_name",
                                "state.state_name"
                            ],
                            [
                                "river.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state rivers that run through",
                            "rivers that run through"
                        ],
                        "distinct": false,
                        "project ref": "5"
                    }
                },
                "grounded_sql": "SELECT highlow.state_name FROM state, highlow, city, river WHERE state.state_name = highlow.state_name AND city.state_name = state.state_name AND river.country_name = city.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river, city WHERE city.state_name = state.state_name AND river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM river, city WHERE river.country_name = city.country_name AND river.country_name IN ( SELECT river.country_name FROM river ) ) AND river.country_name IN ( SELECT river.country_name FROM river ) ORDER BY city.city_name DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_dev_10",
            "db_id": "geo",
            "question": "which states do colorado river flow through ",
            "qdmr": "return colorado river ;return states #1 flows through",
            "sql_gold": "SELECT river.traverse FROM river WHERE river.river_name = 'colorado';",
            "denotation_gold": [
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado river ;return states #1 flows through",
                "question": "which states do colorado river flow through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states  flows through",
                            "states  flows through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_dev_11",
            "db_id": "geo",
            "question": "what state has the largest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is largest",
            "sql_gold": "SELECT state.state_name FROM state WHERE state.population = (SELECT max(state.population) FROM state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is largest",
                "question": "what state has the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_12",
            "db_id": "geo",
            "question": "what is the lowest elevation in pennsylvania ",
            "qdmr": "return elevations ;return #1 in pennsylvania ;return lowest #2",
            "sql_gold": "SELECT highlow.lowest_elevation FROM highlow WHERE highlow.state_name = 'pennsylvania';",
            "denotation_gold": [
                [
                    "0"
                ]
            ],
            "sql_ground": "SELECT MIN(highlow.lowest_elevation) FROM highlow WHERE highlow.state_name = 'pennsylvania'",
            "denotation_ground": [
                [
                    "0"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return elevations ;return #1 in pennsylvania ;return lowest #2",
                "question": "what is the lowest elevation in pennsylvania ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.lowest_elevation FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.lowest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_elevation FROM highlow WHERE highlow.state_name = 'pennsylvania'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.lowest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations in pennsylvania",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT MIN(highlow.lowest_elevation) FROM highlow WHERE highlow.state_name = 'pennsylvania'",
                        "op": "aggregate",
                        "SELECT": [
                            "MIN(highlow.lowest_elevation)"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": "min",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MIN(highlow.lowest_elevation) FROM highlow WHERE highlow.state_name = 'pennsylvania'"
            }
        },
        {
            "example_id": "GEO_dev_13",
            "db_id": "geo",
            "question": "what is the highest point in each state whose lowest point is sea level ",
            "qdmr": "return states ;return lowest points of #1 ;return #1 where #2 is sea level ;return highest points of #3",
            "sql_gold": "SELECT highlow.highest_point,highlow.state_name FROM highlow WHERE highlow.lowest_elevation=0;",
            "denotation_gold": [
                [
                    "cheaha mountain",
                    "alabama"
                ],
                [
                    "mount mckinley",
                    "alaska"
                ],
                [
                    "mount frissell",
                    "connecticut"
                ],
                [
                    "centerville",
                    "delaware"
                ],
                [
                    "tenleytown",
                    "district of columbia"
                ],
                [
                    "walton county",
                    "florida"
                ],
                [
                    "brasstown bald",
                    "georgia"
                ],
                [
                    "mauna kea",
                    "hawaii"
                ],
                [
                    "mount katahdin",
                    "maine"
                ],
                [
                    "backbone mountain",
                    "maryland"
                ],
                [
                    "mount greylock",
                    "massachusetts"
                ],
                [
                    "woodall mountain",
                    "mississippi"
                ],
                [
                    "mount washington",
                    "new hampshire"
                ],
                [
                    "high point",
                    "new jersey"
                ],
                [
                    "mount marcy",
                    "new york"
                ],
                [
                    "mount mitchell",
                    "north carolina"
                ],
                [
                    "mount hood",
                    "oregon"
                ],
                [
                    "mount davis",
                    "pennsylvania"
                ],
                [
                    "jerimoth hill",
                    "rhode island"
                ],
                [
                    "sassafras mountain",
                    "south carolina"
                ],
                [
                    "guadalupe peak",
                    "texas"
                ],
                [
                    "mount rogers",
                    "virginia"
                ],
                [
                    "mount rainier",
                    "washington"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.lowest_point = 'sea level' )",
            "denotation_ground": [],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return lowest points of #1 ;return #1 where #2 is sea level ;return highest points of #3",
                "question": "what is the highest point in each state whose lowest point is sea level ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states lowest points",
                            "lowest points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.lowest_point = 'sea level'",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "highlow.lowest_point",
                                "=",
                                "sea level"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.country_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.lowest_point = 'sea level' )",
                        "op": "project",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.lowest_point = 'sea level' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states highest points",
                            "highest points"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.country_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.lowest_point = 'sea level' )"
            }
        },
        {
            "example_id": "GEO_dev_14",
            "db_id": "geo",
            "question": "what is the length of the longest river in the usa ",
            "qdmr": "return rivers ;return #1 in usa ;return lengths of #2 ;return longest of #3",
            "sql_gold": "SELECT river.length FROM river WHERE river.length = (SELECT max(river.length) FROM river);",
            "denotation_gold": [
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ]
            ],
            "sql_ground": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
            "denotation_ground": [
                [
                    3968
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in usa ;return lengths of #2 ;return longest of #3",
                "question": "what is the length of the longest river in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers lengths",
                            "lengths"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(river.length)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )"
            }
        },
        {
            "example_id": "GEO_dev_15",
            "db_id": "geo",
            "question": "what is the longest river flowing through new york ",
            "qdmr": "return rivers ;return #1 flowing through new york ;return longest #2",
            "sql_gold": "SELECT river.river_name FROM river WHERE river.traverse = 'new york' AND river.length = (SELECT max(river.length) FROM river WHERE river.traverse = 'new york');",
            "denotation_gold": [
                [
                    "allegheny"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'new york' ) AND river.traverse = 'new york' ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "allegheny"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers; return #1 flowing through new york; return longest rivers of #2; return #2 where #3 is highest",
                "question": "what is the longest river flowing through new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers flowing through new york",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'new york' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'new york' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers longest rivers",
                            "longest rivers"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'new york' ) AND river.traverse = 'new york' ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'new york' )"
                            ],
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers flowing through new york",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'new york' ) AND river.traverse = 'new york' ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_16",
            "db_id": "geo",
            "question": "how many rivers are in new york ",
            "qdmr": "return rivers ;return #1 in new york ;return number of #2",
            "sql_gold": "SELECT count(river.river_name) FROM river WHERE river.traverse = 'new york';",
            "denotation_gold": [
                [
                    3
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'new york'",
            "denotation_ground": [
                [
                    3
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in new york ;return number of #2",
                "question": "how many rivers are in new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in new york",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'new york'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'new york'"
            }
        },
        {
            "example_id": "GEO_dev_17",
            "db_id": "geo",
            "question": "what states neighbor maine ",
            "qdmr": "return states ;return #1 that neighbor maine",
            "sql_gold": "SELECT border_info.border FROM border_info WHERE border_info.state_name = 'maine';",
            "denotation_gold": [
                [
                    "new hampshire"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'maine'",
            "denotation_ground": [
                [
                    "new hampshire"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that neighbor maine",
                "question": "what states neighbor maine ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'maine'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "maine"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that neighbor maine",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'maine'"
            }
        },
        {
            "example_id": "GEO_dev_18",
            "db_id": "geo",
            "question": "what texas city has the largest population ",
            "qdmr": "return texas cities ;return #1 with the largest population",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.state_name = 'texas' AND city.population = (SELECT max(city.population) FROM city WHERE city.state_name = 'texas');",
            "denotation_gold": [
                [
                    "houston"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.state_name = 'texas'",
            "denotation_ground": [
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return texas cities ;return #1 with the largest population",
                "question": "what texas city has the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.state_name FROM mountain, city WHERE city.state_name = mountain.state_name AND city.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city with the largest population",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM mountain, city WHERE city.state_name = mountain.state_name AND city.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_dev_19",
            "db_id": "geo",
            "question": "what are major rivers in texas ",
            "qdmr": "return rivers ;return #1 in texas ;return #2 that are major",
            "sql_gold": "SELECT river.river_name FROM river WHERE river.traverse = 'texas';",
            "denotation_gold": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
            "denotation_ground": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in texas ;return #2 that are major",
                "question": "what are major rivers in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that are major",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'"
            }
        },
        {
            "example_id": "GEO_dev_2",
            "db_id": "geo",
            "question": "how big is texas ",
            "qdmr": "return size of texas",
            "sql_gold": "SELECT state.area FROM state WHERE state.state_name = 'texas';",
            "denotation_gold": [
                [
                    266807.0
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return size of texas",
                "question": "how big is texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_dev_20",
            "db_id": "geo",
            "question": "how many states border the state that borders the most states ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return states that border #4 ;return states that border #5 ;return number of #6",
            "sql_gold": "SELECT max(tmp.states) FROM(SELECT count(distinct border_info.border) AS states, border_info.state_name FROM border_info GROUP BY border_info.state_name) AS tmp;",
            "denotation_gold": [
                [
                    8
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    8
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return states that border #4 ;return states that border #5 ;return number of #6",
                "question": "how many states border the state that borders the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(border_info.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(border_info.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "5"
                    },
                    "7": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_dev_21",
            "db_id": "geo",
            "question": "what state is dallas in ",
            "qdmr": "return dallas ;return state of #1",
            "sql_gold": "SELECT city.state_name FROM city WHERE city.city_name = 'dallas';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return dallas ;return state of #1",
                "question": "what state is dallas in ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'dallas'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "dallas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
            }
        },
        {
            "example_id": "GEO_dev_22",
            "db_id": "geo",
            "question": "how big is new mexico ",
            "qdmr": "return new mexico ;return size of #1",
            "sql_gold": "SELECT state.area FROM state WHERE state.state_name = 'new mexico';",
            "denotation_gold": [
                [
                    121600.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )",
            "denotation_ground": [
                [
                    121600.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new mexico ;return size of #1",
                "question": "how big is new mexico ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new mexico'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new mexico"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )"
            }
        },
        {
            "example_id": "GEO_dev_23",
            "db_id": "geo",
            "question": "what is the population of the state with the largest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is largest ;return population of #3",
            "sql_gold": "SELECT state.population FROM state WHERE state.area = (SELECT max(state.area) FROM state);",
            "denotation_gold": [
                [
                    401800
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    401800
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is largest ;return population of #3",
                "question": "what is the population of the state with the largest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_24",
            "db_id": "geo",
            "question": "how many people live in chicago ",
            "qdmr": "return people ;return #1 who live in chicago ;return number of #2",
            "sql_gold": "SELECT city.population FROM city WHERE city.city_name = 'chicago';",
            "denotation_gold": [
                [
                    3005172
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name = 'chicago'",
            "denotation_ground": [
                [
                    3005172
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 who live in chicago ;return #1 who live in chicago",
                "question": "how many people live in chicago ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'chicago'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "chicago"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who live in chicago",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'chicago'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "chicago"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who live in chicago",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name = 'chicago'"
            }
        },
        {
            "example_id": "GEO_dev_25",
            "db_id": "geo",
            "question": "what is the smallest city in arkansas ",
            "qdmr": "return cities ;return #1 in arkansas ;return smallest of #2",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' AND city.population = (SELECT min (city.population) FROM city WHERE city.state_name = 'arkansas');",
            "denotation_gold": [
                [
                    "north little rock"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' ) AND city.state_name = 'arkansas' ORDER BY city.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "north little rock"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in arkansas; return smallest of cities of #2; return #2 where #3 is lowest",
                "question": "what is the smallest city in arkansas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'arkansas'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in arkansas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities smallest of cities",
                            "smallest of cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' ) AND city.state_name = 'arkansas' ORDER BY city.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' )"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in arkansas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'arkansas' ) AND city.state_name = 'arkansas' ORDER BY city.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_26",
            "db_id": "geo",
            "question": "which states lie on the largest river in the united states ? ",
            "qdmr": "return rivers ;return #1 in the united states ;return size of #2 ;return #2 where #3 is largest ;return states that lie on #4",
            "sql_gold": "SELECT river.traverse FROM river WHERE river.length = (SELECT max(river.length) FROM river);",
            "denotation_gold": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in the united states ;return size of #2 ;return #2 where #3 is largest ;return states that lie on #4",
                "question": "which states lie on the largest river in the united states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in the united states",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in the united states",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that lie",
                            "states that lie"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_27",
            "db_id": "geo",
            "question": "which states border iowa ",
            "qdmr": "return states ;return #1 that border iowa",
            "sql_gold": "SELECT border_info.border FROM border_info WHERE border_info.state_name = 'iowa';",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "nebraska"
                ],
                [
                    "south dakota"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
            "denotation_ground": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "nebraska"
                ],
                [
                    "south dakota"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border iowa",
                "question": "which states border iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border iowa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'"
            }
        },
        {
            "example_id": "GEO_dev_28",
            "db_id": "geo",
            "question": "what is the population density of the state with the smallest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return population density of #3",
            "sql_gold": "SELECT state.density FROM state WHERE state.area = (SELECT min (state.area) FROM state);",
            "denotation_gold": [
                [
                    580.0
                ]
            ],
            "sql_ground": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    580.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return population density of #3",
                "question": "what is the population density of the state with the smallest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_29",
            "db_id": "geo",
            "question": "which states have points higher than the highest point in colorado ",
            "qdmr": "return colorado ;return points of #1 ;return elevation of #2 ;return the highest of #3 ;return states besides #1 ;return points of #5 ;return elevation of #6 ;return the highest of #7 for each #5 ;return #5 where #8 is higher than #4",
            "sql_gold": "SELECT highlow.state_name FROM highlow WHERE highlow.highest_elevation > (SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = 'colorado');",
            "denotation_gold": [
                [
                    "alabama"
                ],
                [
                    "alaska"
                ],
                [
                    "arkansas"
                ],
                [
                    "california"
                ],
                [
                    "connecticut"
                ],
                [
                    "iowa"
                ],
                [
                    "michigan"
                ],
                [
                    "minnesota"
                ],
                [
                    "missouri"
                ],
                [
                    "new jersey"
                ],
                [
                    "ohio"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "wisconsin"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_elevation) FROM highlow WHERE highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'colorado' ) )",
            "denotation_ground": "ERROR",
            "correct_denotation": false,
            "grounding": null
        },
        {
            "example_id": "GEO_dev_3",
            "db_id": "geo",
            "question": "how many people live in washington ",
            "qdmr": "return people ;return #1 who live in washington ;return number of #2",
            "sql_gold": "SELECT state.population FROM state WHERE state.state_name = 'washington';",
            "denotation_gold": [
                [
                    4113200
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'washington'",
            "denotation_ground": [
                [
                    4113200
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 who live in washington ;return sum of #2",
                "question": "how many people live in washington ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.population FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name = 'washington'",
                        "op": "filter",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "washington"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who live in washington",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'washington'",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "washington"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'washington'"
            }
        },
        {
            "example_id": "GEO_dev_30",
            "db_id": "geo",
            "question": "where is san diego ",
            "qdmr": "return san diego ;return where is #1",
            "sql_gold": "SELECT city.state_name FROM city WHERE city.city_name = 'san diego';",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san diego' )",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return san diego ;return where is #1",
                "question": "where is san diego ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'san diego'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "san diego"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san diego' )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'san diego' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city where is",
                            "where is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san diego' )"
            }
        },
        {
            "example_id": "GEO_dev_31",
            "db_id": "geo",
            "question": "what is the highest elevation in new mexico ",
            "qdmr": "return new mexico ;return elevations in #1 ;return #2 that is the highest",
            "sql_gold": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = 'new mexico';",
            "denotation_gold": [
                [
                    "4011"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )",
            "denotation_ground": [
                [
                    "4011"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new mexico ;return elevations in #1 ;return #2 that is the highest",
                "question": "what is the highest elevation in new mexico ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "new mexico"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations that is the highest",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'new mexico' )"
            }
        },
        {
            "example_id": "GEO_dev_32",
            "db_id": "geo",
            "question": "give me the longest river that passes through the us ",
            "qdmr": "return rivers ;return #1 that pass through the us ;return longness of #2 ;return #2 where #3 is longest",
            "sql_gold": "SELECT river.river_name FROM river WHERE river.length = (SELECT max(river.length) FROM river);",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that pass through the us ;return longness of #2 ;return #2 where #3 is longest",
                "question": "give me the longest river that passes through the us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that pass through the us",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers longness",
                            "longness"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that pass through the us",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_33",
            "db_id": "geo",
            "question": "what states border delaware ",
            "qdmr": "return states ;return #1 that border delaware",
            "sql_gold": "SELECT border_info.border FROM border_info WHERE border_info.state_name = 'delaware';",
            "denotation_gold": [
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "maryland"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'delaware'",
            "denotation_ground": [
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "maryland"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border delaware",
                "question": "what states border delaware ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'delaware'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "delaware"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border delaware",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'delaware'"
            }
        },
        {
            "example_id": "GEO_dev_34",
            "db_id": "geo",
            "question": "what is the population of atlanta ga ",
            "qdmr": "return atlanta ga ;return the population of #1",
            "sql_gold": "SELECT city.population FROM city WHERE city.city_name = 'atlanta';",
            "denotation_gold": [
                [
                    425022
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'atlanta' )",
            "denotation_ground": [
                [
                    425022
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return atlanta ga ;return the population of #1",
                "question": "what is the population of atlanta ga ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'atlanta'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "atlanta"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'atlanta' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'atlanta' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'atlanta' )"
            }
        },
        {
            "example_id": "GEO_dev_35",
            "db_id": "geo",
            "question": "what state has the city with the largest population ",
            "qdmr": "return cities ;return populations of #1 ;return #1 where #2 is largest ;return state of #3",
            "sql_gold": "SELECT city.state_name FROM city WHERE city.population = (SELECT max(city.population) FROM city);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return populations of #1 ;return #1 where #2 is largest ;return state of #3",
                "question": "what state has the city with the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_36",
            "db_id": "geo",
            "question": "what is the smallest city in the largest state ",
            "qdmr": "return states ;return #1 that is largest ;return cities in #2 ;return smallest of #3",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.population = (SELECT min (city.population) FROM city WHERE city.state_name IN (SELECT state.state_name FROM state WHERE state.area = (SELECT max(state.area) FROM state))) AND city.state_name IN (SELECT state.state_name FROM state WHERE state.area = (SELECT max(state.area) FROM state));",
            "denotation_gold": [
                [
                    "anchorage"
                ]
            ],
            "sql_ground": "SELECT MIN(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    "anchorage"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return states that is largest of #1; return #1 where #2 is lowest; return cities in #3; return smallest of #4",
                "question": "what is the smallest city in the largest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that is largest",
                            "states that is largest"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT MIN(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )",
                        "op": "aggregate",
                        "SELECT": [
                            "MIN(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": "min",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MIN(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_37",
            "db_id": "geo",
            "question": "what state is the biggest ",
            "qdmr": "return states ;return #1 that is the biggest",
            "sql_gold": "SELECT state.state_name FROM state WHERE state.area = (SELECT max(state.area) FROM state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return states that is the biggest of #1; return #1 where #2 is highest",
                "question": "what state is the biggest ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that is the biggest",
                            "states that is the biggest"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_38",
            "db_id": "geo",
            "question": "what are the highest points of states surrounding mississippi ",
            "qdmr": "return states ;return #1 surrounding mississippi ;return highest points of #2",
            "sql_gold": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN (SELECT border_info.border FROM border_info WHERE border_info.state_name = 'mississippi');",
            "denotation_gold": [
                [
                    "cheaha mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "clingmans dome"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )",
            "denotation_ground": [
                [
                    "cheaha mountain"
                ],
                [
                    "cheaha mountain"
                ],
                [
                    "cheaha mountain"
                ],
                [
                    "cheaha mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "clingmans dome"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 surrounding mississippi ;return highest points of #2",
                "question": "what are the highest points of states surrounding mississippi ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states surrounding mississippi",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states highest points",
                            "highest points"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_dev_39",
            "db_id": "geo",
            "question": "what states does the colorado river run through ",
            "qdmr": "return colorado river ;return states #1 run through",
            "sql_gold": "SELECT river.traverse FROM river WHERE river.river_name = 'colorado';",
            "denotation_gold": [
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado river ;return states #1 run through",
                "question": "what states does the colorado river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states  run through",
                            "states  run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_dev_4",
            "db_id": "geo",
            "question": "what state has the smallest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "SELECT state.state_name FROM state WHERE state.population = (SELECT min (state.population) FROM state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is the lowest",
                "question": "what state has the smallest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_40",
            "db_id": "geo",
            "question": "what is the state with the lowest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "SELECT state.state_name FROM state WHERE state.density = (SELECT min (state.density) FROM state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the lowest",
                "question": "what is the state with the lowest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_41",
            "db_id": "geo",
            "question": "what is the longest river that passes the states that border the state that borders the most states ",
            "qdmr": "return states ;return border states of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4 ;return rivers that pass #5 ;return #6 that is longest",
            "sql_gold": "SELECT distinct river.river_name FROM river WHERE river.length IN ( SELECT max(mx) FROM ( SELECT river.traverse, max(river.length) AS mx FROM river WHERE river.traverse IN ( SELECT border_info.state_name FROM border_info WHERE border_info.border IN (SELECT border_info.border FROM border_info GROUP BY border_info.border having count(1) = (SELECT max(cnt1) FROM (SELECT border_info.border, count(1) AS cnt1 FROM border_info GROUP BY border_info.border) tmp1) ) ) GROUP BY river.traverse ) tmp2 );",
            "denotation_gold": [
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT river.country_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ],
                [
                    "usa"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return border states of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4 ;return rivers that pass #5 ;return #6 that is longest",
                "question": "what is the longest river that passes the states that border the state that borders the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(border_info.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(border_info.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT river.country_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "river.country_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "border_info.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border states rivers that pass",
                            "rivers that pass"
                        ],
                        "distinct": false,
                        "project ref": "5"
                    },
                    "7": {
                        "SQL": "SELECT river.country_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )",
                        "op": "filter",
                        "SELECT": [
                            "river.country_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "border_info.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that pass that is longest",
                            "rivers that pass"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.country_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_dev_42",
            "db_id": "geo",
            "question": "how high is the highest point of florida ",
            "qdmr": "return florida ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
            "sql_gold": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = 'florida';",
            "denotation_gold": [
                [
                    "105"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "105"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return florida ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
                "question": "how high is the highest point of florida ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'florida' ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_43",
            "db_id": "geo",
            "question": "what states border the mississippi river ? ",
            "qdmr": "return states ;return #1 that border the mississippi river",
            "sql_gold": "SELECT river.traverse FROM river WHERE river.river_name = 'mississippi';",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
            "denotation_ground": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border the mississippi river",
                "question": "what states border the mississippi river ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border the mississippi river",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'"
            }
        },
        {
            "example_id": "GEO_dev_44",
            "db_id": "geo",
            "question": "what is the population of dallas ",
            "qdmr": "return dallas ;return the population of #1",
            "sql_gold": "SELECT city.population FROM city WHERE city.city_name = 'dallas';",
            "denotation_gold": [
                [
                    904078
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
            "denotation_ground": [
                [
                    904078
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return dallas ;return the population of #1",
                "question": "what is the population of dallas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'dallas'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "dallas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
            }
        },
        {
            "example_id": "GEO_dev_45",
            "db_id": "geo",
            "question": "what is the largest city in missouri ",
            "qdmr": "return cities ;return #1 in missouri ;return largest #2",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.state_name = 'missouri' AND city.population = (SELECT max(city.population) FROM city WHERE city.state_name = 'missouri');",
            "denotation_gold": [
                [
                    "st. louis"
                ]
            ],
            "sql_ground": "SELECT MAX(city.city_name) FROM city WHERE city.state_name = 'missouri'",
            "denotation_ground": [
                [
                    "st. louis"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in missouri ;return largest #2",
                "question": "what is the largest city in missouri ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'missouri'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "missouri"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in missouri",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT MAX(city.city_name) FROM city WHERE city.state_name = 'missouri'",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(city.city_name)"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "missouri"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(city.city_name) FROM city WHERE city.state_name = 'missouri'"
            }
        },
        {
            "example_id": "GEO_dev_46",
            "db_id": "geo",
            "question": "where is the highest point in montana ",
            "qdmr": "return montana ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name = 'montana';",
            "denotation_gold": [
                [
                    "granite peak"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
            "denotation_ground": [
                [
                    "granite peak"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return montana ;return points in #1 ;return #2 that is the highest",
                "question": "where is the highest point in montana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "montana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
            }
        },
        {
            "example_id": "GEO_dev_47",
            "db_id": "geo",
            "question": "what states have no bordering state ? ",
            "qdmr": "return states ;return #1 with bordering states ;return #1 besides #2",
            "sql_gold": "SELECT state.state_name FROM state WHERE state.state_name NOT IN (SELECT border_info.state_name FROM border_info);",
            "denotation_gold": [
                [
                    "alaska"
                ],
                [
                    "hawaii"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border )",
            "denotation_ground": [
                [
                    "alaska"
                ],
                [
                    "hawaii"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 with bordering states ;return #1 besides #2",
                "question": "what states have no bordering state ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states with bordering states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border )",
                        "op": "discard",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "state.state_name",
                                "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border )"
            }
        },
        {
            "example_id": "GEO_dev_48",
            "db_id": "geo",
            "question": "which state borders most states ? ",
            "qdmr": "return states ;return states that #1 borders ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "SELECT border_info.border AS cnt FROM border_info GROUP BY border_info.border having count(1) = (SELECT max(cnt1) FROM (SELECT border_info.border, count(1) AS cnt1 FROM border_info GROUP BY border_info.border) tmp);",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that #1 borders ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which state borders most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that  borders",
                            "states that  borders"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_dev_49",
            "db_id": "geo",
            "question": "what is the area of the state with the smallest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the lowest ;return the area of #3",
            "sql_gold": "SELECT state.area FROM state WHERE state.density = (SELECT min (state.density) FROM state);",
            "denotation_gold": [
                [
                    591000.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    591000.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the lowest ;return the area of #3",
                "question": "what is the area of the state with the smallest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_dev_5",
            "db_id": "geo",
            "question": "give me the cities in virginia ",
            "qdmr": "return cities ;return #1 in virginia",
            "sql_gold": "SELECT city.city_name FROM city WHERE city.state_name = 'virginia';",
            "denotation_gold": [
                [
                    "norfolk"
                ],
                [
                    "virginia beach"
                ],
                [
                    "richmond"
                ],
                [
                    "arlington"
                ],
                [
                    "newport news"
                ],
                [
                    "hampton"
                ],
                [
                    "chesapeake"
                ],
                [
                    "portsmouth"
                ],
                [
                    "alexandria"
                ],
                [
                    "roanoke"
                ],
                [
                    "lynchburg"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'virginia'",
            "denotation_ground": [
                [
                    "norfolk"
                ],
                [
                    "virginia beach"
                ],
                [
                    "richmond"
                ],
                [
                    "arlington"
                ],
                [
                    "newport news"
                ],
                [
                    "hampton"
                ],
                [
                    "chesapeake"
                ],
                [
                    "portsmouth"
                ],
                [
                    "alexandria"
                ],
                [
                    "roanoke"
                ],
                [
                    "lynchburg"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in virginia",
                "question": "give me the cities in virginia ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'virginia'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "virginia"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in virginia",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.state_name = 'virginia'"
            }
        },
        {
            "example_id": "GEO_dev_6",
            "db_id": "geo",
            "question": "what is the area of california ",
            "qdmr": "return area ;return #1 of california",
            "sql_gold": "SELECT state.area FROM state WHERE state.state_name = 'california';",
            "denotation_gold": [
                [
                    158000.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name = 'california'",
            "denotation_ground": [
                [
                    158000.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return area ;return #1 of california",
                "question": "what is the area of california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.area FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "area of california",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name = 'california'"
            }
        },
        {
            "example_id": "GEO_dev_7",
            "db_id": "geo",
            "question": "what is the area of the state with the capital albany ",
            "qdmr": "return states ;return capitals of #1 ;return #1 where #2 is albany ;return the area of #3",
            "sql_gold": "SELECT state.area FROM state WHERE state.capital = 'albany';",
            "denotation_gold": [
                [
                    49100.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'albany' )",
            "denotation_ground": [
                [
                    49100.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return capitals of #1 ;return #1 where #2 is albany ;return the area of #3",
                "question": "what is the area of the state with the capital albany ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'albany'",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "state.capital",
                                "=",
                                "albany"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'albany' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'albany' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'albany' )"
            }
        },
        {
            "example_id": "GEO_dev_8",
            "db_id": "geo",
            "question": "give me the lakes in california ",
            "qdmr": "return lakes ;return #1 in california",
            "sql_gold": "SELECT lake.lake_name FROM lake WHERE lake.state_name = 'california';",
            "denotation_gold": [
                [
                    "salton sea"
                ],
                [
                    "tahoe"
                ]
            ],
            "sql_ground": "SELECT lake.lake_name FROM lake WHERE lake.state_name = 'california'",
            "denotation_ground": [
                [
                    "salton sea"
                ],
                [
                    "tahoe"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return lakes ;return #1 in california",
                "question": "give me the lakes in california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.lake_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.lake_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "lakes",
                            "lakes"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT lake.lake_name FROM lake WHERE lake.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "lake.lake_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "lake.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "lakes in california",
                            "lakes"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT lake.lake_name FROM lake WHERE lake.state_name = 'california'"
            }
        },
        {
            "example_id": "GEO_dev_9",
            "db_id": "geo",
            "question": "what are the states ",
            "qdmr": "return states",
            "sql_gold": "SELECT state.state_name FROM state;",
            "denotation_gold": [
                [
                    "alabama"
                ],
                [
                    "alaska"
                ],
                [
                    "arizona"
                ],
                [
                    "arkansas"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "district of columbia"
                ],
                [
                    "florida"
                ],
                [
                    "georgia"
                ],
                [
                    "hawaii"
                ],
                [
                    "idaho"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kansas"
                ],
                [
                    "kentucky"
                ],
                [
                    "louisiana"
                ],
                [
                    "maine"
                ],
                [
                    "maryland"
                ],
                [
                    "massachusetts"
                ],
                [
                    "michigan"
                ],
                [
                    "minnesota"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "montana"
                ],
                [
                    "nebraska"
                ],
                [
                    "nevada"
                ],
                [
                    "new hampshire"
                ],
                [
                    "new jersey"
                ],
                [
                    "new mexico"
                ],
                [
                    "new york"
                ],
                [
                    "north carolina"
                ],
                [
                    "north dakota"
                ],
                [
                    "ohio"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oregon"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "rhode island"
                ],
                [
                    "south carolina"
                ],
                [
                    "south dakota"
                ],
                [
                    "tennessee"
                ],
                [
                    "texas"
                ],
                [
                    "utah"
                ],
                [
                    "vermont"
                ],
                [
                    "virginia"
                ],
                [
                    "washington"
                ],
                [
                    "west virginia"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wyoming"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state",
            "denotation_ground": [
                [
                    "alabama"
                ],
                [
                    "alaska"
                ],
                [
                    "arizona"
                ],
                [
                    "arkansas"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "district of columbia"
                ],
                [
                    "florida"
                ],
                [
                    "georgia"
                ],
                [
                    "hawaii"
                ],
                [
                    "idaho"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kansas"
                ],
                [
                    "kentucky"
                ],
                [
                    "louisiana"
                ],
                [
                    "maine"
                ],
                [
                    "maryland"
                ],
                [
                    "massachusetts"
                ],
                [
                    "michigan"
                ],
                [
                    "minnesota"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "montana"
                ],
                [
                    "nebraska"
                ],
                [
                    "nevada"
                ],
                [
                    "new hampshire"
                ],
                [
                    "new jersey"
                ],
                [
                    "new mexico"
                ],
                [
                    "new york"
                ],
                [
                    "north carolina"
                ],
                [
                    "north dakota"
                ],
                [
                    "ohio"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oregon"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "rhode island"
                ],
                [
                    "south carolina"
                ],
                [
                    "south dakota"
                ],
                [
                    "tennessee"
                ],
                [
                    "texas"
                ],
                [
                    "utah"
                ],
                [
                    "vermont"
                ],
                [
                    "virginia"
                ],
                [
                    "washington"
                ],
                [
                    "west virginia"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states",
                "question": "what are the states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state"
            }
        },
        {
            "example_id": "GEO_test_0",
            "db_id": "geo",
            "question": "count the states which have elevations lower than what alabama has ",
            "qdmr": "return states ;return elevations of #1 ;return #1 where #2 is lower than alabama ;return number of #3",
            "sql_gold": "select count(highlow.state_name) from highlow where highlow.lowest_elevation <(select highlow.lowest_elevation from highlow where highlow.state_name = 'alabama');",
            "denotation_gold": [
                [
                    2
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM highlow, state WHERE highlow.state_name = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.state_name < 'alabama'",
            "denotation_ground": [
                [
                    0
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return elevations of #1 ;return #1 where #2 is lower than alabama ;return number of #3",
                "question": "count the states which have elevations lower than what alabama has ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "state",
                            "mountain"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM highlow, state WHERE highlow.state_name = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.state_name < 'alabama'",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "state"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "highlow.state_name",
                                "<",
                                "alabama"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT COUNT(state.state_name) FROM highlow, state WHERE highlow.state_name = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.state_name < 'alabama'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "highlow",
                            "state"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "highlow.state_name",
                                "<",
                                "alabama"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM highlow, state WHERE highlow.state_name = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.state_name < 'alabama'"
            }
        },
        {
            "example_id": "GEO_test_1",
            "db_id": "geo",
            "question": "give me the number of rivers in california ",
            "qdmr": "return rivers ;return #1 in california ;return number of #2",
            "sql_gold": "select count(river.river_name) from river where river.traverse = 'california';",
            "denotation_gold": [
                [
                    1
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'california'",
            "denotation_ground": [
                [
                    1
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in california ;return number of #2",
                "question": "give me the number of rivers in california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in california",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'california'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'california'"
            }
        },
        {
            "example_id": "GEO_test_10",
            "db_id": "geo",
            "question": "how long is the longest river in california ",
            "qdmr": "return rivers ;return #1 in california ;return how long are #2 ;return #2 where #3 is the highest",
            "sql_gold": "select river.length from river where river.traverse = 'california' and river.length = (select max(river.length) from river where river.traverse = 'california');",
            "denotation_gold": [
                [
                    2333
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.length IN ( SELECT river.length FROM river WHERE river.traverse = 'california' ) AND river.traverse = 'california' ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    2333
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in california ;return how long are #2 ;return #2 where #3 is the highest",
                "question": "how long is the longest river in california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.length FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.traverse = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in california",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.length IN ( SELECT river.length FROM river WHERE river.traverse = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.length",
                                "IN",
                                "( SELECT river.length FROM river WHERE river.traverse = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long are",
                            "how long are"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.length FROM river WHERE river.length IN ( SELECT river.length FROM river WHERE river.traverse = 'california' ) AND river.traverse = 'california' ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.length",
                                "IN",
                                "( SELECT river.length FROM river WHERE river.traverse = 'california' )"
                            ],
                            [
                                "river.traverse",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in california",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.length IN ( SELECT river.length FROM river WHERE river.traverse = 'california' ) AND river.traverse = 'california' ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_100",
            "db_id": "geo",
            "question": "what is the capital of the state with the most inhabitants ",
            "qdmr": "return states ;return inhabitants of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return capital of #4",
            "sql_gold": "select state.capital from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "sacramento"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.state_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ],
                [
                    "sacramento"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return inhabitants of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return capital of #4",
                "question": "what is the capital of the state with the most inhabitants ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states inhabitants",
                            "inhabitants"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.state_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.state_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_101",
            "db_id": "geo",
            "question": "what is the combined area of all 50 states ",
            "qdmr": "return states ;return areas of #1 ;return sum of #2",
            "sql_gold": "select sum(state.area) from state;",
            "denotation_gold": [
                [
                    3670038.0
                ]
            ],
            "sql_ground": "SELECT SUM(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
            "denotation_ground": [
                [
                    3670038.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return sum of #2",
                "question": "what is the combined area of all 50 states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.area)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )"
            }
        },
        {
            "example_id": "GEO_test_102",
            "db_id": "geo",
            "question": "what is the density of new york ",
            "qdmr": "return new york ;return density of new york",
            "sql_gold": "select state.density from state where state.state_name = 'new york';",
            "denotation_gold": [
                [
                    357.5967413441955
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name = 'new york'",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return new york ;return density of new york",
                "question": "what is the density of new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name = 'new york'"
            }
        },
        {
            "example_id": "GEO_test_103",
            "db_id": "geo",
            "question": "what is the highest elevation in texas ",
            "qdmr": "return elevations ;return #1 in texas ;return highest #2",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.state_name = 'texas';",
            "denotation_gold": [
                [
                    "2667"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_elevation) FROM highlow WHERE highlow.state_name = 'texas'",
            "denotation_ground": [
                [
                    "2667"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return elevations ;return #1 in texas ;return highest #2",
                "question": "what is the highest elevation in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations in texas",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT MAX(highlow.highest_elevation) FROM highlow WHERE highlow.state_name = 'texas'",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(highlow.highest_elevation)"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(highlow.highest_elevation) FROM highlow WHERE highlow.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_104",
            "db_id": "geo",
            "question": "what is the highest elevation in the united states ",
            "qdmr": "return united states ;return elevations in #1 ;return highest #2",
            "sql_gold": "select max(highlow.highest_elevation) from highlow;",
            "denotation_gold": [
                [
                    "979"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_elevation) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
            "denotation_ground": [
                [
                    "979"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return united states ;return elevations in #1 ;return highest #2",
                "question": "what is the highest elevation in the united states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states",
                            "united states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT MAX(highlow.highest_elevation) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(highlow.highest_elevation)"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(highlow.highest_elevation) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )"
            }
        },
        {
            "example_id": "GEO_test_105",
            "db_id": "geo",
            "question": "what is the highest mountain in the us ",
            "qdmr": "return mountains ;return #1 in the us ;return highest #2",
            "sql_gold": "select mountain.mountain_name from mountain where mountain.mountain_altitude = (select max(mountain.mountain_altitude) from mountain);",
            "denotation_gold": [
                [
                    "mckinley"
                ]
            ],
            "sql_ground": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mckinley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return mountains; return #1 in the us; return highest mountains of #2; return #2 where #3 is highest",
                "question": "what is the highest mountain in the us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain",
                        "op": "select",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain",
                        "op": "filter",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains in the us",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT mountain.mountain_altitude FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain )",
                        "op": "project",
                        "SELECT": [
                            "mountain.mountain_altitude"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains highest mountains",
                            "highest mountains"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "mountain.mountain_altitude"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains in the us",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_106",
            "db_id": "geo",
            "question": "what is the highest mountain in us ",
            "qdmr": "return mountains ;return #1 in us ;return highest #2",
            "sql_gold": "select mountain.mountain_name from mountain where mountain.mountain_altitude = (select max(mountain.mountain_altitude) from mountain);",
            "denotation_gold": [
                [
                    "mckinley"
                ]
            ],
            "sql_ground": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mckinley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return mountains; return #1 in us; return highest mountains of #2; return #2 where #3 is highest",
                "question": "what is the highest mountain in us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain",
                        "op": "select",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain",
                        "op": "filter",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains in us",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT mountain.mountain_altitude FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain )",
                        "op": "project",
                        "SELECT": [
                            "mountain.mountain_altitude"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains highest mountains",
                            "highest mountains"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "mountain.mountain_altitude"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains in us",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain ) ORDER BY mountain.mountain_altitude DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_107",
            "db_id": "geo",
            "question": "what is the highest point in delaware ",
            "qdmr": "return delaware ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.state_name = 'delaware';",
            "denotation_gold": [
                [
                    "135"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )",
            "denotation_ground": [
                [
                    "135"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return delaware ;return points in #1 ;return #2 that is the highest",
                "question": "what is the highest point in delaware ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "delaware"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'delaware' )"
            }
        },
        {
            "example_id": "GEO_test_108",
            "db_id": "geo",
            "question": "what is the highest point in iowa ",
            "qdmr": "return iowa ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'iowa';",
            "denotation_gold": [
                [
                    "ocheyedan mound"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )",
            "denotation_ground": [
                [
                    "ocheyedan mound"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return iowa ;return points in #1 ;return #2 that is the highest",
                "question": "what is the highest point in iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'iowa' )"
            }
        },
        {
            "example_id": "GEO_test_109",
            "db_id": "geo",
            "question": "what is the highest point in maine ",
            "qdmr": "return maine ;return points in #1 ;return highest #2",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'maine';",
            "denotation_gold": [
                [
                    "mount katahdin"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_point) FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )",
            "denotation_ground": [
                [
                    "mount katahdin"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return maine ;return points in #1 ;return highest #2",
                "question": "what is the highest point in maine ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "maine"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT MAX(highlow.highest_point) FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(highlow.highest_point)"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(highlow.highest_point) FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maine' )"
            }
        },
        {
            "example_id": "GEO_test_11",
            "db_id": "geo",
            "question": "how long is the longest river in the usa ",
            "qdmr": "return rivers ;return #1 in the usa ;return how long is #2 ;return the longest #3",
            "sql_gold": "select river.length from river where river.length = (select max(river.length) from river);",
            "denotation_gold": [
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ],
                [
                    3968
                ]
            ],
            "sql_ground": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
            "denotation_ground": [
                [
                    3968
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in the usa ;return how long is #2 ;return the longest #3",
                "question": "how long is the longest river in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in the usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long is",
                            "how long is"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(river.length)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )"
            }
        },
        {
            "example_id": "GEO_test_110",
            "db_id": "geo",
            "question": "what is the highest point in montana ",
            "qdmr": "return montana ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'montana';",
            "denotation_gold": [
                [
                    "granite peak"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
            "denotation_ground": [
                [
                    "granite peak"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return montana ;return points in #1 ;return #2 that is the highest",
                "question": "what is the highest point in montana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "montana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
            }
        },
        {
            "example_id": "GEO_test_111",
            "db_id": "geo",
            "question": "what is the highest point in nevada in meters ",
            "qdmr": "return nevada ;return points in #1 ;return elevation of #2 ;return #2 where #3 is the highest in meters",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.state_name = 'nevada';",
            "denotation_gold": [
                [
                    "4005"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "4005"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return nevada ;return points in #1 ;return elevation of #2 ;return #2 where #3 is the highest in meters",
                "question": "what is the highest point in nevada in meters ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "nevada"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nevada' ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_112",
            "db_id": "geo",
            "question": "what is the highest point in states bordering georgia ",
            "qdmr": "return states ;return #1 bordering georgia ;return points in #2 ;return highest #3",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name in (select border_info.border from border_info where border_info.state_name = 'georgia') order by highlow.highest_elevation desc limit 1;",
            "denotation_gold": [
                [
                    "cheaha mountain"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ORDER BY state.country_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "cheaha mountain"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 bordering georgia; return points in #2; return highest points in states of #3; return #3 where #4 is highest",
                "question": "what is the highest point in states bordering georgia ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "georgia"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering georgia",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.country_name FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) )",
                        "op": "project",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points highest points in states",
                            "highest points in states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ORDER BY state.country_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.country_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow, border_info WHERE state.state_name = highlow.state_name AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'georgia' ) ORDER BY state.country_name DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_113",
            "db_id": "geo",
            "question": "what is the highest point in the states bordering colorado ",
            "qdmr": "return states ;return #1 bordering colorado ;return points of #2 ;return highest #3",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name in (select border_info.border from state,border_info where state.state_name = 'colorado') order by highlow.highest_elevation desc limit 1;",
            "denotation_gold": [
                [
                    "mount davis"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )",
            "denotation_ground": [
                [
                    "mount elbert"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 bordering colorado ;return points of #2 ;return highest #3",
                "question": "what is the highest point in the states bordering colorado ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'colorado'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering colorado",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.country_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT MAX(state.country_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(state.country_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(state.country_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_114",
            "db_id": "geo",
            "question": "what is the highest point in the state with capital austin ",
            "qdmr": "return states ;return #1 with capital austin ;return points of #2 ;return highest #3",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name in (select state.state_name from state where state.capital = 'austin');",
            "denotation_gold": [
                [
                    "guadalupe peak"
                ]
            ],
            "sql_ground": "SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.capital = 'austin' )",
            "denotation_ground": [
                [
                    "guadalupe peak"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 with capital austin ;return points of #2 ;return highest #3",
                "question": "what is the highest point in the state with capital austin ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.capital = 'austin'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.capital",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states with capital austin",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.capital = 'austin' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.capital = 'austin' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.capital = 'austin' )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(highlow.highest_point)"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.capital = 'austin' )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.capital = 'austin' )"
            }
        },
        {
            "example_id": "GEO_test_115",
            "db_id": "geo",
            "question": "what is the highest point in the usa ",
            "qdmr": "return usa ;return highest point in #1",
            "sql_gold": "select distinct highlow.highest_point from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "mount davis"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
            "denotation_ground": [
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount whitney"
                ],
                [
                    "mount whitney"
                ],
                [
                    "walton county"
                ],
                [
                    "charles mound"
                ],
                [
                    "franklin township"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "granite peak"
                ],
                [
                    "boundary peak"
                ],
                [
                    "mount marcy"
                ],
                [
                    "mount marcy"
                ],
                [
                    "mount marcy"
                ],
                [
                    "campbell hill"
                ],
                [
                    "mount davis"
                ],
                [
                    "kings peak"
                ],
                [
                    "mount mansfield"
                ],
                [
                    "timms hill"
                ],
                [
                    "timms hill"
                ],
                [
                    "timms hill"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return usa ;return highest point in #1",
                "question": "what is the highest point in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.country_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa",
                            "usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM lake, border_info WHERE lake.state_name = border_info.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "lake",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa highest point",
                            "highest point"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM lake, border_info WHERE lake.state_name = border_info.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )"
            }
        },
        {
            "example_id": "GEO_test_116",
            "db_id": "geo",
            "question": "what is the highest point in virginia ",
            "qdmr": "return virginia ;return points in #1 ;return elevation of #2 ;return #2 where #3 is the highest",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'virginia';",
            "denotation_gold": [
                [
                    "mount rogers"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mount rogers"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return virginia ;return points in #1 ;return elevation of #2 ;return #2 where #3 is the highest",
                "question": "what is the highest point in virginia ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "virginia"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'virginia' ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_117",
            "db_id": "geo",
            "question": "what is the highest point of the state with the smallest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the lowest ;return the highest point of #3",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name in (select state.state_name from state where state.density = (select min (state.density) from state ));",
            "denotation_gold": [
                [
                    "mount mckinley"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    "mount mckinley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the lowest ;return the highest point of #3",
                "question": "what is the highest point of the state with the smallest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states highest point",
                            "highest point"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_118",
            "db_id": "geo",
            "question": "what is the highest point of the usa ",
            "qdmr": "return usa ;return highest point of #1",
            "sql_gold": "select distinct highlow.highest_point from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "mount davis"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
            "denotation_ground": [
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "mount whitney"
                ],
                [
                    "mount whitney"
                ],
                [
                    "walton county"
                ],
                [
                    "charles mound"
                ],
                [
                    "franklin township"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "mount curwood"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "granite peak"
                ],
                [
                    "boundary peak"
                ],
                [
                    "mount marcy"
                ],
                [
                    "mount marcy"
                ],
                [
                    "mount marcy"
                ],
                [
                    "campbell hill"
                ],
                [
                    "mount davis"
                ],
                [
                    "kings peak"
                ],
                [
                    "mount mansfield"
                ],
                [
                    "timms hill"
                ],
                [
                    "timms hill"
                ],
                [
                    "timms hill"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return usa ;return highest point of #1",
                "question": "what is the highest point of the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.country_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa",
                            "usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM lake, border_info WHERE lake.state_name = border_info.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "lake",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa highest point",
                            "highest point"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM lake, border_info WHERE lake.state_name = border_info.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )"
            }
        },
        {
            "example_id": "GEO_test_119",
            "db_id": "geo",
            "question": "what is the high point of wyoming ",
            "qdmr": "return wyoming ;return high point of #1",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'wyoming';",
            "denotation_gold": [
                [
                    "gannett peak"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'wyoming' )",
            "denotation_ground": [
                [
                    "gannett peak"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return wyoming ;return high point of #1",
                "question": "what is the high point of wyoming ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'wyoming'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "wyoming"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'wyoming' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'wyoming' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow high point",
                            "high point"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'wyoming' )"
            }
        },
        {
            "example_id": "GEO_test_12",
            "db_id": "geo",
            "question": "how long is the north platte river ",
            "qdmr": "return north platte river ;return how long is #1",
            "sql_gold": "select river.length from river where river.river_name = 'north platte';",
            "denotation_gold": [
                [
                    1094
                ],
                [
                    1094
                ],
                [
                    1094
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'north platte' )",
            "denotation_ground": [
                [
                    1094
                ],
                [
                    1094
                ],
                [
                    1094
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return north platte river ;return how long is #1",
                "question": "how long is the north platte river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'north platte'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "north platte"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'north platte' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'north platte' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river how long is",
                            "how long is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'north platte' )"
            }
        },
        {
            "example_id": "GEO_test_120",
            "db_id": "geo",
            "question": "what is the largest capital city in the usa ",
            "qdmr": "return usa ;return capital cities of #1 ;return size of #2 ;return #2 where #3 is largest",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city,state where city.city_name=state.capital);",
            "denotation_gold": [
                [
                    "phoenix"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY city.city_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "youngstown"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return usa ;return capital cities of #1 ;return size of #2 ;return #2 where #3 is largest",
                "question": "what is the largest capital city in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.country_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa",
                            "usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "lake",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "lake.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT lake.area FROM lake, city WHERE lake.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )",
                        "op": "project",
                        "SELECT": [
                            "lake.area"
                        ],
                        "FROM": [
                            "lake",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "lake.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY lake.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "lake",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "lake.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )"
                            ],
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "lake.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND city.city_name IN ( SELECT city.city_name FROM lake, city WHERE lake.country_name = city.country_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY lake.area DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_121",
            "db_id": "geo",
            "question": "what is the largest city in california ",
            "qdmr": "return cities ;return #1 in california ;return largest #2",
            "sql_gold": "select city.city_name from city where city.state_name = 'california' and city.population = (select max(city.population) from city where city.state_name = 'california');",
            "denotation_gold": [
                [
                    "los angeles"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "los angeles"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in california; return largest cities of #2; return #2 where #3 is highest",
                "question": "what is the largest city in california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in california",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities largest cities",
                            "largest cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in california",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_122",
            "db_id": "geo",
            "question": "what is the largest city in rhode island ",
            "qdmr": "return rhode island ;return cities in #1 ;return size of #2 ;return #2 where #3 is largest",
            "sql_gold": "select city.city_name from city where city.state_name = 'rhode island' and city.population = (select max(city.population) from city where city.state_name = 'rhode island');",
            "denotation_gold": [
                [
                    "providence"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "providence"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rhode island ;return cities in #1 ;return size of #2 ;return #2 where #3 is largest",
                "question": "what is the largest city in rhode island ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.state_name = 'rhode island'",
                        "op": "select",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "rhode island"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) )"
                            ],
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'rhode island' ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_123",
            "db_id": "geo",
            "question": "what is the largest city in smallest state through which the mississippi runs ",
            "qdmr": "return states ;return size of #1 ;return #1 where #2 is the lowest ;return cities in #3 ;return size of #4 ;return #4 where #5 is the largest",
            "sql_gold": "select city.city_name from city where city.state_name in (select state.state_name from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi') and state.area = (select min (state.area) from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi'))) order by city.population desc limit 1;",
            "denotation_gold": [
                [
                    "memphis"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ORDER BY city.city_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "tuscaloosa"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return size of #1 ;return #1 where #2 is the lowest ;return cities in #3 ;return size of #4 ;return #4 where #5 is the largest",
                "question": "what is the largest city in smallest state through which the mississippi runs ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.state_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT highlow.highest_point FROM highlow, state, city WHERE city.state_name = highlow.state_name AND state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow",
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT city.city_name FROM highlow, state, city WHERE city.state_name = highlow.state_name AND state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ORDER BY highlow.highest_point DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "highlow",
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_point"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM highlow, state, city WHERE city.state_name = highlow.state_name AND state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1 ) ORDER BY highlow.highest_point DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_124",
            "db_id": "geo",
            "question": "what is the largest city in the smallest state in the usa ",
            "qdmr": "return states ;return size of #1 ;return #1 where #2 is smallest ;return cities in #3 ;return size of #4 ;return #4 where #5 is largest",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city where city.state_name in (select state.state_name from state where state.area = (select min (state.area) from state))) and city.state_name in (select state.state_name from state where state.area = (select min (state.area) from state));",
            "denotation_gold": [
                [
                    "washington"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ORDER BY city.city_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "washington"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return size of #1 ;return #1 where #2 is smallest ;return cities in #3 ;return size of #4 ;return #4 where #5 is largest",
                "question": "what is the largest city in the smallest state in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ORDER BY city.city_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 ) ORDER BY city.city_name DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_125",
            "db_id": "geo",
            "question": "what is the largest river in washington state ",
            "qdmr": "return rivers ;return #1 in washington state ;return size of #2 ;return #2 where #3 is largest",
            "sql_gold": "select river.river_name from river where river.traverse = 'washington' and river.length = (select max(river.length) from river where river.traverse = 'washington');",
            "denotation_gold": [
                [
                    "columbia"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'washington' ) AND river.traverse = 'washington' ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "columbia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in washington state ;return size of #2 ;return #2 where #3 is largest",
                "question": "what is the largest river in washington state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'washington'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "washington"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in washington state",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'washington' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'washington' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'washington' ) AND river.traverse = 'washington' ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'washington' )"
                            ],
                            [
                                "river.traverse",
                                "=",
                                "washington"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in washington state",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'washington' ) AND river.traverse = 'washington' ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_126",
            "db_id": "geo",
            "question": "what is the largest state bordering arkansas ",
            "qdmr": "return states ;return #1 bordering arkansas ;return largest #2",
            "sql_gold": "select state.state_name from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'arkansas') and state.area = (select max(state.area) from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'arkansas' ));",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT MAX(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arkansas'",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 bordering arkansas ;return largest #2",
                "question": "what is the largest state bordering arkansas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arkansas'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering arkansas",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT MAX(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arkansas'",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arkansas'"
            }
        },
        {
            "example_id": "GEO_test_127",
            "db_id": "geo",
            "question": "what is the largest state that borders texas ",
            "qdmr": "return texas ;return border states of #1 ;return size of #2 ;return #2 where #3 is largest",
            "sql_gold": "select state.state_name from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'texas') and state.area = (select max(state.area) from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'texas'));",
            "denotation_gold": [
                [
                    "new mexico"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ) AND border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ORDER BY border_info.state_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return texas ;return border states of #1 ;return size of #2 ;return #2 where #3 is largest",
                "question": "what is the largest state that borders texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info",
                            "border info"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )",
                        "op": "project",
                        "SELECT": [
                            "border_info.border"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ) AND border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ORDER BY border_info.border DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )"
                            ],
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "border_info.border"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ) AND border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) ORDER BY border_info.border DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_128",
            "db_id": "geo",
            "question": "what is the least populous state ",
            "qdmr": "return states ;return population of #1 ;return #1 where #2 is lowest",
            "sql_gold": "select state.state_name from state where state.population = (select min (state.population) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population of #1 ;return #1 where #2 is lowest",
                "question": "what is the least populous state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_129",
            "db_id": "geo",
            "question": "what is the length of the colorado river ",
            "qdmr": "return colorado river ;return length of #1",
            "sql_gold": "select river.length from river where river.river_name = 'colorado';",
            "denotation_gold": [
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
            "denotation_ground": [
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado river ;return length of #1",
                "question": "what is the length of the colorado river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river length",
                            "length"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_13",
            "db_id": "geo",
            "question": "how long is the ohio river ",
            "qdmr": "return ohio river ;return how long is #1",
            "sql_gold": "select river.length from river where river.river_name = 'ohio';",
            "denotation_gold": [
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )",
            "denotation_ground": [
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ],
                [
                    1569
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return ohio river ;return how long is #1",
                "question": "how long is the ohio river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'ohio'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river how long is",
                            "how long is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )"
            }
        },
        {
            "example_id": "GEO_test_130",
            "db_id": "geo",
            "question": "what is the length of the longest river that runs through texas ",
            "qdmr": "return rivers ;return #1 that run through texas ;return lengths of #2 ;return the longest of #3",
            "sql_gold": "select river.length from river where river.traverse = 'texas' and river.length = (select max(river.length) from river where river.traverse = 'texas');",
            "denotation_gold": [
                [
                    3033
                ]
            ],
            "sql_ground": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
            "denotation_ground": [
                [
                    3033
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that run through texas ;return lengths of #2 ;return the longest of #3",
                "question": "what is the length of the longest river that runs through texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that run through texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers lengths",
                            "lengths"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(river.length)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MAX(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_131",
            "db_id": "geo",
            "question": "what is the length of the mississippi river ",
            "qdmr": "return mississippi river ;return length of #1",
            "sql_gold": "select river.length from river where river.river_name = 'mississippi';",
            "denotation_gold": [
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )",
            "denotation_ground": [
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return mississippi river ;return length of #1",
                "question": "what is the length of the mississippi river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'mississippi'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river length",
                            "length"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_132",
            "db_id": "geo",
            "question": "what is the length of the river that flows through the most states ",
            "qdmr": "return rivers ;return states that #1 flows through ;return number of #2 for each #1 ;return #1 where #3 is highest ;return length of #4",
            "sql_gold": "SELECT DISTINCT river.length FROM river WHERE river.river_name = ( SELECT river_name FROM (SELECT river.river_name, count(1) as cnt FROM river GROUP BY river.river_name ) tmp1 WHERE tmp1.cnt = (SELECT MAX (cnt) FROM (SELECT river.river_name, count(1) as cnt FROM river GROUP BY river.river_name ) tmp2 ) );",
            "denotation_gold": [
                [
                    3778
                ]
            ],
            "sql_ground": "SELECT river.length FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states that #1 flows through ;return number of #2 for each #1 ;return #1 where #3 is highest ;return length of #4",
                "question": "what is the length of the river that flows through the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that  flows through",
                            "states that  flows through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(highlow.state_name) FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(highlow.state_name)"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(highlow.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT river.length FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers length",
                            "length"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT river.length FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_133",
            "db_id": "geo",
            "question": "what is the length of the river that runs through the most states ",
            "qdmr": "return rivers ;return states that #1 run through ;return number of #2 for each #1 ;return #1 where #3 is highest ;return length of #4",
            "sql_gold": "SELECT DISTINCT river.length FROM river WHERE river.river_name = ( SELECT river_name FROM (SELECT river.river_name, count(1) as cnt FROM river GROUP BY river.river_name ) tmp1 WHERE tmp1.cnt = (SELECT MAX (cnt) FROM (SELECT river.river_name, count(1) as cnt FROM river GROUP BY river.river_name ) tmp2 ) );",
            "denotation_gold": [
                [
                    3778
                ]
            ],
            "sql_ground": "SELECT river.length FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states that #1 run through ;return number of #2 for each #1 ;return #1 where #3 is highest ;return length of #4",
                "question": "what is the length of the river that runs through the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that  run through",
                            "states that  run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.area) FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.area)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.area)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT river.length FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers length",
                            "length"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT river.length FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_134",
            "db_id": "geo",
            "question": "what is the longest river in florida ",
            "qdmr": "return rivers ;return #1 in florida ;return longest in #2",
            "sql_gold": "select river.river_name from river where river.traverse = 'florida' and river.length = (select max(river.length) from river where river.traverse = 'florida');",
            "denotation_gold": [
                [
                    "chattahoochee"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )",
            "denotation_ground": [
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in florida ;return longest in #2",
                "question": "what is the longest river in florida ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'florida'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in florida",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers longest",
                            "longest"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )"
            }
        },
        {
            "example_id": "GEO_test_135",
            "db_id": "geo",
            "question": "what is the longest river in the largest state ",
            "qdmr": "return states ;return size of #1 ;return #1 where #2 is largest ;return rivers of #3 ;return how long are #4 ;return #4 where #5 is the highest",
            "sql_gold": "select river.river_name from river where river.traverse in (select state.state_name from state where state.area = (select max(state.area) from state)) and river.length = (select max(river.length) from river where river.traverse in (select state.state_name from state where state.area = (select max(state.area) from state)));",
            "denotation_gold": [],
            "sql_ground": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return size of #1 ;return #1 where #2 is largest ;return rivers of #3 ;return how long are #4 ;return #4 where #5 is the highest",
                "question": "what is the longest river in the largest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT river.length FROM state, river WHERE state.state_name = river.traverse AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long are",
                            "how long are"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ) AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_136",
            "db_id": "geo",
            "question": "what is the longest river in the states that border nebraska ",
            "qdmr": "return states ;return #1 that border nebraska ;return rivers in #2 ;return #3 that is longest",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info where border_info.state_name = 'nebraska') and river.length = (select max(river.length) from river where river.traverse in (select border_info.border from border_info where border_info.state_name = 'nebraska'));",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 that border nebraska; return rivers in #2; return rivers in states that is longest of #3; return #3 where #4 is highest",
                "question": "what is the longest river in the states that border nebraska ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "nebraska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border nebraska",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.length FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers rivers in states that is longest",
                            "rivers in states that is longest"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nebraska' ) ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_137",
            "db_id": "geo",
            "question": "what is the longest river in the state with the most major cities ",
            "qdmr": "return states ;return major cities of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers of #4 ;return #5 that is longest",
            "sql_gold": "select river.river_name from river where river.traverse = (select city.state_name from city where city.population > 150000 group by city.state_name order by count(city.city_name) desc limit 1) order by river.length desc limit 1;",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return major cities of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers of #4 ;return #5 that is longest",
                "question": "what is the longest river in the state with the most major cities ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that is longest",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_138",
            "db_id": "geo",
            "question": "what is the longest river that flows through a state that borders indiana ",
            "qdmr": "return states ;return #1 that border indiana ;return rivers that flow through #2 ;return longest of #3",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info where border_info.state_name = 'indiana') and river.length = (select max(river.length) from river where river.traverse in (select border_info.border from border_info where border_info.state_name = 'indiana'));",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mississippi"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 that border indiana; return rivers that flow through #2; return longest of rivers that flow through states of #3; return #3 where #4 is highest",
                "question": "what is the longest river that flows through a state that borders indiana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "indiana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border indiana",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers that flow through",
                            "rivers that flow through"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.length FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that flow through longest of rivers that flow through states",
                            "longest of rivers that flow through states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers that flow through",
                            "rivers that flow through"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND river.river_name IN ( SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ) AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana' ) ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_139",
            "db_id": "geo",
            "question": "what is the lowest point in arkansas ",
            "qdmr": "return points ;return #1 in arkansas ;return elevation of #2 ;return #2 where #3 is lowest",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'arkansas';",
            "denotation_gold": [
                [
                    "ouachita river"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' ) AND highlow.state_name = 'arkansas' ORDER BY highlow.highest_elevation ASC LIMIT 1",
            "denotation_ground": [
                [
                    "ouachita river"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return points ;return #1 in arkansas ;return elevation of #2 ;return #2 where #3 is lowest",
                "question": "what is the lowest point in arkansas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points in arkansas",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' ) AND highlow.state_name = 'arkansas' ORDER BY highlow.highest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' )"
                            ],
                            [
                                "highlow.state_name",
                                "=",
                                "arkansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points in arkansas",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'arkansas' ) AND highlow.state_name = 'arkansas' ORDER BY highlow.highest_elevation ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_14",
            "db_id": "geo",
            "question": "how many capitals does rhode island have ",
            "qdmr": "return rhode island ;return capitals of #1 ;return number of #2",
            "sql_gold": "select count(state.capital) from state where state.state_name = 'rhode island';",
            "denotation_gold": [
                [
                    1
                ]
            ],
            "sql_ground": "SELECT COUNT(state.capital) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
            "denotation_ground": [
                [
                    1
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rhode island ;return capitals of #1 ;return number of #2",
                "question": "how many capitals does rhode island have ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'rhode island'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "rhode island"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.capital) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.capital)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.capital) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
            }
        },
        {
            "example_id": "GEO_test_140",
            "db_id": "geo",
            "question": "what is the lowest point in massachusetts ",
            "qdmr": "return massachusetts ;return points of #1 ;return elevation of #2 ;return #2 where #3 is lowest",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'massachusetts';",
            "denotation_gold": [
                [
                    "atlantic ocean"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ORDER BY highlow.highest_elevation ASC LIMIT 1",
            "denotation_ground": [
                [
                    "atlantic ocean"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return massachusetts ;return points of #1 ;return elevation of #2 ;return #2 where #3 is lowest",
                "question": "what is the lowest point in massachusetts ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "massachusetts"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ORDER BY highlow.highest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'massachusetts' ) ORDER BY highlow.highest_elevation ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_141",
            "db_id": "geo",
            "question": "what is the lowest point in mississippi ",
            "qdmr": "return mississippi ;return points in #1 ;return #2 that is the lowest",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'mississippi';",
            "denotation_gold": [
                [
                    "gulf of mexico"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )",
            "denotation_ground": [
                [
                    "gulf of mexico"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return mississippi ;return points in #1 ;return #2 that is the lowest",
                "question": "what is the lowest point in mississippi ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the lowest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_142",
            "db_id": "geo",
            "question": "what is the lowest point in nebraska in meters ",
            "qdmr": "return nebraska ;return points in #1 ;return elevation of #2 ;return #2 where #3 is lowest in meters",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'nebraska';",
            "denotation_gold": [
                [
                    "southeast corner"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ORDER BY highlow.highest_elevation ASC LIMIT 1",
            "denotation_ground": [
                [
                    "southeast corner"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return nebraska ;return points in #1 ;return elevation of #2 ;return #2 where #3 is lowest in meters",
                "question": "what is the lowest point in nebraska in meters ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "nebraska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ORDER BY highlow.highest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'nebraska' ) ORDER BY highlow.highest_elevation ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_143",
            "db_id": "geo",
            "question": "what is the lowest point in the state of california ",
            "qdmr": "return points ;return #1 in california ;return elevation of #2 ;return #2 where #3 is lowest",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'california';",
            "denotation_gold": [
                [
                    "death valley"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' ) AND highlow.state_name = 'california' ORDER BY highlow.highest_elevation ASC LIMIT 1",
            "denotation_ground": [
                [
                    "death valley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return points ;return #1 in california ;return elevation of #2 ;return #2 where #3 is lowest",
                "question": "what is the lowest point in the state of california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points in california",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' ) AND highlow.state_name = 'california' ORDER BY highlow.highest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.lowest_point",
                                "IN",
                                "( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' )"
                            ],
                            [
                                "highlow.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points in california",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.lowest_point IN ( SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name = 'california' ) AND highlow.state_name = 'california' ORDER BY highlow.highest_elevation ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_144",
            "db_id": "geo",
            "question": "what is the lowest point in usa ",
            "qdmr": "return usa ;return points in #1 ;return lowest #2",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.lowest_elevation = (select min (highlow.lowest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "new orleans"
                ]
            ],
            "sql_ground": "SELECT MIN(highlow.highest_point) FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
            "denotation_ground": [
                [
                    "boundary peak"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return usa ;return points in #1 ;return lowest #2",
                "question": "what is the lowest point in usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.country_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa",
                            "usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.state_name FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "usa points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT MIN(highlow.state_name) FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "aggregate",
                        "SELECT": [
                            "MIN(highlow.state_name)"
                        ],
                        "FROM": [
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": "min",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MIN(highlow.state_name) FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )"
            }
        },
        {
            "example_id": "GEO_test_145",
            "db_id": "geo",
            "question": "what is the lowest point of all states through which the colorado river runs through ",
            "qdmr": "return states ;return #1 that the colorado river runs through ;return lowest point of all #2",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name in (select river.traverse from river where river.river_name = 'colorado') order by highlow.lowest_elevation limit 1;",
            "denotation_gold": [
                [
                    "death valley"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM state, highlow, river WHERE state.state_name = highlow.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'colorado' )",
            "denotation_ground": [
                [
                    "colorado river"
                ],
                [
                    "colorado river"
                ],
                [
                    "death valley"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "arkansas river"
                ],
                [
                    "colorado river"
                ],
                [
                    "beaver dam creek"
                ],
                [
                    "beaver dam creek"
                ],
                [
                    "beaver dam creek"
                ],
                [
                    "beaver dam creek"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that the colorado river runs through ;return lowest point of all #2",
                "question": "what is the lowest point of all states through which the colorado river runs through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'colorado'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the colorado river runs through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states lowest point of all",
                            "lowest point of all"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_146",
            "db_id": "geo",
            "question": "what is the maximum elevation of san francisco ",
            "qdmr": "return elevations ;return #1 of san francisco ;return the highest #2",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.highest_point = 'san francisco';",
            "denotation_gold": [],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' ) AND highlow.highest_point = 'san francisco' ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return elevations; return #1 of san francisco; return the highest elevations of #2; return #2 where #3 is highest",
                "question": "what is the maximum elevation of san francisco ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "=",
                                "san francisco"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations of san francisco",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations highest elevations",
                            "highest elevations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' ) AND highlow.highest_point = 'san francisco' ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' )"
                            ],
                            [
                                "highlow.highest_point",
                                "=",
                                "san francisco"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "elevations of san francisco",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_point = 'san francisco' ) AND highlow.highest_point = 'san francisco' ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_147",
            "db_id": "geo",
            "question": "what is the most dense state in the usa ",
            "qdmr": "return states in the usa ;return the most dense #1",
            "sql_gold": "select state.state_name from state where state.density = (select max(state.density) from state);",
            "denotation_gold": [
                [
                    "new jersey"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state ORDER BY state.density DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new jersey"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states in the usa; return the most dense states in the usa; return #1 where #2 is highest",
                "question": "what is the most dense state in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states in the usa",
                            "states in the usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "the most dense states in the usa",
                            "the most dense states in the usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state ORDER BY state.density DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states in the usa",
                            "states in the usa"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state ORDER BY state.density DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_148",
            "db_id": "geo",
            "question": "what is the most populous city ",
            "qdmr": "return cities ;return most populous #1",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return most populous cities; return #1 where #2 is highest",
                "question": "what is the most populous city ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "most populous cities",
                            "most populous cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_149",
            "db_id": "geo",
            "question": "what is the most populous state ",
            "qdmr": "return states ;return most populous #1",
            "sql_gold": "select state.state_name from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name ORDER BY city.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return most populous states; return #1 where #2 is lowest",
                "question": "what is the most populous state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "most populous states",
                            "most populous states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name ORDER BY city.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name ORDER BY city.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_15",
            "db_id": "geo",
            "question": "how many cities are there in the united states ",
            "qdmr": "return cities ;return #1 in united states ;return number of #2",
            "sql_gold": "select count(city.city_name) from city;",
            "denotation_gold": [
                [
                    386
                ]
            ],
            "sql_ground": "SELECT COUNT(city.city_name) FROM city",
            "denotation_ground": [
                [
                    386
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in united states ;return number of #2",
                "question": "how many cities are there in the united states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in united states",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM city",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(city.city_name) FROM city"
            }
        },
        {
            "example_id": "GEO_test_150",
            "db_id": "geo",
            "question": "what is the most populous state through which the mississippi runs ",
            "qdmr": "return states ;return #1 through which the mississippi runs ;return most populous #2",
            "sql_gold": "select state.state_name from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi') and state.population = (select max(state.population) from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi'));",
            "denotation_gold": [
                [
                    "illinois"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, lake, river WHERE lake.state_name = state.state_name AND state.state_name = river.traverse AND river.river_name = 'mississippi' ORDER BY lake.state_name ASC LIMIT 1",
            "denotation_ground": [
                [
                    "illinois"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 through which the mississippi runs; return most populous states; return #2 where #3 is lowest",
                "question": "what is the most populous state through which the mississippi runs ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states through which the mississippi runs",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT lake.state_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.state_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "most populous states",
                            "most populous states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, lake, river WHERE lake.state_name = state.state_name AND state.state_name = river.traverse AND river.river_name = 'mississippi' ORDER BY lake.state_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "lake",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "state.state_name"
                            ],
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "lake.state_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states through which the mississippi runs",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, lake, river WHERE lake.state_name = state.state_name AND state.state_name = river.traverse AND river.river_name = 'mississippi' ORDER BY lake.state_name ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_151",
            "db_id": "geo",
            "question": "what is the population density of maine ",
            "qdmr": "return maine ;return population density of #1",
            "sql_gold": "select state.density from state where state.state_name = 'maine';",
            "denotation_gold": [
                [
                    33.81932962573275
                ]
            ],
            "sql_ground": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maine' )",
            "denotation_ground": [
                [
                    33.81932962573275
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return maine ;return population density of #1",
                "question": "what is the population density of maine ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'maine'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "maine"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maine' )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'maine' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maine' )"
            }
        },
        {
            "example_id": "GEO_test_152",
            "db_id": "geo",
            "question": "what is the population density of the largest state ",
            "qdmr": "return states ;return population of #1 ;return the highest of #2 ;return #1 where #2 is equal to #3 ;return the population density of #4",
            "sql_gold": "select state.density from state where state.area = (select max(state.area) from state);",
            "denotation_gold": [
                [
                    0.6798646362098139
                ]
            ],
            "sql_ground": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.area = ( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) )",
            "denotation_ground": [
                [
                    0.6798646362098139
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population of #1 ;return the highest of #2 ;return #1 where #2 is equal to #3 ;return the population density of #4",
                "question": "what is the population density of the largest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(state.area)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.area = ( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "state.area",
                                "=",
                                "( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.area = ( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.area = ( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.area = ( SELECT MAX(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) )"
            }
        },
        {
            "example_id": "GEO_test_153",
            "db_id": "geo",
            "question": "what is the population of alaska ",
            "qdmr": "return alaska ;return population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'alaska';",
            "denotation_gold": [
                [
                    401800
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )",
            "denotation_ground": [
                [
                    401800
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return alaska ;return population of #1",
                "question": "what is the population of alaska ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'alaska'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "alaska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )"
            }
        },
        {
            "example_id": "GEO_test_154",
            "db_id": "geo",
            "question": "what is the population of boulder ",
            "qdmr": "return boulder ;return population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'boulder';",
            "denotation_gold": [
                [
                    76685
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )",
            "denotation_ground": [
                [
                    76685
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return boulder ;return population of #1",
                "question": "what is the population of boulder ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'boulder'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "boulder"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )"
            }
        },
        {
            "example_id": "GEO_test_155",
            "db_id": "geo",
            "question": "what is the population of erie pennsylvania ",
            "qdmr": "return erie pennsylvania ;return the population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'erie' and city.state_name = 'pennsylvania';",
            "denotation_gold": [
                [
                    119123
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'erie' AND city.state_name = 'pennsylvania' )",
            "denotation_ground": [
                [
                    119123
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return erie pennsylvania ;return the population of #1",
                "question": "what is the population of erie pennsylvania ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'erie' AND city.state_name = 'pennsylvania'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "erie"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'erie' AND city.state_name = 'pennsylvania' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'erie' AND city.state_name = 'pennsylvania' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'erie' AND city.state_name = 'pennsylvania' )"
            }
        },
        {
            "example_id": "GEO_test_156",
            "db_id": "geo",
            "question": "what is the population of hawaii ",
            "qdmr": "return hawaii ;return the population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'hawaii';",
            "denotation_gold": [
                [
                    964000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'hawaii' )",
            "denotation_ground": [
                [
                    964000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return hawaii ;return the population of #1",
                "question": "what is the population of hawaii ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'hawaii'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "hawaii"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'hawaii' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'hawaii' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'hawaii' )"
            }
        },
        {
            "example_id": "GEO_test_157",
            "db_id": "geo",
            "question": "what is the population of houston ",
            "qdmr": "return houston ;return the population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'houston';",
            "denotation_gold": [
                [
                    1595138
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'houston' )",
            "denotation_ground": [
                [
                    1595138
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return houston ;return the population of #1",
                "question": "what is the population of houston ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'houston'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "houston"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'houston' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'houston' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'houston' )"
            }
        },
        {
            "example_id": "GEO_test_158",
            "db_id": "geo",
            "question": "what is the population of maryland ",
            "qdmr": "return maryland ;return population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'maryland';",
            "denotation_gold": [
                [
                    4217000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maryland' )",
            "denotation_ground": [
                [
                    4217000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return maryland ;return population of #1",
                "question": "what is the population of maryland ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'maryland'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "maryland"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maryland' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'maryland' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'maryland' )"
            }
        },
        {
            "example_id": "GEO_test_159",
            "db_id": "geo",
            "question": "what is the population of new mexico ",
            "qdmr": "return new mexico ;return the population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'new mexico';",
            "denotation_gold": [
                [
                    1303000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )",
            "denotation_ground": [
                [
                    1303000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new mexico ;return the population of #1",
                "question": "what is the population of new mexico ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new mexico'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new mexico"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new mexico' )"
            }
        },
        {
            "example_id": "GEO_test_16",
            "db_id": "geo",
            "question": "how many citizens does the biggest city have in the usa ",
            "qdmr": "return cities ;return #1 in usa ;return biggest of #2 ;return citizens of #3 ;return number of #4",
            "sql_gold": "select city.population from city where city.population = (select max(city.population) from city);",
            "denotation_gold": [
                [
                    7071639
                ]
            ],
            "sql_ground": "SELECT COUNT(state.country_name) FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )",
            "denotation_ground": [
                [
                    44
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in usa ;return biggest of #2 ;return citizens of #3 ;return number of #4",
                "question": "how many citizens does the biggest city have in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in usa",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities biggest",
                            "biggest"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain, city WHERE city.state_name = mountain.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )",
                        "op": "project",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "biggest citizens",
                            "citizens"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT COUNT(mountain.mountain_name) FROM mountain, city WHERE city.state_name = mountain.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(mountain.mountain_name)"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(mountain.mountain_name) FROM mountain, city WHERE city.state_name = mountain.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) )"
            }
        },
        {
            "example_id": "GEO_test_160",
            "db_id": "geo",
            "question": "what is the population of new york city ",
            "qdmr": "return new york city ;return the population of new york city",
            "sql_gold": "select city.population from city where city.city_name = 'new york';",
            "denotation_gold": [
                [
                    7071639
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name = 'new york'",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return new york city ;return the population of new york city",
                "question": "what is the population of new york city ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name = 'new york'"
            }
        },
        {
            "example_id": "GEO_test_161",
            "db_id": "geo",
            "question": "what is the population of san antonio ",
            "qdmr": "return san antonio ;return the population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'san antonio';",
            "denotation_gold": [
                [
                    785880
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san antonio' )",
            "denotation_ground": [
                [
                    785880
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return san antonio ;return the population of #1",
                "question": "what is the population of san antonio ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'san antonio'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "san antonio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san antonio' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'san antonio' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'san antonio' )"
            }
        },
        {
            "example_id": "GEO_test_162",
            "db_id": "geo",
            "question": "what is the population of tempe arizona ",
            "qdmr": "return tempe arizona ;return population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'tempe' and city.state_name = 'arizona';",
            "denotation_gold": [
                [
                    106919
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tempe' AND city.state_name = 'arizona' )",
            "denotation_ground": [
                [
                    106919
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return tempe arizona ;return population of #1",
                "question": "what is the population of tempe arizona ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'tempe' AND city.state_name = 'arizona'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "tempe"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "arizona"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tempe' AND city.state_name = 'arizona' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'tempe' AND city.state_name = 'arizona' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tempe' AND city.state_name = 'arizona' )"
            }
        },
        {
            "example_id": "GEO_test_163",
            "db_id": "geo",
            "question": "what is the population of the largest city in the state with the largest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is largest ;return cities in #3 ;return population of #4",
            "sql_gold": "select city.population from city where city.population = (select max(city.population) from city where city.state_name in (select state.state_name from state where state.area = (select max(state.area) from state))) and city.state_name in (select state.state_name from state where state.area = (select max(state.area) from state));",
            "denotation_gold": [
                [
                    174431
                ]
            ],
            "sql_ground": "SELECT city.population FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    174431
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is largest ;return cities in #3 ;return population of #4",
                "question": "what is the population of the largest city in the state with the largest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT city.population FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT city.population FROM state, city WHERE state.state_name = city.state_name AND city.city_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_test_164",
            "db_id": "geo",
            "question": "what is the population of the smallest state ",
            "qdmr": "return states ;return population of #1 ;return smallest #2",
            "sql_gold": "select state.population from state where state.area = (select min (state.area) from state);",
            "denotation_gold": [
                [
                    638000
                ]
            ],
            "sql_ground": "SELECT MIN(state.population) FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city )",
            "denotation_ground": [
                [
                    638000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population of #1 ;return smallest #2",
                "question": "what is the population of the smallest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.city_name",
                                "state.capital"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT MIN(state.population) FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "aggregate",
                        "SELECT": [
                            "MIN(state.population)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.city_name",
                                "state.capital"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": "min",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT MIN(state.population) FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city )"
            }
        },
        {
            "example_id": "GEO_test_165",
            "db_id": "geo",
            "question": "what is the population of the state that borders the most states ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return population of #4",
            "sql_gold": "select state.population from state where state.state_name in (select border_info.border from border_info group by border_info.border having count(1) = (select max(cnt1) from (select border_info.border, count(1) as cnt1 from border_info group by border_info.border) tmp));",
            "denotation_gold": [
                [
                    4916000
                ],
                [
                    4591000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    469557
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return population of #4",
                "question": "what is the population of the state that borders the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT lake.area FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "lake.area"
                        ],
                        "FROM": [
                            "state",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "lake.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT lake.area FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_166",
            "db_id": "geo",
            "question": "what is the population of the state with the highest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the highest ;return the population of #3",
            "sql_gold": "select state.population from state where state.density = (select max(state.density) from state);",
            "denotation_gold": [
                [
                    7365000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    7365000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the highest ;return the population of #3",
                "question": "what is the population of the state with the highest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_167",
            "db_id": "geo",
            "question": "what is the population of tucson ",
            "qdmr": "return tucson ;return the population of #1",
            "sql_gold": "select city.population from city where city.city_name = 'tucson';",
            "denotation_gold": [
                [
                    330537
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tucson' )",
            "denotation_ground": [
                [
                    330537
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return tucson ;return the population of #1",
                "question": "what is the population of tucson ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'tucson'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "tucson"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tucson' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'tucson' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'tucson' )"
            }
        },
        {
            "example_id": "GEO_test_168",
            "db_id": "geo",
            "question": "what is the population of utah ",
            "qdmr": "return utah ;return the population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'utah';",
            "denotation_gold": [
                [
                    1461000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'utah' )",
            "denotation_ground": [
                [
                    1461000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return utah ;return the population of #1",
                "question": "what is the population of utah ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'utah'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "utah"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'utah' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'utah' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'utah' )"
            }
        },
        {
            "example_id": "GEO_test_169",
            "db_id": "geo",
            "question": "what is the population of washington ",
            "qdmr": "return washington ;return population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'washington';",
            "denotation_gold": [
                [
                    4113200
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'washington' )",
            "denotation_ground": [
                [
                    4113200
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return washington ;return population of #1",
                "question": "what is the population of washington ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'washington'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "washington"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'washington' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'washington' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'washington' )"
            }
        },
        {
            "example_id": "GEO_test_17",
            "db_id": "geo",
            "question": "how many colorado rivers are there ",
            "qdmr": "return colorado rivers ;return number of #1",
            "sql_gold": "select count(river.river_name) from river where river.river_name = 'colorado';",
            "denotation_gold": [
                [
                    5
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM river WHERE river.river_name = 'colorado'",
            "denotation_ground": [
                [
                    5
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado rivers ;return number of #1",
                "question": "how many colorado rivers are there ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT COUNT(river.river_name) FROM river WHERE river.river_name = 'colorado'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM river WHERE river.river_name = 'colorado'"
            }
        },
        {
            "example_id": "GEO_test_170",
            "db_id": "geo",
            "question": "what is the smallest city in the usa ",
            "qdmr": "return cities ;return #1 in usa ;return smallest of #2",
            "sql_gold": "select city.city_name from city where city.population = (select min (city.population) from city);",
            "denotation_gold": [
                [
                    "scotts valley"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "scotts valley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in usa; return smallest of cities of #2; return #2 where #3 is lowest",
                "question": "what is the smallest city in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in usa",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities smallest of cities",
                            "smallest of cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in usa",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_171",
            "db_id": "geo",
            "question": "what is the smallest city in the us ",
            "qdmr": "return cities ;return #1 in the us ;return smallest of #2",
            "sql_gold": "select city.city_name from city where city.population = (select min (city.population) from city);",
            "denotation_gold": [
                [
                    "scotts valley"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name ) ORDER BY city.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "scotts valley"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in the us; return smallest of cities of #2; return #2 where #3 is lowest",
                "question": "what is the smallest city in the us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in the us",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities smallest of cities",
                            "smallest of cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name ) ORDER BY city.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in the us",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name ) ORDER BY city.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_172",
            "db_id": "geo",
            "question": "what is the smallest state that borders the most states ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return smallest #4",
            "sql_gold": "select state.state_name from state where state.area = ( select min (state.area) from state where state.state_name in  (  select tmp1.state_name from   (select count(distinct border_info.border) as cnt, border_info.state_name from border_info group by border_info.state_name) tmp1   where tmp1.cnt =   (select max(states) from     (select count(distinct border_info.border) as states, border_info.state_name from border_info group by border_info.state_name) tmp)   ) );",
            "denotation_gold": [
                [
                    "tennessee"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "tennessee"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return states that border #1; return number of #2 for each #1; return #1 where #3 is highest; return smallest states of #4; return #4 where #5 is lowest",
                "question": "what is the smallest state that borders the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(border_info.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(border_info.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.area FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states smallest states",
                            "smallest states"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(border_info.state_name) DESC LIMIT 1 ) ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_173",
            "db_id": "geo",
            "question": "what is the smallest state that borders wyoming ",
            "qdmr": "return states ;return #1 that border wyoming ;return smallest of #2",
            "sql_gold": "select state.state_name from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'wyoming') and state.area = (select min (state.area) from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'wyoming' ));",
            "denotation_gold": [
                [
                    "south dakota"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' ) AND border_info.state_name = 'wyoming' ORDER BY state.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "south dakota"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 that border wyoming; return smallest of states of #2; return #2 where #3 is lowest",
                "question": "what is the smallest state that borders wyoming ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "wyoming"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border wyoming",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states smallest of states",
                            "smallest of states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' ) AND border_info.state_name = 'wyoming' ORDER BY state.population ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' )"
                            ],
                            [
                                "border_info.state_name",
                                "=",
                                "wyoming"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border wyoming",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'wyoming' ) AND border_info.state_name = 'wyoming' ORDER BY state.population ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_174",
            "db_id": "geo",
            "question": "what is the smallest state that the mississippi river runs through ",
            "qdmr": "return states ;return #1 that the mississippi river runs through ;return smallest #2",
            "sql_gold": "select state.state_name from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi') and state.area = (select min (state.area) from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi'));",
            "denotation_gold": [
                [
                    "tennessee"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' ) AND river.river_name = 'mississippi' ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "tennessee"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 that the mississippi river runs through; return smallest states of #2; return #2 where #3 is lowest",
                "question": "what is the smallest state that the mississippi river runs through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the mississippi river runs through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.area FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states smallest states",
                            "smallest states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' ) AND river.river_name = 'mississippi' ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
                            ],
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the mississippi river runs through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' ) AND river.river_name = 'mississippi' ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_175",
            "db_id": "geo",
            "question": "what is the state with the largest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is largest",
            "sql_gold": "select state.state_name from state where state.area = (select max(state.area) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is largest",
                "question": "what is the state with the largest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_176",
            "db_id": "geo",
            "question": "what is the state with the smallest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is smallest",
            "sql_gold": "select state.state_name from state where state.area = (select min (state.area) from state);",
            "denotation_gold": [
                [
                    "district of columbia"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "district of columbia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is smallest",
                "question": "what is the state with the smallest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_177",
            "db_id": "geo",
            "question": "what is the total length of all the rivers in the usa ",
            "qdmr": "return rivers ;return #1 in usa ;return lengths of #2 ;return sum of #3",
            "sql_gold": "select sum(river.length) from river;",
            "denotation_gold": [
                [
                    212215
                ]
            ],
            "sql_ground": "SELECT SUM(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
            "denotation_ground": [
                [
                    212215
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in usa ;return lengths of #2 ;return sum of #3",
                "question": "what is the total length of all the rivers in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers lengths",
                            "lengths"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT SUM(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(river.length)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(river.length) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )"
            }
        },
        {
            "example_id": "GEO_test_178",
            "db_id": "geo",
            "question": "what length is the mississippi ",
            "qdmr": "return lengths of #1 ;return #2 of the mississippi",
            "sql_gold": "select river.length from river where river.river_name = 'mississippi';",
            "denotation_gold": [
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ],
                [
                    3778
                ]
            ],
            "sql_ground": "ERROR",
            "denotation_ground": "ERROR",
            "correct_denotation": false,
            "grounding": null
        },
        {
            "example_id": "GEO_test_179",
            "db_id": "geo",
            "question": "what major cities are located in pennsylvania ",
            "qdmr": "return cities ;return #1 located in pennsylvania ;return #2 that are major",
            "sql_gold": "select city.city_name from city where city.state_name = 'pennsylvania' and city.population > 150000;",
            "denotation_gold": [
                [
                    "philadelphia"
                ],
                [
                    "pittsburgh"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'pennsylvania'",
            "denotation_ground": [
                [
                    "philadelphia"
                ],
                [
                    "pittsburgh"
                ],
                [
                    "erie"
                ],
                [
                    "allentown"
                ],
                [
                    "scranton"
                ],
                [
                    "upper darby"
                ],
                [
                    "reading"
                ],
                [
                    "bethlehem"
                ],
                [
                    "lower merion"
                ],
                [
                    "abingdon"
                ],
                [
                    "bristol township"
                ],
                [
                    "penn hills"
                ],
                [
                    "altoona"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 located in pennsylvania ;return #2 that are major",
                "question": "what major cities are located in pennsylvania ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'pennsylvania'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities located in pennsylvania",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM border_info, city WHERE city.state_name = border_info.state_name AND city.state_name = 'pennsylvania'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "border_info",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are major",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM border_info, city WHERE city.state_name = border_info.state_name AND city.state_name = 'pennsylvania'"
            }
        },
        {
            "example_id": "GEO_test_18",
            "db_id": "geo",
            "question": "how many people lived in austin ",
            "qdmr": "return people ;return #1 who lived in austin ;return number of #2",
            "sql_gold": "select city.population from city where city.city_name = 'austin';",
            "denotation_gold": [
                [
                    345496
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name = 'austin'",
            "denotation_ground": [
                [
                    345496
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 who lived in austin ;return #1 who lived in austin",
                "question": "how many people lived in austin ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'austin'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who lived in austin",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'austin'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who lived in austin",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name = 'austin'"
            }
        },
        {
            "example_id": "GEO_test_180",
            "db_id": "geo",
            "question": "what river flows through the most states ",
            "qdmr": "return rivers ;return states that #1 flows through ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.river_name from river group by(river.river_name) order by count(distinct river.traverse) desc limit 1;",
            "denotation_gold": [
                [
                    "mississippi"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mississippi"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states that #1 flows through ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "what river flows through the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that  flows through",
                            "states that  flows through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(highlow.state_name) FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(highlow.state_name)"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(highlow.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(highlow.state_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_181",
            "db_id": "geo",
            "question": "what river runs through the state with the most cities ? ",
            "qdmr": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return river that runs through #4",
            "sql_gold": "select river.river_name from river where river.traverse in (select tmp1.state_name from (select city.state_name, count(1) as cnt1 from city group by city.state_name) tmp1 where cnt1 = (select max(cnt) from (select count(1) as cnt from city group by city.state_name) tmp))",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return river that runs through #4",
                "question": "what river runs through the state with the most cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states river that runs through",
                            "river that runs through"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_182",
            "db_id": "geo",
            "question": "what rivers are in states that border texas ",
            "qdmr": "return states ;return #1 that border texas ;return rivers in #2",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info where border_info.state_name = 'texas');",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "gila"
                ],
                [
                    "neosho"
                ],
                [
                    "ouachita"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "pecos"
                ],
                [
                    "st. francis"
                ],
                [
                    "washita"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'texas' )",
            "denotation_ground": [
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border texas ;return rivers in #2",
                "question": "what rivers are in states that border texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border texas",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, border_info, river WHERE state.state_name = river.traverse AND state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_183",
            "db_id": "geo",
            "question": "what rivers are in texas ",
            "qdmr": "return rivers ;return #1 in texas",
            "sql_gold": "select river.river_name from river where river.traverse = 'texas';",
            "denotation_gold": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
            "denotation_ground": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in texas",
                "question": "what rivers are in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_184",
            "db_id": "geo",
            "question": "what rivers are there in texas ",
            "qdmr": "return rivers ;return #1 in texas",
            "sql_gold": "select river.river_name from river where river.traverse = 'texas';",
            "denotation_gold": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
            "denotation_ground": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in texas",
                "question": "what rivers are there in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_185",
            "db_id": "geo",
            "question": "what rivers run through new york ",
            "qdmr": "return rivers ;return #1 that run through new york",
            "sql_gold": "select river.river_name from river where river.traverse = 'new york';",
            "denotation_gold": [
                [
                    "delaware"
                ],
                [
                    "allegheny"
                ],
                [
                    "hudson"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
            "denotation_ground": [
                [
                    "delaware"
                ],
                [
                    "allegheny"
                ],
                [
                    "hudson"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that run through new york",
                "question": "what rivers run through new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that run through new york",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'"
            }
        },
        {
            "example_id": "GEO_test_186",
            "db_id": "geo",
            "question": "what rivers traverses the state which borders the most states ? ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers that traverse #4",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info group by border_info.border having count(1) = (select max(cnt1) from (select border_info.border, count(1) as cnt1 from border_info group by border_info.border) tmp) );",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "cumberland"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ]
            ],
            "sql_ground": "SELECT river.traverse FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers that traverse #4",
                "question": "what rivers traverses the state which borders the most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT lake.country_name FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "state",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "lake.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers that traverse",
                            "rivers that traverse"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT lake.country_name FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_187",
            "db_id": "geo",
            "question": "what river traverses the state which borders the most states ? ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return river that traverses #4",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info group by border_info.border having count(1) = (select max(cnt1) from (select border_info.border, count(1) as cnt1 from border_info group by border_info.border) tmp) );",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "cumberland"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ]
            ],
            "sql_ground": "SELECT river.traverse FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return river that traverses #4",
                "question": "what river traverses the state which borders the most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT lake.country_name FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "state",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "lake.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states river that traverses",
                            "river that traverses"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT lake.country_name FROM state, lake WHERE state.state_name = lake.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_188",
            "db_id": "geo",
            "question": "what state bordering nevada has the largest population ",
            "qdmr": "return states ;return #1 bordering nevada ;return #2 with the largest population",
            "sql_gold": "select state.state_name from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'nevada') and state.population = (select max(state.population) from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'nevada' ));",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, mountain, border_info WHERE state.state_name = mountain.state_name AND state.state_name = border_info.border AND border_info.state_name = 'nevada'",
            "denotation_ground": [
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 bordering nevada ;return #2 with the largest population",
                "question": "what state bordering nevada has the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'nevada'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "nevada"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering nevada",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, mountain, border_info WHERE state.state_name = mountain.state_name AND state.state_name = border_info.border AND border_info.state_name = 'nevada'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "mountain",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "nevada"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states with the largest population",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, mountain, border_info WHERE state.state_name = mountain.state_name AND state.state_name = border_info.border AND border_info.state_name = 'nevada'"
            }
        },
        {
            "example_id": "GEO_test_189",
            "db_id": "geo",
            "question": "what state borders new york ",
            "qdmr": "return new york ;return border state of #1",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'new york';",
            "denotation_gold": [
                [
                    "vermont"
                ],
                [
                    "massachusetts"
                ],
                [
                    "connecticut"
                ],
                [
                    "new jersey"
                ],
                [
                    "pennsylvania"
                ]
            ],
            "sql_ground": "SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'new york' )",
            "denotation_ground": [
                [
                    "vermont"
                ],
                [
                    "massachusetts"
                ],
                [
                    "connecticut"
                ],
                [
                    "new jersey"
                ],
                [
                    "pennsylvania"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new york ;return border state of #1",
                "question": "what state borders new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info",
                            "border info"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'new york' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.border"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'new york' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info border state",
                            "border state"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'new york' )"
            }
        },
        {
            "example_id": "GEO_test_19",
            "db_id": "geo",
            "question": "how many people live in detroit ",
            "qdmr": "return people ;return #1 that live in detroit ;return number of #2",
            "sql_gold": "select city.population from city where city.city_name = 'detroit';",
            "denotation_gold": [
                [
                    1203339
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name = 'detroit'",
            "denotation_ground": [
                [
                    1203339
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 that live in detroit ;return #1 that live in detroit",
                "question": "how many people live in detroit ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'detroit'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "detroit"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people that live in detroit",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'detroit'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "detroit"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people that live in detroit",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name = 'detroit'"
            }
        },
        {
            "example_id": "GEO_test_190",
            "db_id": "geo",
            "question": "what state borders the most states ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select tmp1.state_name from   (select count(distinct border_info.border) as cnt, border_info.state_name from border_info group by border_info.state_name) tmp1   where tmp1.cnt =   (select max(states) from     (select count(distinct border_info.border) as states, border_info.state_name from border_info group by border_info.state_name) tmp)",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "what state borders the most states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_191",
            "db_id": "geo",
            "question": "what state contains the highest point of those the colorado river traverses ",
            "qdmr": "return colorado river ;return states traverse of #1 ;return elevation of #2 ;return #2 where #3 is highest",
            "sql_gold": "select highlow.state_name from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow where highlow.state_name in (select river.traverse from river where river.river_name = 'colorado'));",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT river.traverse FROM highlow, river WHERE river.traverse = highlow.state_name AND river.traverse IN ( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ) AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado river ;return states traverse of #1 ;return elevation of #2 ;return #2 where #3 is highest",
                "question": "what state contains the highest point of those the colorado river traverses ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "river.traverse"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states traverse",
                            "states traverse"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, river WHERE river.traverse = highlow.state_name AND river.traverse IN ( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.traverse",
                                "IN",
                                "( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states traverse elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.traverse FROM highlow, river WHERE river.traverse = highlow.state_name AND river.traverse IN ( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ) AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.traverse"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.traverse",
                                "IN",
                                "( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) )"
                            ],
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states traverse",
                            "states traverse"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.traverse FROM highlow, river WHERE river.traverse = highlow.state_name AND river.traverse IN ( SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ) AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_192",
            "db_id": "geo",
            "question": "what state has the largest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is largest",
            "sql_gold": "select state.state_name from state where state.area = (select max(state.area) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is largest",
                "question": "what state has the largest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_193",
            "db_id": "geo",
            "question": "what state has the largest capital ",
            "qdmr": "return states ;return capitals of #1 ;return #1 where #2 is largest",
            "sql_gold": "select city.state_name from city where city.population = (select max(city.population) from city,state where city.city_name=state.capital);",
            "denotation_gold": [
                [
                    "arizona"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1",
            "denotation_ground": [
                [
                    "district of columbia"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return capitals of #1 ;return #1 where #2 is largest",
                "question": "what state has the largest capital ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY city.city_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY city.city_name DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_194",
            "db_id": "geo",
            "question": "what state has the longest river ",
            "qdmr": "return rivers ;return how long are #1 ;return #1 where #2 is the highest ;return state of #3",
            "sql_gold": "select distinct river.traverse from river where river.length = (select max(distinct river.length) from river);",
            "denotation_gold": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return how long are #1 ;return #1 where #2 is the highest ;return state of #3",
                "question": "what state has the longest river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long are",
                            "how long are"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_195",
            "db_id": "geo",
            "question": "what state has the lowest population density ",
            "qdmr": "return states ;return population density of #1 ;return #1 where #2 is lowest",
            "sql_gold": "select state.state_name from state where state.density = (select min (state.density) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population density of #1 ;return #1 where #2 is lowest",
                "question": "what state has the lowest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_196",
            "db_id": "geo",
            "question": "what state has the most major cities ? ",
            "qdmr": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select city.state_name from city where city.population  >  150000 group by city.state_name order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "what state has the most major cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_197",
            "db_id": "geo",
            "question": "what state has the most rivers ? ",
            "qdmr": "return states ;return rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.traverse from river group by river.traverse order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "what state has the most rivers ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.river_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_198",
            "db_id": "geo",
            "question": "what state has the smallest urban population ? ",
            "qdmr": "return states ;return urban populations of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "select city.state_name from city group by city.state_name order by sum(city.population) limit 1;",
            "denotation_gold": [
                [
                    "wyoming"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY city.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return urban populations of #1 ;return #1 where #2 is the lowest",
                "question": "what state has the smallest urban population ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states urban populations",
                            "urban populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.state_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.state_name ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_199",
            "db_id": "geo",
            "question": "what state is austin in ",
            "qdmr": "return state ;return #1 that austin is in",
            "sql_gold": "select city.state_name from city where city.city_name = 'austin';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'austin'",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return state ;return #1 that austin is in",
                "question": "what state is austin in ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'austin'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state that austin is in",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'austin'"
            }
        },
        {
            "example_id": "GEO_test_2",
            "db_id": "geo",
            "question": "give me the states that border utah ",
            "qdmr": "return states ;return #1 that border utah",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'utah';",
            "denotation_gold": [
                [
                    "wyoming"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "idaho"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'utah'",
            "denotation_ground": [
                [
                    "wyoming"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "idaho"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border utah",
                "question": "give me the states that border utah ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'utah'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "utah"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border utah",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'utah'"
            }
        },
        {
            "example_id": "GEO_test_20",
            "db_id": "geo",
            "question": "how many people live in houston ",
            "qdmr": "return people ;return #1 who live in houston ;return number of #2",
            "sql_gold": "select city.population from city where city.city_name = 'houston';",
            "denotation_gold": [
                [
                    1595138
                ]
            ],
            "sql_ground": "SELECT SUM(city.population) FROM city WHERE city.city_name = 'houston'",
            "denotation_ground": [
                [
                    1595138
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 who live in houston ;return sum of #2",
                "question": "how many people live in houston ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.population FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name = 'houston'",
                        "op": "filter",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "houston"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people who live in houston",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT SUM(city.population) FROM city WHERE city.city_name = 'houston'",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(city.population)"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "houston"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(city.population) FROM city WHERE city.city_name = 'houston'"
            }
        },
        {
            "example_id": "GEO_test_200",
            "db_id": "geo",
            "question": "what state is miami in ",
            "qdmr": "return states ;return #1 that miami is in",
            "sql_gold": "select city.state_name from city where city.city_name = 'miami';",
            "denotation_gold": [
                [
                    "florida"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'miami'",
            "denotation_ground": [
                [
                    "florida"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that miami is in",
                "question": "what state is miami in ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'miami'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "miami"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that miami is in",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'miami'"
            }
        },
        {
            "example_id": "GEO_test_201",
            "db_id": "geo",
            "question": "what state is the largest in population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is largest",
            "sql_gold": "select state.state_name from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is largest",
                "question": "what state is the largest in population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_202",
            "db_id": "geo",
            "question": "what states are next to arizona ",
            "qdmr": "return states ;return #1 that are next to arizona",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'arizona';",
            "denotation_gold": [
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "california"
                ],
                [
                    "nevada"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arizona'",
            "denotation_ground": [
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "california"
                ],
                [
                    "nevada"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that are next to arizona",
                "question": "what states are next to arizona ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arizona'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "arizona"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that are next to arizona",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'arizona'"
            }
        },
        {
            "example_id": "GEO_test_203",
            "db_id": "geo",
            "question": "what states border florida ",
            "qdmr": "return states ;return #1 that border florida",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'florida';",
            "denotation_gold": [
                [
                    "georgia"
                ],
                [
                    "alabama"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'florida'",
            "denotation_ground": [
                [
                    "georgia"
                ],
                [
                    "alabama"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border florida",
                "question": "what states border florida ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'florida'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border florida",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'florida'"
            }
        },
        {
            "example_id": "GEO_test_204",
            "db_id": "geo",
            "question": "what states border indiana ",
            "qdmr": "return states ;return #1 that border indiana",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'indiana';",
            "denotation_gold": [
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "kentucky"
                ],
                [
                    "illinois"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana'",
            "denotation_ground": [
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "kentucky"
                ],
                [
                    "illinois"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border indiana",
                "question": "what states border indiana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "indiana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border indiana",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'indiana'"
            }
        },
        {
            "example_id": "GEO_test_205",
            "db_id": "geo",
            "question": "what states border michigan ",
            "qdmr": "return states ;return #1 that border michigan",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'michigan';",
            "denotation_gold": [
                [
                    "ohio"
                ],
                [
                    "indiana"
                ],
                [
                    "wisconsin"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'michigan'",
            "denotation_ground": [
                [
                    "ohio"
                ],
                [
                    "indiana"
                ],
                [
                    "wisconsin"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border michigan",
                "question": "what states border michigan ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'michigan'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "michigan"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border michigan",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'michigan'"
            }
        },
        {
            "example_id": "GEO_test_206",
            "db_id": "geo",
            "question": "what states border montana ",
            "qdmr": "return states ;return #1 that border montana",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'montana';",
            "denotation_gold": [
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'montana'",
            "denotation_ground": [
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border montana",
                "question": "what states border montana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'montana'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "montana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border montana",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'montana'"
            }
        },
        {
            "example_id": "GEO_test_207",
            "db_id": "geo",
            "question": "what states border new jersey ",
            "qdmr": "return states ;return #1 that border new jersey",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'new jersey';",
            "denotation_gold": [
                [
                    "new york"
                ],
                [
                    "delaware"
                ],
                [
                    "pennsylvania"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'new jersey'",
            "denotation_ground": [
                [
                    "new york"
                ],
                [
                    "delaware"
                ],
                [
                    "pennsylvania"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border new jersey",
                "question": "what states border new jersey ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'new jersey'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "new jersey"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border new jersey",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'new jersey'"
            }
        },
        {
            "example_id": "GEO_test_208",
            "db_id": "geo",
            "question": "what states border states that border mississippi ",
            "qdmr": "return states ;return #1 that border mississippi ;return border states of #2",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in (select border_info.border from border_info where border_info.state_name = 'mississippi');",
            "denotation_gold": [
                [
                    "tennessee"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "texas"
                ],
                [
                    "kentucky"
                ],
                [
                    "virginia"
                ],
                [
                    "north carolina"
                ],
                [
                    "georgia"
                ],
                [
                    "alabama"
                ],
                [
                    "mississippi"
                ],
                [
                    "arkansas"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )",
            "denotation_ground": [
                [
                    "florida"
                ],
                [
                    "georgia"
                ],
                [
                    "mississippi"
                ],
                [
                    "tennessee"
                ],
                [
                    "louisiana"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "oklahoma"
                ],
                [
                    "tennessee"
                ],
                [
                    "texas"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "texas"
                ],
                [
                    "alabama"
                ],
                [
                    "arkansas"
                ],
                [
                    "georgia"
                ],
                [
                    "kentucky"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "north carolina"
                ],
                [
                    "virginia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border mississippi ;return border states of #2",
                "question": "what states border states that border mississippi ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border mississippi",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_209",
            "db_id": "geo",
            "question": "what states border states that the ohio runs through ",
            "qdmr": "return the ohio ;return states run through of #1 ;return border states of #2",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in (select river.traverse from river where river.river_name = 'ohio');",
            "denotation_gold": [
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "iowa"
                ],
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "kentucky"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ],
                [
                    "michigan"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "new york"
                ],
                [
                    "new jersey"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "west virginia"
                ],
                [
                    "ohio"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "maryland"
                ],
                [
                    "virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "ohio"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, river, border_info WHERE state.state_name = border_info.border AND river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' ) )",
            "denotation_ground": [
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "kentucky"
                ],
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "illinois"
                ],
                [
                    "kentucky"
                ],
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "missouri"
                ],
                [
                    "ohio"
                ],
                [
                    "tennessee"
                ],
                [
                    "virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "missouri"
                ],
                [
                    "ohio"
                ],
                [
                    "tennessee"
                ],
                [
                    "virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "missouri"
                ],
                [
                    "ohio"
                ],
                [
                    "tennessee"
                ],
                [
                    "virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "missouri"
                ],
                [
                    "ohio"
                ],
                [
                    "tennessee"
                ],
                [
                    "virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "missouri"
                ],
                [
                    "ohio"
                ],
                [
                    "tennessee"
                ],
                [
                    "virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "michigan"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "michigan"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "new jersey"
                ],
                [
                    "new york"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "new jersey"
                ],
                [
                    "new york"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "new jersey"
                ],
                [
                    "new york"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "new jersey"
                ],
                [
                    "new york"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "maryland"
                ],
                [
                    "ohio"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "maryland"
                ],
                [
                    "ohio"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "virginia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return the ohio ;return states run through of #1 ;return border states of #2",
                "question": "what states border states that the ohio runs through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'ohio'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states run through",
                            "states run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT border_info.state_name FROM state, river, border_info WHERE state.state_name = border_info.border AND river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' ) )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ],
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states run through border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, river, border_info WHERE state.state_name = border_info.border AND river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' ) )"
            }
        },
        {
            "example_id": "GEO_test_21",
            "db_id": "geo",
            "question": "how many people live in minneapolis minnesota ? ",
            "qdmr": "return minneapolis minnesota ;return people who live in #1 ;return number of #2",
            "sql_gold": "select city.population from city where city.city_name = 'minneapolis' and city.state_name = 'minnesota';",
            "denotation_gold": [
                [
                    370951
                ]
            ],
            "sql_ground": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )",
            "denotation_ground": [
                [
                    370951
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return minneapolis minnesota ;return people who live in #1 ;return people who live in #1",
                "question": "how many people live in minneapolis minnesota ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "minneapolis"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "minnesota"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.country_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )",
                        "op": "project",
                        "SELECT": [
                            "city.country_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city people who live",
                            "people who live"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city people who live",
                            "people who live"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'minneapolis' AND city.state_name = 'minnesota' )"
            }
        },
        {
            "example_id": "GEO_test_210",
            "db_id": "geo",
            "question": "what states border texas and have a major river ",
            "qdmr": "return texas ;return border states of #1 ;return #2 that have a major river",
            "sql_gold": "select border_info.state_name from border_info where border_info.border = 'texas' and border_info.state_name in (select river.traverse from river where river.length > 750);",
            "denotation_gold": [
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "new mexico"
                ],
                [
                    "oklahoma"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM river, border_info WHERE border_info.state_name = river.traverse AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )",
            "denotation_ground": [
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return texas ;return border states of #1 ;return #2 that have a major river",
                "question": "what states border texas and have a major river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT border_info.border FROM border_info WHERE border_info.border = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "border_info.border"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.border",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info",
                            "border info"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.border",
                                "IN",
                                "( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT border_info.state_name FROM river, border_info WHERE border_info.state_name = river.traverse AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )",
                        "op": "filter",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "river",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "border_info.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.border",
                                "IN",
                                "( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border states that have a major river",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM river, border_info WHERE border_info.state_name = river.traverse AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.border = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_211",
            "db_id": "geo",
            "question": "what states border the most populous state ",
            "qdmr": "return states ;return population of #1 ;return #1 where #2 is highest ;return border states of #3",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = (select state.state_name from state where state.population = (select max(state.population) from state));",
            "denotation_gold": [
                [
                    "oregon"
                ],
                [
                    "nevada"
                ],
                [
                    "arizona"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "oregon"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population of #1 ;return #1 where #2 is highest ;return border states of #3",
                "question": "what states border the most populous state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_212",
            "db_id": "geo",
            "question": "what states border the state that borders the most states ? ",
            "qdmr": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4 ;return border states of #5",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in ( select border_info.border from border_info group by border_info.border having count(1) = (select max(cnt1) from (select border_info.border, count(1) as cnt1 from border_info group by border_info.border) tmp));",
            "denotation_gold": [
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "kansas"
                ],
                [
                    "nebraska"
                ],
                [
                    "kentucky"
                ],
                [
                    "virginia"
                ],
                [
                    "north carolina"
                ],
                [
                    "georgia"
                ],
                [
                    "alabama"
                ],
                [
                    "mississippi"
                ],
                [
                    "arkansas"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    "arizona"
                ],
                [
                    "kansas"
                ],
                [
                    "nebraska"
                ],
                [
                    "new mexico"
                ],
                [
                    "oklahoma"
                ],
                [
                    "utah"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "nevada"
                ],
                [
                    "oregon"
                ],
                [
                    "utah"
                ],
                [
                    "washington"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "colorado"
                ],
                [
                    "iowa"
                ],
                [
                    "kansas"
                ],
                [
                    "missouri"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "iowa"
                ],
                [
                    "minnesota"
                ],
                [
                    "montana"
                ],
                [
                    "nebraska"
                ],
                [
                    "north dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "arizona"
                ],
                [
                    "colorado"
                ],
                [
                    "idaho"
                ],
                [
                    "nevada"
                ],
                [
                    "new mexico"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that border #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4 ;return border states of #5",
                "question": "what states border the state that borders the most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.state_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "5"
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_test_213",
            "db_id": "geo",
            "question": "what states border the state with the most cities ? ",
            "qdmr": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in ( select border_info.state_name from (select city.state_name, count(1) as cnt1 from city group by city.state_name) tmp1 where cnt1 = (select max(cnt) from (select count(1) as cnt from city group by city.state_name) tmp))",
            "denotation_gold": [
                [
                    "tennessee"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ],
                [
                    "mississippi"
                ],
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "california"
                ],
                [
                    "nevada"
                ],
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oregon"
                ],
                [
                    "nevada"
                ],
                [
                    "arizona"
                ],
                [
                    "nebraska"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "utah"
                ],
                [
                    "wyoming"
                ],
                [
                    "massachusetts"
                ],
                [
                    "rhode island"
                ],
                [
                    "new york"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "maryland"
                ],
                [
                    "maryland"
                ],
                [
                    "virginia"
                ],
                [
                    "georgia"
                ],
                [
                    "alabama"
                ],
                [
                    "north carolina"
                ],
                [
                    "south carolina"
                ],
                [
                    "florida"
                ],
                [
                    "alabama"
                ],
                [
                    "tennessee"
                ],
                [
                    "montana"
                ],
                [
                    "wyoming"
                ],
                [
                    "utah"
                ],
                [
                    "nevada"
                ],
                [
                    "oregon"
                ],
                [
                    "washington"
                ],
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "iowa"
                ],
                [
                    "michigan"
                ],
                [
                    "ohio"
                ],
                [
                    "kentucky"
                ],
                [
                    "illinois"
                ],
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "nebraska"
                ],
                [
                    "south dakota"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "oklahoma"
                ],
                [
                    "colorado"
                ],
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "texas"
                ],
                [
                    "new hampshire"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "delaware"
                ],
                [
                    "virginia"
                ],
                [
                    "district of columbia"
                ],
                [
                    "west virginia"
                ],
                [
                    "new hampshire"
                ],
                [
                    "rhode island"
                ],
                [
                    "connecticut"
                ],
                [
                    "new york"
                ],
                [
                    "vermont"
                ],
                [
                    "ohio"
                ],
                [
                    "indiana"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "south dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "tennessee"
                ],
                [
                    "alabama"
                ],
                [
                    "louisiana"
                ],
                [
                    "arkansas"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "kansas"
                ],
                [
                    "nebraska"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "missouri"
                ],
                [
                    "kansas"
                ],
                [
                    "colorado"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "california"
                ],
                [
                    "oregon"
                ],
                [
                    "maine"
                ],
                [
                    "massachusetts"
                ],
                [
                    "vermont"
                ],
                [
                    "new york"
                ],
                [
                    "delaware"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "colorado"
                ],
                [
                    "oklahoma"
                ],
                [
                    "texas"
                ],
                [
                    "arizona"
                ],
                [
                    "utah"
                ],
                [
                    "vermont"
                ],
                [
                    "massachusetts"
                ],
                [
                    "connecticut"
                ],
                [
                    "new jersey"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "virginia"
                ],
                [
                    "south carolina"
                ],
                [
                    "georgia"
                ],
                [
                    "tennessee"
                ],
                [
                    "minnesota"
                ],
                [
                    "south dakota"
                ],
                [
                    "montana"
                ],
                [
                    "michigan"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "kansas"
                ],
                [
                    "missouri"
                ],
                [
                    "arkansas"
                ],
                [
                    "texas"
                ],
                [
                    "new mexico"
                ],
                [
                    "colorado"
                ],
                [
                    "washington"
                ],
                [
                    "idaho"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ],
                [
                    "new york"
                ],
                [
                    "new jersey"
                ],
                [
                    "delaware"
                ],
                [
                    "maryland"
                ],
                [
                    "west virginia"
                ],
                [
                    "ohio"
                ],
                [
                    "massachusetts"
                ],
                [
                    "connecticut"
                ],
                [
                    "north carolina"
                ],
                [
                    "georgia"
                ],
                [
                    "north dakota"
                ],
                [
                    "minnesota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "kentucky"
                ],
                [
                    "virginia"
                ],
                [
                    "north carolina"
                ],
                [
                    "georgia"
                ],
                [
                    "alabama"
                ],
                [
                    "mississippi"
                ],
                [
                    "arkansas"
                ],
                [
                    "missouri"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "new mexico"
                ],
                [
                    "wyoming"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "idaho"
                ],
                [
                    "new hampshire"
                ],
                [
                    "massachusetts"
                ],
                [
                    "new york"
                ],
                [
                    "maryland"
                ],
                [
                    "district of columbia"
                ],
                [
                    "north carolina"
                ],
                [
                    "tennessee"
                ],
                [
                    "kentucky"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.state_name AND state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "alabama"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4",
                "question": "what states border the state with the most cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.country_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.country_name",
                                "IN",
                                "( SELECT state.country_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.country_name",
                                "IN",
                                "( SELECT state.country_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.country_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.country_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.country_name",
                                "IN",
                                "( SELECT state.country_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.country_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.state_name AND state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.state_name"
                            ],
                            [
                                "state.country_name",
                                "city.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.country_name",
                                "IN",
                                "( SELECT state.country_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.state_name AND state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state, city WHERE state.country_name = city.country_name AND state.country_name IN ( SELECT state.country_name FROM state ) GROUP BY state.country_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_214",
            "db_id": "geo",
            "question": "what states border the state with the most major cities ? ",
            "qdmr": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in ( select tmp1.state_name from (select city.state_name, count(1) as cnt1 from city where city.population  >  150000 group by city.state_name) tmp1 where cnt1 = (select max(cnt) from (select count(1) as cnt from city where city.population  >  150000 group by city.state_name) tmp))",
            "denotation_gold": [
                [
                    "oregon"
                ],
                [
                    "nevada"
                ],
                [
                    "arizona"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.border AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "nevada"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return border states of #4",
                "question": "what states border the state with the most major cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.border AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info, city WHERE state.state_name = border_info.border AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_215",
            "db_id": "geo",
            "question": "what states border the state with the smallest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return border states of #3",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = (select state.state_name from state where state.area = (select min (state.area) from state));",
            "denotation_gold": [
                [
                    "maryland"
                ],
                [
                    "virginia"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    "maryland"
                ],
                [
                    "virginia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return border states of #3",
                "question": "what states border the state with the smallest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_216",
            "db_id": "geo",
            "question": "what states contain at least one major rivers ",
            "qdmr": "return states ;return major rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is at least one",
            "sql_gold": "select river.traverse from river where river.length  >  750;",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "ohio"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "colorado"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "south dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "oregon"
                ],
                [
                    "washington"
                ],
                [
                    "washington"
                ],
                [
                    "new mexico"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "wyoming"
                ],
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "wyoming"
                ],
                [
                    "nebraska"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "tennessee"
                ],
                [
                    "alabama"
                ],
                [
                    "tennessee"
                ],
                [
                    "kentucky"
                ],
                [
                    "ohio"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "north dakota"
                ],
                [
                    "washington"
                ],
                [
                    "oregon"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "kentucky"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "michigan"
                ],
                [
                    "louisiana"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "colorado"
                ],
                [
                    "kansas"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "missouri"
                ],
                [
                    "arkansas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name HAVING COUNT(river.river_name) >= 1",
            "denotation_ground": [
                [
                    "alabama"
                ],
                [
                    "arizona"
                ],
                [
                    "arkansas"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "district of columbia"
                ],
                [
                    "florida"
                ],
                [
                    "georgia"
                ],
                [
                    "idaho"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "kansas"
                ],
                [
                    "kentucky"
                ],
                [
                    "louisiana"
                ],
                [
                    "maryland"
                ],
                [
                    "massachusetts"
                ],
                [
                    "michigan"
                ],
                [
                    "minnesota"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "montana"
                ],
                [
                    "nebraska"
                ],
                [
                    "nevada"
                ],
                [
                    "new hampshire"
                ],
                [
                    "new jersey"
                ],
                [
                    "new mexico"
                ],
                [
                    "new york"
                ],
                [
                    "north carolina"
                ],
                [
                    "north dakota"
                ],
                [
                    "ohio"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oregon"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "south carolina"
                ],
                [
                    "south dakota"
                ],
                [
                    "tennessee"
                ],
                [
                    "texas"
                ],
                [
                    "utah"
                ],
                [
                    "vermont"
                ],
                [
                    "virginia"
                ],
                [
                    "washington"
                ],
                [
                    "west virginia"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return major rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is at least one",
                "question": "what states contain at least one major rivers ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major rivers",
                            "major rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.area) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.area)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name HAVING COUNT(state.area) >= 1",
                        "op": "comparative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [
                            [
                                "COUNT(state.area)",
                                ">=",
                                "1"
                            ]
                        ],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name HAVING COUNT(state.area) >= 1"
            }
        },
        {
            "example_id": "GEO_test_217",
            "db_id": "geo",
            "question": "what states does the delaware river run through ",
            "qdmr": "return the delaware river ;return states that #1 run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'delaware';",
            "denotation_gold": [
                [
                    "new york"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "delaware"
                ]
            ],
            "sql_ground": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )",
            "denotation_ground": [
                [
                    "new york"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "delaware"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return the delaware river ;return states that #1 run through",
                "question": "what states does the delaware river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'delaware'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "delaware"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states that  run through",
                            "states that  run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )"
            }
        },
        {
            "example_id": "GEO_test_218",
            "db_id": "geo",
            "question": "what states does the mississippi river run through ",
            "qdmr": "return states ;return #1 that the mississippi river run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'mississippi';",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
            "denotation_ground": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that the mississippi river run through",
                "question": "what states does the mississippi river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the mississippi river run through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'"
            }
        },
        {
            "example_id": "GEO_test_219",
            "db_id": "geo",
            "question": "what states does the missouri run through ",
            "qdmr": "return states ;return #1 that the missouri river run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'missouri';",
            "denotation_gold": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'missouri'",
            "denotation_ground": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that the missouri river run through",
                "question": "what states does the missouri run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'missouri'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "missouri"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the missouri river run through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'missouri'"
            }
        },
        {
            "example_id": "GEO_test_22",
            "db_id": "geo",
            "question": "how many people live in mississippi ",
            "qdmr": "return people ;return #1 that live in mississippi ;return number of #2",
            "sql_gold": "select state.population from state where state.state_name = 'mississippi';",
            "denotation_gold": [
                [
                    2520000
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'mississippi'",
            "denotation_ground": [
                [
                    2520000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 that live in mississippi ;return sum of #2",
                "question": "how many people live in mississippi ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.population FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people that live in mississippi",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'mississippi'",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'mississippi'"
            }
        },
        {
            "example_id": "GEO_test_220",
            "db_id": "geo",
            "question": "what states does the ohio river run through ",
            "qdmr": "return the ohio river ;return states that #1 run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'ohio';",
            "denotation_gold": [
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "ohio"
                ]
            ],
            "sql_ground": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )",
            "denotation_ground": [
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "ohio"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return the ohio river ;return states that #1 run through",
                "question": "what states does the ohio river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'ohio'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states that  run through",
                            "states that  run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'ohio' )"
            }
        },
        {
            "example_id": "GEO_test_221",
            "db_id": "geo",
            "question": "what states have cities named dallas ",
            "qdmr": "return cities ;return #1 that are named dallas ;return states of #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'dallas';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 that are named dallas ;return states of #2",
                "question": "what states have cities named dallas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'dallas'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "dallas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are named dallas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
            }
        },
        {
            "example_id": "GEO_test_222",
            "db_id": "geo",
            "question": "what states have cities named plano ",
            "qdmr": "return cities ;return #1 named plano ;return states of #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'plano';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'plano' )",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 named plano ;return states of #2",
                "question": "what states have cities named plano ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'plano'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "plano"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities named plano",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'plano' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'plano' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'plano' )"
            }
        },
        {
            "example_id": "GEO_test_223",
            "db_id": "geo",
            "question": "what states have cities named portland ",
            "qdmr": "return cities ;return #1 that are named portland ;return states of #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'portland';",
            "denotation_gold": [
                [
                    "maine"
                ],
                [
                    "oregon"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )",
            "denotation_ground": [
                [
                    "maine"
                ],
                [
                    "oregon"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 that are named portland ;return states of #2",
                "question": "what states have cities named portland ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'portland'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "portland"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are named portland",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )"
            }
        },
        {
            "example_id": "GEO_test_224",
            "db_id": "geo",
            "question": "what states have cities named rochester ",
            "qdmr": "return cities ;return #1 named rochester ;return states that have #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'rochester';",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'rochester' )",
            "denotation_ground": [
                [
                    "minnesota"
                ],
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 named rochester ;return states that have #2",
                "question": "what states have cities named rochester ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'rochester'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "rochester"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities named rochester",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'rochester' )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'rochester' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states that have",
                            "states that have"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'rochester' )"
            }
        },
        {
            "example_id": "GEO_test_225",
            "db_id": "geo",
            "question": "what states have cities named salt lake city ",
            "qdmr": "return cities ;return #1 named salt lake city ;return states that have #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'salt lake city';",
            "denotation_gold": [
                [
                    "utah"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'salt lake city' )",
            "denotation_ground": [
                [
                    "utah"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 named salt lake city ;return states that have #2",
                "question": "what states have cities named salt lake city ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'salt lake city'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "salt lake city"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities named salt lake city",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'salt lake city' )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'salt lake city' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states that have",
                            "states that have"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'salt lake city' )"
            }
        },
        {
            "example_id": "GEO_test_226",
            "db_id": "geo",
            "question": "what states surround kentucky ",
            "qdmr": "return states ;return #1 that surround kentucky",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'kentucky';",
            "denotation_gold": [
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'",
            "denotation_ground": [
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that surround kentucky",
                "question": "what states surround kentucky ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "kentucky"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that surround kentucky",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'"
            }
        },
        {
            "example_id": "GEO_test_227",
            "db_id": "geo",
            "question": "where are mountains ",
            "qdmr": "return mountains ;return where are #1",
            "sql_gold": "select mountain.state_name from mountain;",
            "denotation_gold": [
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "washington"
                ]
            ],
            "sql_ground": "SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain )",
            "denotation_ground": [
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "alaska"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "washington"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return mountains ;return where are #1",
                "question": "where are mountains ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain",
                        "op": "select",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain )",
                        "op": "project",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains where are",
                            "where are"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT mountain.state_name FROM mountain WHERE mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain )"
            }
        },
        {
            "example_id": "GEO_test_228",
            "db_id": "geo",
            "question": "where is dallas ",
            "qdmr": "return dallas ;return where #1 is",
            "sql_gold": "select city.state_name from city where city.city_name = 'dallas';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return dallas ;return where #1 is",
                "question": "where is dallas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'dallas'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "dallas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city where  is",
                            "where  is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'dallas' )"
            }
        },
        {
            "example_id": "GEO_test_229",
            "db_id": "geo",
            "question": "where is portland ",
            "qdmr": "return portland ;return where is #1",
            "sql_gold": "select city.state_name from city where city.city_name = 'portland';",
            "denotation_gold": [
                [
                    "maine"
                ],
                [
                    "oregon"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )",
            "denotation_ground": [
                [
                    "maine"
                ],
                [
                    "oregon"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return portland ;return where is #1",
                "question": "where is portland ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'portland'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "portland"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city where is",
                            "where is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'portland' )"
            }
        },
        {
            "example_id": "GEO_test_23",
            "db_id": "geo",
            "question": "how many people live in rhode island ",
            "qdmr": "return rhode island ;return people that live in #1 ;return number of #2",
            "sql_gold": "select state.population from state where state.state_name = 'rhode island';",
            "denotation_gold": [
                [
                    947200
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
            "denotation_ground": [
                [
                    947200
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rhode island ;return people that live in #1 ;return sum of #2",
                "question": "how many people live in rhode island ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'rhode island'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "rhode island"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state people that live",
                            "people that live"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'rhode island' )"
            }
        },
        {
            "example_id": "GEO_test_230",
            "db_id": "geo",
            "question": "where is the chattahoochee river ",
            "qdmr": "return the chattahoochee river ;return where is #1",
            "sql_gold": "select river.traverse from river where river.river_name = 'chattahoochee';",
            "denotation_gold": [
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ]
            ],
            "sql_ground": "SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'chattahoochee' )",
            "denotation_ground": [
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return the chattahoochee river ;return where is #1",
                "question": "where is the chattahoochee river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'chattahoochee'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "chattahoochee"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'chattahoochee' )",
                        "op": "project",
                        "SELECT": [
                            "river.traverse"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'chattahoochee' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river where is",
                            "where is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'chattahoochee' )"
            }
        },
        {
            "example_id": "GEO_test_231",
            "db_id": "geo",
            "question": "where is the highest mountain of the united states ",
            "qdmr": "return united states ;return mountains of #1 ;return elevation of #2 ;return #2 where #3 is highest",
            "sql_gold": "select mountain.state_name from mountain where mountain.mountain_altitude = (select max(mountain.mountain_altitude) from mountain);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT mountain.state_name FROM highlow, mountain, state WHERE mountain.state_name = highlow.state_name AND state.state_name = mountain.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return united states ;return mountains of #1 ;return elevation of #2 ;return #2 where #3 is highest",
                "question": "where is the highest mountain of the united states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states",
                            "united states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "state",
                            "mountain"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states mountains",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, mountain, state WHERE mountain.state_name = highlow.state_name AND state.state_name = mountain.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain",
                            "state"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "IN",
                                "( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountains elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT mountain.state_name FROM highlow, mountain, state WHERE mountain.state_name = highlow.state_name AND state.state_name = mountain.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain",
                            "state"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "IN",
                                "( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states mountains",
                            "mountains"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.state_name FROM highlow, mountain, state WHERE mountain.state_name = highlow.state_name AND state.state_name = mountain.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_232",
            "db_id": "geo",
            "question": "where is the highest point in hawaii ",
            "qdmr": "return hawaii ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "select highlow.highest_point from highlow where highlow.state_name = 'hawaii';",
            "denotation_gold": [
                [
                    "mauna kea"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )",
            "denotation_ground": [
                [
                    "mauna kea"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return hawaii ;return points in #1 ;return #2 that is the highest",
                "question": "where is the highest point in hawaii ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "hawaii"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'hawaii' )"
            }
        },
        {
            "example_id": "GEO_test_233",
            "db_id": "geo",
            "question": "where is the lowest point in maryland ",
            "qdmr": "return maryland ;return points in #1 ;return #2 that is the lowest",
            "sql_gold": "select highlow.lowest_point from highlow where highlow.state_name = 'maryland';",
            "denotation_gold": [
                [
                    "atlantic ocean"
                ]
            ],
            "sql_ground": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )",
            "denotation_ground": [
                [
                    "atlantic ocean"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return maryland ;return points in #1 ;return #2 that is the lowest",
                "question": "where is the lowest point in maryland ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "maryland"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.lowest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the lowest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.lowest_point FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'maryland' )"
            }
        },
        {
            "example_id": "GEO_test_234",
            "db_id": "geo",
            "question": "where is the most populated area of new mexico ? ",
            "qdmr": "return new mexico ;return areas of #1 ;return population of #2 ;return #2 where #3 is the highest",
            "sql_gold": "select city.city_name from city where city.state_name = 'new mexico' and city.population = (select max(city.population) from city where city.state_name = 'new mexico');",
            "denotation_gold": [
                [
                    "albuquerque"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "albuquerque"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new mexico ;return areas of #1 ;return population of #2 ;return #2 where #3 is the highest",
                "question": "where is the most populated area of new mexico ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.state_name = 'new mexico'",
                        "op": "select",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "new mexico"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "areas population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) )"
                            ],
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new mexico' ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_235",
            "db_id": "geo",
            "question": "where is the smallest city ",
            "qdmr": "return cities ;return size of #1 ;return #1 where #2 is smallest",
            "sql_gold": "select city.state_name from city where city.population = (select min (city.population) from city);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT mountain.state_name FROM mountain, city WHERE mountain.state_name = city.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM mountain ) ORDER BY city.city_name ASC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return size of #1 ;return #1 where #2 is smallest",
                "question": "where is the smallest city ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.state_name FROM mountain",
                        "op": "select",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM mountain, city WHERE mountain.state_name = city.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM mountain )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "IN",
                                "( SELECT mountain.state_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT mountain.state_name FROM mountain, city WHERE mountain.state_name = city.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM mountain ) ORDER BY city.city_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "IN",
                                "( SELECT mountain.state_name FROM mountain )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.state_name FROM mountain, city WHERE mountain.state_name = city.state_name AND mountain.state_name IN ( SELECT mountain.state_name FROM mountain ) ORDER BY city.city_name ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_236",
            "db_id": "geo",
            "question": "which city in california has the largest population ",
            "qdmr": "return cities ;return #1 in california ;return #2 with the largest population",
            "sql_gold": "select city.city_name from city where city.state_name = 'california' and city.population = (select max(city.population) from city where city.state_name = 'california');",
            "denotation_gold": [
                [
                    "los angeles"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "los angeles"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in california; return cities with the largest population of #2; return #2 where #3 is highest",
                "question": "which city in california has the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in california",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities cities with the largest population",
                            "cities with the largest population"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
                            ],
                            [
                                "city.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in california",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' ) AND city.state_name = 'california' ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_237",
            "db_id": "geo",
            "question": "which is the density of the state that the largest river in the united states runs through ? ",
            "qdmr": "return rivers ;return #1 in the united states ;return size of #2 ;return #2 where #3 is largest ;return state that #4 runs through ;return density of #5",
            "sql_gold": "select state.density from state where state.state_name in (select river.traverse from river where river.length = (select max(river.length) from river));",
            "denotation_gold": [
                [
                    51.740674955595026
                ],
                [
                    70.53084648493544
                ],
                [
                    5.351700680272109
                ],
                [
                    20.297542043984475
                ],
                [
                    9.231966053748232
                ],
                [
                    8.957505576015354
                ]
            ],
            "sql_ground": "SELECT state.density FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 ) )",
            "denotation_ground": [
                [
                    51.740674955595026
                ],
                [
                    51.740674955595026
                ],
                [
                    70.53084648493544
                ],
                [
                    70.53084648493544
                ],
                [
                    70.53084648493544
                ],
                [
                    70.53084648493544
                ],
                [
                    70.53084648493544
                ],
                [
                    5.351700680272109
                ],
                [
                    5.351700680272109
                ],
                [
                    5.351700680272109
                ],
                [
                    5.351700680272109
                ],
                [
                    5.351700680272109
                ],
                [
                    5.351700680272109
                ],
                [
                    20.297542043984475
                ],
                [
                    20.297542043984475
                ],
                [
                    20.297542043984475
                ],
                [
                    20.297542043984475
                ],
                [
                    20.297542043984475
                ],
                [
                    9.231966053748232
                ],
                [
                    9.231966053748232
                ],
                [
                    9.231966053748232
                ],
                [
                    9.231966053748232
                ],
                [
                    9.231966053748232
                ],
                [
                    8.957505576015354
                ],
                [
                    8.957505576015354
                ],
                [
                    8.957505576015354
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in the united states ;return size of #2 ;return #2 where #3 is largest ;return state that #4 runs through ;return density of #5",
                "question": "which is the density of the state that the largest river in the united states runs through ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in the united states",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in the united states",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT highlow.state_name FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ],
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers state that  runs through",
                            "state that  runs through"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT state.density FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "highlow",
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ],
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state that  runs through density",
                            "density"
                        ],
                        "distinct": false,
                        "project ref": "5"
                    }
                },
                "grounded_sql": "SELECT state.density FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow, state, river WHERE river.traverse = highlow.state_name AND river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name ) ORDER BY river.length DESC LIMIT 1 ) )"
            }
        },
        {
            "example_id": "GEO_test_238",
            "db_id": "geo",
            "question": "which is the highest peak not in alaska ? ",
            "qdmr": "return alaska ;return peak of #1 ;return peak besides #2 ;return height of #3 ;return #3 where #4 is highest",
            "sql_gold": "select mountain.mountain_name from mountain where mountain.mountain_altitude = (select max(mountain.mountain_altitude) from mountain where mountain.state_name !=  'alaska') ;",
            "denotation_gold": [
                [
                    "whitney"
                ]
            ],
            "sql_ground": "SELECT mountain.mountain_name FROM highlow, mountain WHERE mountain.state_name = highlow.state_name AND mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "whitney"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return alaska ;return peak of #1 ;return peak besides #2 ;return height of #3 ;return #3 where #4 is highest",
                "question": "which is the highest peak not in alaska ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska'",
                        "op": "select",
                        "SELECT": [
                            "mountain.state_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "=",
                                "alaska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountain",
                            "mountain"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' )",
                        "op": "project",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "mountain.state_name",
                                "IN",
                                "( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "mountain peak",
                            "peak"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) )",
                        "op": "discard",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "mountain.mountain_name",
                                "SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' )"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "peak",
                            "peak"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, mountain WHERE mountain.state_name = highlow.state_name AND mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "peak height",
                            "height"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT mountain.mountain_name FROM highlow, mountain WHERE mountain.state_name = highlow.state_name AND mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "mountain.mountain_name"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain"
                        ],
                        "JOIN": [
                            [
                                "mountain.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "IN",
                                "( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "peak",
                            "peak"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.mountain_name FROM highlow, mountain WHERE mountain.state_name = highlow.state_name AND mountain.mountain_name IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.mountain_name NOT IN ( SELECT mountain.mountain_name FROM mountain WHERE mountain.state_name IN ( SELECT mountain.state_name FROM mountain WHERE mountain.state_name = 'alaska' ) ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_239",
            "db_id": "geo",
            "question": "which is the longest river in usa ",
            "qdmr": "return rivers ;return #1 in usa ;return longest in #2",
            "sql_gold": "select river.river_name from river where river.length = (select max(river.length) from river);",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river ORDER BY river.length DESC LIMIT 1",
            "denotation_ground": [
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers; return #1 in usa; return longest in rivers; return #2 where #3 is highest",
                "question": "which is the longest river in usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "longest in rivers",
                            "longest in rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river ORDER BY river.length DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_24",
            "db_id": "geo",
            "question": "how many people live in the biggest city in new york state ",
            "qdmr": "return new york state ;return cities in #1 ;return size of #2 ;return #2 where #3 is biggest ;return people who live in #4 ;return number of #5",
            "sql_gold": "select city.population from city where city.state_name = 'new york' and city.population = (select max(city.population) from city where city.state_name = 'new york');",
            "denotation_gold": [
                [
                    7071639
                ]
            ],
            "sql_ground": "SELECT COUNT(city.country_name) FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    1
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return new york state ;return cities in #1 ;return size of #2 ;return #2 where #3 is biggest ;return people who live in #4 ;return number of #5",
                "question": "how many people live in the biggest city in new york state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.state_name FROM city WHERE city.state_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'new york' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) )"
                            ],
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM city WHERE city.state_name = 'new york' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities people who live",
                            "people who live"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ) AND city.state_name IN ( SELECT city.state_name FROM city WHERE city.state_name = 'new york' ) ORDER BY city.city_name DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_240",
            "db_id": "geo",
            "question": "which is the smallest state ",
            "qdmr": "return states ;return size of #1 ;return #1 where #2 is smallest",
            "sql_gold": "select state.state_name from state where state.area = (select min (state.area) from state);",
            "denotation_gold": [
                [
                    "district of columbia"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "district of columbia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return size of #1 ;return #1 where #2 is smallest",
                "question": "which is the smallest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_241",
            "db_id": "geo",
            "question": "which of the states bordering pennsylvania has the largest population ",
            "qdmr": "return states ;return #1 bordering pennsylvania ;return #2 with the largest population",
            "sql_gold": "select state.state_name from state where state.state_name in (select border_info.border from border_info where border_info.state_name = 'pennsylvania') group by state.state_name order by max(state.population) desc limit 1;",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' ) AND border_info.state_name = 'pennsylvania' ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 bordering pennsylvania; return states with the largest population of #2; return #2 where #3 is highest",
                "question": "which of the states bordering pennsylvania has the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering pennsylvania",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states with the largest population",
                            "states with the largest population"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' ) AND border_info.state_name = 'pennsylvania' ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' )"
                            ],
                            [
                                "border_info.state_name",
                                "=",
                                "pennsylvania"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering pennsylvania",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'pennsylvania' ) AND border_info.state_name = 'pennsylvania' ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_242",
            "db_id": "geo",
            "question": "which river goes through the most states ? ",
            "qdmr": "return rivers ;return states through which #1 go ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.river_name from river group by(river.river_name) order by count(distinct river.traverse) desc limit 1;",
            "denotation_gold": [
                [
                    "mississippi"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mississippi"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states through which #1 go ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which river goes through the most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states through which  go",
                            "states through which  go"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.area) FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.area)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.area)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_243",
            "db_id": "geo",
            "question": "which river runs through most states ? ",
            "qdmr": "return rivers ;return states through which #1 run ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.river_name from river group by(river.river_name) order by count(distinct river.traverse) desc limit 1;",
            "denotation_gold": [
                [
                    "mississippi"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mississippi"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states through which #1 run ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which river runs through most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states through which  run",
                            "states through which  run"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.area) FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(state.area)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(state.area)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(state.area) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_244",
            "db_id": "geo",
            "question": "which rivers do not run through texas ",
            "qdmr": "return rivers ;return #1 that run through texas ;return #1 besides #2",
            "sql_gold": "select river.river_name from river where river.river_name not in (select river.river_name from river where river.traverse = 'texas');",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "wabash"
                ],
                [
                    "wabash"
                ],
                [
                    "wabash"
                ],
                [
                    "yellowstone"
                ],
                [
                    "yellowstone"
                ],
                [
                    "yellowstone"
                ],
                [
                    "allegheny"
                ],
                [
                    "allegheny"
                ],
                [
                    "allegheny"
                ],
                [
                    "bighorn"
                ],
                [
                    "bighorn"
                ],
                [
                    "cheyenne"
                ],
                [
                    "cheyenne"
                ],
                [
                    "clark fork"
                ],
                [
                    "clark fork"
                ],
                [
                    "columbia"
                ],
                [
                    "columbia"
                ],
                [
                    "cumberland"
                ],
                [
                    "cumberland"
                ],
                [
                    "cumberland"
                ],
                [
                    "dakota"
                ],
                [
                    "dakota"
                ],
                [
                    "gila"
                ],
                [
                    "gila"
                ],
                [
                    "hudson"
                ],
                [
                    "hudson"
                ],
                [
                    "neosho"
                ],
                [
                    "neosho"
                ],
                [
                    "niobrara"
                ],
                [
                    "niobrara"
                ],
                [
                    "ouachita"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "pearl"
                ],
                [
                    "powder"
                ],
                [
                    "powder"
                ],
                [
                    "roanoke"
                ],
                [
                    "roanoke"
                ],
                [
                    "rock"
                ],
                [
                    "rock"
                ],
                [
                    "smoky hill"
                ],
                [
                    "smoky hill"
                ],
                [
                    "south platte"
                ],
                [
                    "south platte"
                ],
                [
                    "st. francis"
                ],
                [
                    "st. francis"
                ],
                [
                    "tombigbee"
                ],
                [
                    "tombigbee"
                ],
                [
                    "wateree catawba"
                ],
                [
                    "wateree catawba"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
            "denotation_ground": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "delaware"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "potomac"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "wabash"
                ],
                [
                    "wabash"
                ],
                [
                    "wabash"
                ],
                [
                    "yellowstone"
                ],
                [
                    "yellowstone"
                ],
                [
                    "yellowstone"
                ],
                [
                    "allegheny"
                ],
                [
                    "allegheny"
                ],
                [
                    "allegheny"
                ],
                [
                    "bighorn"
                ],
                [
                    "bighorn"
                ],
                [
                    "cheyenne"
                ],
                [
                    "cheyenne"
                ],
                [
                    "clark fork"
                ],
                [
                    "clark fork"
                ],
                [
                    "columbia"
                ],
                [
                    "columbia"
                ],
                [
                    "cumberland"
                ],
                [
                    "cumberland"
                ],
                [
                    "cumberland"
                ],
                [
                    "dakota"
                ],
                [
                    "dakota"
                ],
                [
                    "gila"
                ],
                [
                    "gila"
                ],
                [
                    "hudson"
                ],
                [
                    "hudson"
                ],
                [
                    "neosho"
                ],
                [
                    "neosho"
                ],
                [
                    "niobrara"
                ],
                [
                    "niobrara"
                ],
                [
                    "ouachita"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "pearl"
                ],
                [
                    "powder"
                ],
                [
                    "powder"
                ],
                [
                    "roanoke"
                ],
                [
                    "roanoke"
                ],
                [
                    "rock"
                ],
                [
                    "rock"
                ],
                [
                    "smoky hill"
                ],
                [
                    "smoky hill"
                ],
                [
                    "south platte"
                ],
                [
                    "south platte"
                ],
                [
                    "st. francis"
                ],
                [
                    "st. francis"
                ],
                [
                    "tombigbee"
                ],
                [
                    "tombigbee"
                ],
                [
                    "wateree catawba"
                ],
                [
                    "wateree catawba"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that run through texas ;return #1 besides #2",
                "question": "which rivers do not run through texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that run through texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
                        "op": "discard",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "river.river_name",
                                "SELECT river.river_name FROM river WHERE river.traverse = 'texas'"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_245",
            "db_id": "geo",
            "question": "which rivers do not run through usa ? ",
            "qdmr": "return rivers ;return #1 that run through usa ;return #1 besides #2",
            "sql_gold": "select river.river_name from river where river.country_name != 'usa';",
            "denotation_gold": [],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.country_name = 'usa' )",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that run through usa ;return #1 besides #2",
                "question": "which rivers do not run through usa ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.country_name = 'usa'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.country_name",
                                "=",
                                "usa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that run through usa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.country_name = 'usa' )",
                        "op": "discard",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "river.river_name",
                                "SELECT river.river_name FROM river WHERE river.country_name = 'usa'"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name NOT IN ( SELECT river.river_name FROM river WHERE river.country_name = 'usa' )"
            }
        },
        {
            "example_id": "GEO_test_246",
            "db_id": "geo",
            "question": "which rivers run through states that border the state with the capital austin ",
            "qdmr": "return states ;return capitals of #1 ;return #1 where #2 is austin ;return border states of #3 ;return rivers of #4",
            "sql_gold": "select river.river_name from river where river.traverse in (select border_info.border from border_info where border_info.state_name = (select state.state_name from state where state.capital = 'austin'));",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "cimarron"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "gila"
                ],
                [
                    "neosho"
                ],
                [
                    "ouachita"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "pecos"
                ],
                [
                    "st. francis"
                ],
                [
                    "washita"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' ) )",
            "denotation_ground": [
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "red"
                ],
                [
                    "red"
                ],
                [
                    "st. francis"
                ],
                [
                    "white"
                ],
                [
                    "white"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "ouachita"
                ],
                [
                    "pearl"
                ],
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "gila"
                ],
                [
                    "pecos"
                ],
                [
                    "red"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "cimarron"
                ],
                [
                    "neosho"
                ],
                [
                    "red"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return capitals of #1 ;return #1 where #2 is austin ;return border states of #3 ;return rivers of #4",
                "question": "which rivers run through states that border the state with the capital austin ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin'",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "state.capital",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' ) )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "border_info.state_name",
                                "river.traverse"
                            ],
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM state, river, border_info WHERE border_info.state_name = river.traverse AND state.state_name = border_info.border AND border_info.state_name IN ( SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) AND state.capital = 'austin' ) )"
            }
        },
        {
            "example_id": "GEO_test_247",
            "db_id": "geo",
            "question": "which rivers run through states with fewest cities ? ",
            "qdmr": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is lowest ;return rivers of #4",
            "sql_gold": "select river.river_name from river where river.traverse in (select tmp1.state_name from (select city.state_name, count(1) as cnt1 from city group by city.state_name) tmp1 where cnt1 = (select min (cnt) from (select count(1) as cnt from city group by city.state_name) tmp))",
            "denotation_gold": [
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "delaware"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "little missouri"
                ],
                [
                    "snake"
                ],
                [
                    "snake"
                ],
                [
                    "cimarron"
                ],
                [
                    "green"
                ],
                [
                    "north platte"
                ],
                [
                    "potomac"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "yellowstone"
                ],
                [
                    "yellowstone"
                ],
                [
                    "bighorn"
                ],
                [
                    "cheyenne"
                ],
                [
                    "cheyenne"
                ],
                [
                    "clark fork"
                ],
                [
                    "dakota"
                ],
                [
                    "dakota"
                ],
                [
                    "gila"
                ],
                [
                    "niobrara"
                ],
                [
                    "pecos"
                ],
                [
                    "powder"
                ],
                [
                    "tombigbee"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM state, river, city WHERE state.state_name = river.traverse AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) ASC LIMIT 1 )",
            "denotation_ground": [],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is lowest ;return rivers of #4",
                "question": "which rivers run through states with fewest cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) ASC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT highlow.state_name FROM state, highlow, city WHERE state.state_name = highlow.state_name AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ],
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT highlow.state_name FROM state, highlow, city WHERE state.state_name = highlow.state_name AND state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_248",
            "db_id": "geo",
            "question": "which river traverses most states ? ",
            "qdmr": "return rivers ;return states traverse of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.river_name from river group by(river.river_name) order by count(distinct river.traverse) desc limit 1;",
            "denotation_gold": [
                [
                    "mississippi"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(river.traverse) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mississippi"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return states traverse of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which river traverses most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.traverse FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.traverse"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states traverse",
                            "states traverse"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.traverse) FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.traverse)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(river.traverse) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "river.river_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.traverse)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY river.river_name ORDER BY COUNT(river.traverse) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_249",
            "db_id": "geo",
            "question": "which state borders hawaii ",
            "qdmr": "return states ;return #1 that border hawaii",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'hawaii';",
            "denotation_gold": [],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'hawaii'",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border hawaii",
                "question": "which state borders hawaii ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'hawaii'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "hawaii"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border hawaii",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'hawaii'"
            }
        },
        {
            "example_id": "GEO_test_25",
            "db_id": "geo",
            "question": "how many people live in the capital of texas ",
            "qdmr": "return texas ;return capital of #1 ;return people who live in #2 ;return number of #3",
            "sql_gold": "select city.population from city where city.city_name = (select state.capital from state where state.state_name = 'texas');",
            "denotation_gold": [
                [
                    345496
                ]
            ],
            "sql_ground": "SELECT SUM(city.population) FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )",
            "denotation_ground": [
                [
                    345496
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return texas ;return capital of #1 ;return people who live in #2 ;return sum of #3",
                "question": "how many people live in the capital of texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.capital",
                                "city.city_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital people who live",
                            "people who live"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT SUM(city.population) FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(city.population)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.capital",
                                "city.city_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(city.population) FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' ) )"
            }
        },
        {
            "example_id": "GEO_test_250",
            "db_id": "geo",
            "question": "which state borders the most states ? ",
            "qdmr": "return states ;return states that #1 borders ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select border_info.border from border_info group by border_info.border having count(1) = (select max(cnt1) from (select border_info.border, count(1) as cnt1 from border_info group by border_info.border) tmp);",
            "denotation_gold": [
                [
                    "missouri"
                ],
                [
                    "tennessee"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(state.state_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return states that #1 borders ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which state borders the most states ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that  borders",
                            "states that  borders"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_251",
            "db_id": "geo",
            "question": "which state capital has the smallest population ? ",
            "qdmr": "return states ;return capitals of #1 ;return populations of #2 ;return #1 where #3 is the lowest",
            "sql_gold": "select city.city_name from city where city.population = (select min (city.population) from city,state where city.city_name=state.capital);",
            "denotation_gold": [
                [
                    "columbia"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY state.population ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return capitals of #1 ;return populations of #2 ;return #1 where #3 is the lowest",
                "question": "which state capital has the smallest population ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.state_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.state_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY border_info.state_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "border_info.state_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.state_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY border_info.state_name ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_252",
            "db_id": "geo",
            "question": "which state has the biggest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is biggest",
            "sql_gold": "select state.state_name from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is biggest",
                "question": "which state has the biggest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_253",
            "db_id": "geo",
            "question": "which state has the greatest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is highest",
            "sql_gold": "select state.state_name from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is highest",
                "question": "which state has the greatest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_254",
            "db_id": "geo",
            "question": "which state has the highest elevation ",
            "qdmr": "return states ;return elevations of #1 ;return #1 where #2 is highest",
            "sql_gold": "select highlow.state_name from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "pennsylvania"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "pennsylvania"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return elevations of #1 ;return #1 where #2 is highest",
                "question": "which state has the highest elevation ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_255",
            "db_id": "geo",
            "question": "which state has the highest point ",
            "qdmr": "return states ;return points of #1 ;return elevation of #2 ;return #1 where #3 is highest",
            "sql_gold": "select highlow.state_name from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "pennsylvania"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "pennsylvania"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return points of #1 ;return elevation of #2 ;return #1 where #3 is highest",
                "question": "which state has the highest point ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_256",
            "db_id": "geo",
            "question": "which state has the highest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the highest",
            "sql_gold": "select state.state_name from state where state.density = (select max(state.density) from state);",
            "denotation_gold": [
                [
                    "new jersey"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new jersey"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the highest",
                "question": "which state has the highest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_257",
            "db_id": "geo",
            "question": "which state has the lowest elevation ",
            "qdmr": "return states ;return elevations of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "select highlow.state_name from highlow where highlow.lowest_elevation = (select min (highlow.lowest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "louisiana"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.lowest_elevation ASC LIMIT 1",
            "denotation_ground": [
                [
                    "louisiana"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return elevations of #1 ;return #1 where #2 is the lowest",
                "question": "which state has the lowest elevation ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.lowest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states elevations",
                            "elevations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.lowest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.lowest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.lowest_elevation ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_258",
            "db_id": "geo",
            "question": "which state has the lowest point that borders idaho ? ",
            "qdmr": "return points ;return #1 that border idaho ;return elevation of #2 ;return #2 where #3 is lowest ;return state of #4",
            "sql_gold": "select highlow.state_name from highlow where highlow.lowest_elevation = (select min (highlow.lowest_elevation) from highlow where highlow.state_name in (select border_info.border from border_info where border_info.state_name = 'idaho') ) and highlow.state_name in ((select border_info.border from border_info where border_info.state_name = 'idaho'));",
            "denotation_gold": [],
            "sql_ground": "SELECT state.state_name FROM highlow, state, mountain, border_info WHERE highlow.state_name = state.state_name AND highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' ) AND border_info.state_name = 'idaho' ORDER BY mountain.mountain_altitude ASC LIMIT 1 )",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return points ;return #1 that border idaho ;return elevation of #2 ;return #2 where #3 is lowest ;return state of #4",
                "question": "which state has the lowest point that borders idaho ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.highest_point FROM highlow",
                        "op": "select",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho'",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "idaho"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that border idaho",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT mountain.mountain_altitude FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' )",
                        "op": "project",
                        "SELECT": [
                            "mountain.mountain_altitude"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "mountain.state_name"
                            ],
                            [
                                "highlow.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_point FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' ) AND border_info.state_name = 'idaho' ORDER BY mountain.mountain_altitude ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow",
                            "mountain",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "mountain.state_name"
                            ],
                            [
                                "highlow.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' )"
                            ],
                            [
                                "border_info.state_name",
                                "=",
                                "idaho"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "mountain.mountain_altitude"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that border idaho",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM highlow, state, mountain, border_info WHERE highlow.state_name = state.state_name AND highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' ) AND border_info.state_name = 'idaho' ORDER BY mountain.mountain_altitude ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "state",
                            "mountain",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "state.state_name"
                            ],
                            [
                                "highlow.state_name",
                                "mountain.state_name"
                            ],
                            [
                                "highlow.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' ) AND border_info.state_name = 'idaho' ORDER BY mountain.mountain_altitude ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM highlow, state, mountain, border_info WHERE highlow.state_name = state.state_name AND highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, mountain, border_info WHERE highlow.state_name = mountain.state_name AND highlow.state_name = border_info.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM highlow, border_info WHERE highlow.state_name = border_info.state_name AND border_info.state_name = 'idaho' ) AND border_info.state_name = 'idaho' ORDER BY mountain.mountain_altitude ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_259",
            "db_id": "geo",
            "question": "which state has the lowest population density ",
            "qdmr": "return states ;return population density of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "select state.state_name from state where state.density = (select min (state.density) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population density of #1 ;return #1 where #2 is the lowest",
                "question": "which state has the lowest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_26",
            "db_id": "geo",
            "question": "how many people live in the united states ",
            "qdmr": "return united states ;return people who live in #1 ;return number of #2",
            "sql_gold": "select sum(state.population) from state;",
            "denotation_gold": [
                [
                    225195124
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
            "denotation_ground": [
                [
                    225195124
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return united states ;return people who live in #1 ;return sum of #2",
                "question": "how many people live in the united states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states",
                            "united states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "united states people who live",
                            "people who live"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )"
            }
        },
        {
            "example_id": "GEO_test_260",
            "db_id": "geo",
            "question": "which state has the most major cities ? ",
            "qdmr": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select city.state_name from city where city.population  >  150000 group by city.state_name order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return major cities in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which state has the most major cities ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(city.city_name) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(city.city_name)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(city.city_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(city.city_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_261",
            "db_id": "geo",
            "question": "which state has the most major rivers ? ",
            "qdmr": "return rivers ;return #1 that are major ;return states of #2 ;return number of #2 for each #3 ;return #3 where #4 is highest",
            "sql_gold": "select river.traverse from river where river.length  >  750 group by river.traverse order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that are major ;return states of #2 ;return number of #2 for each #3 ;return #3 where #4 is highest",
                "question": "which state has the most major rivers ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that are major",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT COUNT(river.river_name) FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.river_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_262",
            "db_id": "geo",
            "question": "which state has the most major rivers running through it ? ",
            "qdmr": "return rivers ;return #1 that are major ;return states that #2 running through ;return number of #2 for each #3 ;return #3 where #4 is highest",
            "sql_gold": "select river.traverse from river where river.length  >  750 group by river.traverse order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY highlow.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 that are major ;return states that #2 running through ;return number of #2 for each #3 ;return #3 where #4 is highest",
                "question": "which state has the most major rivers running through it ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that are major",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that  running through",
                            "states that  running through"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT COUNT(river.river_name) FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY highlow.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "highlow.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY highlow.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "highlow.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.river_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states that  running through",
                            "states that  running through"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.state_name FROM highlow, river WHERE river.traverse = highlow.state_name AND river.river_name IN ( SELECT river.river_name FROM river ) GROUP BY highlow.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_263",
            "db_id": "geo",
            "question": "which state has the most population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is highest",
            "sql_gold": "select state.state_name from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "california"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "california"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is highest",
                "question": "which state has the most population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_264",
            "db_id": "geo",
            "question": "which state has the most rivers ? ",
            "qdmr": "return states ;return rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select river.traverse from river group by river.traverse order by count(1) desc limit 1;",
            "denotation_gold": [
                [
                    "colorado"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
            "denotation_ground": [
                [
                    "colorado"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return rivers of #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
                "question": "which state has the most rivers ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.river_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_265",
            "db_id": "geo",
            "question": "which state has the smallest average urban population ? ",
            "qdmr": "return states ;return urban populations of #1 ;return average of #2 for each #1 ;return #1 where #3 is lowest",
            "sql_gold": "select city.state_name from city group by city.state_name order by avg(city.population) limit 1;",
            "denotation_gold": [
                [
                    "wyoming"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY AVG(city.population) ASC LIMIT 1",
            "denotation_ground": [
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return urban populations of #1 ;return average of #2 for each #1 ;return #1 where #3 is lowest",
                "question": "which state has the smallest average urban population ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states urban populations",
                            "urban populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT AVG(city.population) FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "AVG(city.population)"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "avg",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY AVG(city.population) ASC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "AVG(city.population)"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY AVG(city.population) ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_266",
            "db_id": "geo",
            "question": "which state has the smallest population density ",
            "qdmr": "return states ;return population density of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "select state.state_name from state where state.density = (select min (state.density) from state);",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population density of #1 ;return #1 where #2 is the lowest",
                "question": "which state has the smallest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_267",
            "db_id": "geo",
            "question": "which state is mount mckinley in ",
            "qdmr": "return state ;return #1 that mount mckinley is in",
            "sql_gold": "select mountain.state_name from mountain where mountain.mountain_name = 'mckinley';",
            "denotation_gold": [
                [
                    "alaska"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND mountain.mountain_name = 'mckinley'",
            "denotation_ground": [
                [
                    "alaska"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return state ;return #1 that mount mckinley is in",
                "question": "which state is mount mckinley in ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND mountain.mountain_name = 'mckinley'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "mountain"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "mountain.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "mountain.mountain_name",
                                "=",
                                "mckinley"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state that mount mckinley is in",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, mountain WHERE state.state_name = mountain.state_name AND mountain.mountain_name = 'mckinley'"
            }
        },
        {
            "example_id": "GEO_test_268",
            "db_id": "geo",
            "question": "which state is the smallest ? ",
            "qdmr": "return states ;return size of #1 ;return #1 where #2 is the lowest",
            "sql_gold": "select state.state_name from state where state.area = (select min (state.area) from state);",
            "denotation_gold": [
                [
                    "district of columbia"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "district of columbia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return size of #1 ;return #1 where #2 is the lowest",
                "question": "which state is the smallest ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_269",
            "db_id": "geo",
            "question": "which states border illinois ",
            "qdmr": "return states ;return #1 that border illinois",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'illinois';",
            "denotation_gold": [
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "iowa"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'illinois'",
            "denotation_ground": [
                [
                    "wisconsin"
                ],
                [
                    "indiana"
                ],
                [
                    "kentucky"
                ],
                [
                    "missouri"
                ],
                [
                    "iowa"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border illinois",
                "question": "which states border illinois ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'illinois'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "illinois"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border illinois",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'illinois'"
            }
        },
        {
            "example_id": "GEO_test_27",
            "db_id": "geo",
            "question": "how many people reside in utah ",
            "qdmr": "return people ;return #1 that reside in utah ;return number of #2",
            "sql_gold": "select state.population from state where state.state_name = 'utah';",
            "denotation_gold": [
                [
                    1461000
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'utah'",
            "denotation_ground": [
                [
                    1461000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return people ;return #1 that reside in utah ;return sum of #2",
                "question": "how many people reside in utah ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.population FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name = 'utah'",
                        "op": "filter",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "utah"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "people that reside in utah",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'utah'",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "utah"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'utah'"
            }
        },
        {
            "example_id": "GEO_test_270",
            "db_id": "geo",
            "question": "which states border kentucky ",
            "qdmr": "return states ;return #1 that border kentucky",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = 'kentucky';",
            "denotation_gold": [
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'",
            "denotation_ground": [
                [
                    "indiana"
                ],
                [
                    "ohio"
                ],
                [
                    "west virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "tennessee"
                ],
                [
                    "missouri"
                ],
                [
                    "illinois"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border kentucky",
                "question": "which states border kentucky ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "kentucky"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border kentucky",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'kentucky'"
            }
        },
        {
            "example_id": "GEO_test_271",
            "db_id": "geo",
            "question": "which states border the missouri river ? ",
            "qdmr": "return states ;return #1 that border the missouri river",
            "sql_gold": "select border_info.border from border_info where border_info.state_name in (select river.traverse from river where river.river_name = 'missouri');",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "nebraska"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "kansas"
                ],
                [
                    "nebraska"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "missouri"
                ],
                [
                    "kansas"
                ],
                [
                    "colorado"
                ],
                [
                    "wyoming"
                ],
                [
                    "minnesota"
                ],
                [
                    "south dakota"
                ],
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "minnesota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'missouri'",
            "denotation_ground": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border the missouri river",
                "question": "which states border the missouri river ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT mountain.country_name FROM mountain",
                        "op": "select",
                        "SELECT": [
                            "mountain.country_name"
                        ],
                        "FROM": [
                            "mountain"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT mountain.country_name FROM mountain, river WHERE mountain.country_name = river.country_name AND river.river_name = 'missouri'",
                        "op": "filter",
                        "SELECT": [
                            "mountain.country_name"
                        ],
                        "FROM": [
                            "mountain",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "mountain.country_name",
                                "river.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "missouri"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border the missouri river",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT mountain.country_name FROM mountain, river WHERE mountain.country_name = river.country_name AND river.river_name = 'missouri'"
            }
        },
        {
            "example_id": "GEO_test_272",
            "db_id": "geo",
            "question": "which states capital city is the largest ? ",
            "qdmr": "return states ;return capital cities of #1 ;return size of #2 ;return #1 where #3 is largest",
            "sql_gold": "select city.state_name from city where city.population = (select max(city.population) from city,state where city.city_name=state.capital);",
            "denotation_gold": [
                [
                    "arizona"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "arizona"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return capital cities of #1 ;return size of #2 ;return #1 where #3 is largest",
                "question": "which states capital city is the largest ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.capital",
                                "city.city_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.capital",
                                "city.city_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.capital = city.city_name AND state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_273",
            "db_id": "geo",
            "question": "which states border the state with the smallest area ",
            "qdmr": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return border states of #3",
            "sql_gold": "select border_info.border from border_info where border_info.state_name = (select state.state_name from state where state.area = (select min (state.area) from state));",
            "denotation_gold": [
                [
                    "maryland"
                ],
                [
                    "virginia"
                ]
            ],
            "sql_ground": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    "maryland"
                ],
                [
                    "virginia"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return areas of #1 ;return #1 where #2 is smallest ;return border states of #3",
                "question": "which states border the state with the smallest area ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states areas",
                            "areas"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states border states",
                            "border states"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_274",
            "db_id": "geo",
            "question": "which states does the chattahoochee river run through ",
            "qdmr": "return states ;return #1 that the chattahoochee river run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'chattahoochee';",
            "denotation_gold": [
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'chattahoochee'",
            "denotation_ground": [
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that the chattahoochee river run through",
                "question": "which states does the chattahoochee river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'chattahoochee'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "chattahoochee"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the chattahoochee river run through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'chattahoochee'"
            }
        },
        {
            "example_id": "GEO_test_275",
            "db_id": "geo",
            "question": "which states does the longest river run through ",
            "qdmr": "return rivers ;return how long are #1 ;return #1 where #2 is the highest ;return states run through of #3",
            "sql_gold": "select river.traverse from river where river.length = (select max(river.length) from river);",
            "denotation_gold": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return how long are #1 ;return #1 where #2 is the highest ;return states run through of #3",
                "question": "which states does the longest river run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long are",
                            "how long are"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states run through",
                            "states run through"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river ) ORDER BY river.length DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_276",
            "db_id": "geo",
            "question": "which states does the mississippi run through ",
            "qdmr": "return states ;return #1 that the mississippi river run through",
            "sql_gold": "select river.traverse from river where river.river_name = 'mississippi';",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
            "denotation_ground": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that the mississippi river run through",
                "question": "which states does the mississippi run through ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that the mississippi river run through",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'"
            }
        },
        {
            "example_id": "GEO_test_277",
            "db_id": "geo",
            "question": "which states have a river ",
            "qdmr": "return states ;return #1 that have a river",
            "sql_gold": "select river.traverse from river;",
            "denotation_gold": [
                [
                    "minnesota"
                ],
                [
                    "wisconsin"
                ],
                [
                    "iowa"
                ],
                [
                    "illinois"
                ],
                [
                    "missouri"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "iowa"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "arizona"
                ],
                [
                    "nevada"
                ],
                [
                    "california"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "west virginia"
                ],
                [
                    "kentucky"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "ohio"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "colorado"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "arkansas"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "new hampshire"
                ],
                [
                    "vermont"
                ],
                [
                    "massachusetts"
                ],
                [
                    "connecticut"
                ],
                [
                    "new york"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "new jersey"
                ],
                [
                    "delaware"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "south dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "wyoming"
                ],
                [
                    "idaho"
                ],
                [
                    "oregon"
                ],
                [
                    "washington"
                ],
                [
                    "washington"
                ],
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "florida"
                ],
                [
                    "new mexico"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "wyoming"
                ],
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "colorado"
                ],
                [
                    "wyoming"
                ],
                [
                    "nebraska"
                ],
                [
                    "west virginia"
                ],
                [
                    "maryland"
                ],
                [
                    "virginia"
                ],
                [
                    "district of columbia"
                ],
                [
                    "colorado"
                ],
                [
                    "nebraska"
                ],
                [
                    "kansas"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "colorado"
                ],
                [
                    "utah"
                ],
                [
                    "tennessee"
                ],
                [
                    "alabama"
                ],
                [
                    "tennessee"
                ],
                [
                    "kentucky"
                ],
                [
                    "ohio"
                ],
                [
                    "indiana"
                ],
                [
                    "illinois"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "north dakota"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "new york"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "wyoming"
                ],
                [
                    "north dakota"
                ],
                [
                    "montana"
                ],
                [
                    "idaho"
                ],
                [
                    "washington"
                ],
                [
                    "oregon"
                ],
                [
                    "kentucky"
                ],
                [
                    "tennessee"
                ],
                [
                    "kentucky"
                ],
                [
                    "north dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "new mexico"
                ],
                [
                    "arizona"
                ],
                [
                    "new york"
                ],
                [
                    "new jersey"
                ],
                [
                    "kansas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "wyoming"
                ],
                [
                    "nebraska"
                ],
                [
                    "arkansas"
                ],
                [
                    "louisiana"
                ],
                [
                    "michigan"
                ],
                [
                    "louisiana"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ],
                [
                    "wyoming"
                ],
                [
                    "montana"
                ],
                [
                    "virginia"
                ],
                [
                    "north carolina"
                ],
                [
                    "wisconsin"
                ],
                [
                    "illinois"
                ],
                [
                    "colorado"
                ],
                [
                    "kansas"
                ],
                [
                    "colorado"
                ],
                [
                    "nebraska"
                ],
                [
                    "missouri"
                ],
                [
                    "arkansas"
                ],
                [
                    "mississippi"
                ],
                [
                    "alabama"
                ],
                [
                    "texas"
                ],
                [
                    "oklahoma"
                ],
                [
                    "north carolina"
                ],
                [
                    "south carolina"
                ],
                [
                    "arkansas"
                ],
                [
                    "missouri"
                ],
                [
                    "arkansas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse",
            "denotation_ground": [
                [
                    "alabama"
                ],
                [
                    "alabama"
                ],
                [
                    "arizona"
                ],
                [
                    "arizona"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "california"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "connecticut"
                ],
                [
                    "delaware"
                ],
                [
                    "district of columbia"
                ],
                [
                    "florida"
                ],
                [
                    "georgia"
                ],
                [
                    "georgia"
                ],
                [
                    "idaho"
                ],
                [
                    "idaho"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "illinois"
                ],
                [
                    "indiana"
                ],
                [
                    "indiana"
                ],
                [
                    "iowa"
                ],
                [
                    "iowa"
                ],
                [
                    "kansas"
                ],
                [
                    "kansas"
                ],
                [
                    "kansas"
                ],
                [
                    "kansas"
                ],
                [
                    "kansas"
                ],
                [
                    "kentucky"
                ],
                [
                    "kentucky"
                ],
                [
                    "kentucky"
                ],
                [
                    "kentucky"
                ],
                [
                    "kentucky"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "louisiana"
                ],
                [
                    "maryland"
                ],
                [
                    "massachusetts"
                ],
                [
                    "michigan"
                ],
                [
                    "minnesota"
                ],
                [
                    "mississippi"
                ],
                [
                    "mississippi"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "missouri"
                ],
                [
                    "montana"
                ],
                [
                    "montana"
                ],
                [
                    "montana"
                ],
                [
                    "montana"
                ],
                [
                    "montana"
                ],
                [
                    "montana"
                ],
                [
                    "nebraska"
                ],
                [
                    "nebraska"
                ],
                [
                    "nebraska"
                ],
                [
                    "nebraska"
                ],
                [
                    "nebraska"
                ],
                [
                    "nevada"
                ],
                [
                    "new hampshire"
                ],
                [
                    "new jersey"
                ],
                [
                    "new jersey"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new mexico"
                ],
                [
                    "new york"
                ],
                [
                    "new york"
                ],
                [
                    "new york"
                ],
                [
                    "north carolina"
                ],
                [
                    "north carolina"
                ],
                [
                    "north dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "north dakota"
                ],
                [
                    "ohio"
                ],
                [
                    "ohio"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oklahoma"
                ],
                [
                    "oregon"
                ],
                [
                    "oregon"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "pennsylvania"
                ],
                [
                    "south carolina"
                ],
                [
                    "south dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "south dakota"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "tennessee"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "texas"
                ],
                [
                    "utah"
                ],
                [
                    "utah"
                ],
                [
                    "utah"
                ],
                [
                    "utah"
                ],
                [
                    "vermont"
                ],
                [
                    "virginia"
                ],
                [
                    "virginia"
                ],
                [
                    "washington"
                ],
                [
                    "washington"
                ],
                [
                    "washington"
                ],
                [
                    "west virginia"
                ],
                [
                    "west virginia"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wisconsin"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ],
                [
                    "wyoming"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that have a river",
                "question": "which states have a river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that have a river",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse"
            }
        },
        {
            "example_id": "GEO_test_278",
            "db_id": "geo",
            "question": "which states have cities named austin ",
            "qdmr": "return cities ;return #1 that are named austin ;return states of #2",
            "sql_gold": "select city.state_name from city where city.city_name = 'austin';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'austin' )",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 that are named austin ;return states of #2",
                "question": "which states have cities named austin ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'austin'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "austin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are named austin",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'austin' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'austin' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE city.state_name = state.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'austin' )"
            }
        },
        {
            "example_id": "GEO_test_279",
            "db_id": "geo",
            "question": "which us city has the highest population density ? ",
            "qdmr": "return us cities ;return population density of #1 ;return #1 where #2 is highest",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return us cities ;return population density of #1 ;return #1 where #2 is highest",
                "question": "which us city has the highest population density ? ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "us cities",
                            "us cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "us cities population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "us cities",
                            "us cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_28",
            "db_id": "geo",
            "question": "how many residents live in texas ",
            "qdmr": "return residents ;return #1 in texas ;return number of #2",
            "sql_gold": "select state.population from state where state.state_name = 'texas';",
            "denotation_gold": [
                [
                    14229000
                ]
            ],
            "sql_ground": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'texas'",
            "denotation_ground": [
                [
                    14229000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return residents ;return #1 in texas ;return sum of #2",
                "question": "how many residents live in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.population FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "residents",
                            "residents"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "residents in texas",
                            "residents"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'texas'",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(state.population)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(state.population) FROM state WHERE state.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_29",
            "db_id": "geo",
            "question": "how many rivers are in iowa ",
            "qdmr": "return rivers ;return #1 in iowa ;return number of #2",
            "sql_gold": "select count(river.river_name) from river where river.traverse = 'iowa';",
            "denotation_gold": [
                [
                    2
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'iowa'",
            "denotation_ground": [
                [
                    2
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in iowa ;return number of #2",
                "question": "how many rivers are in iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in iowa",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'iowa'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse = 'iowa'"
            }
        },
        {
            "example_id": "GEO_test_3",
            "db_id": "geo",
            "question": "how high is mount mckinley ",
            "qdmr": "return height of mount mckinley",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.highest_point = 'mount mckinley';",
            "denotation_gold": [
                [
                    "6194"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'",
            "denotation_ground": [
                [
                    "mount mckinley"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return height of mount mckinley",
                "question": "how high is mount mckinley ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'",
                        "op": "select",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "=",
                                "mount mckinley"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'"
            }
        },
        {
            "example_id": "GEO_test_30",
            "db_id": "geo",
            "question": "how many rivers are in the state that has the most rivers ",
            "qdmr": "return states ;return rivers in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers in #4 ;return number of #5",
            "sql_gold": "select max(tmp.rivers) from(select count(river.river_name) as rivers,river.traverse from river group by river.traverse) as tmp;",
            "denotation_gold": [
                [
                    11
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    11
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return rivers in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest ;return rivers in #4 ;return number of #5",
                "question": "how many rivers are in the state that has the most rivers ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name",
                        "op": "group",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1",
                        "op": "superlative_group",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [
                            "state.state_name"
                        ],
                        "HAVING": [],
                        "ORDER BY": [
                            "COUNT(river.river_name)"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) GROUP BY state.state_name ORDER BY COUNT(river.river_name) DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_31",
            "db_id": "geo",
            "question": "how many rivers does colorado have ",
            "qdmr": "return colorado ;return rivers in #1 ;return number of #2",
            "sql_gold": "select count(river.river_name) from river where river.traverse = 'colorado';",
            "denotation_gold": [
                [
                    11
                ]
            ],
            "sql_ground": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse IN ( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )",
            "denotation_ground": [
                [
                    11
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado ;return rivers in #1 ;return number of #2",
                "question": "how many rivers does colorado have ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.traverse FROM river WHERE river.traverse = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.traverse"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse IN ( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "IN",
                                "( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse IN ( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(river.river_name)"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "IN",
                                "( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(river.river_name) FROM river WHERE river.traverse IN ( SELECT river.traverse FROM river WHERE river.traverse = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_32",
            "db_id": "geo",
            "question": "how many states are in the usa ",
            "qdmr": "return states ;return #1 in usa ;return number of #2",
            "sql_gold": "select count(state.state_name) from state;",
            "denotation_gold": [
                [
                    51
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state",
            "denotation_ground": [
                [
                    51
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 in usa ;return number of #2",
                "question": "how many states are in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states in usa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state"
            }
        },
        {
            "example_id": "GEO_test_33",
            "db_id": "geo",
            "question": "how many states are there ",
            "qdmr": "return states ;return number of #1",
            "sql_gold": "select count(state.state_name) from state;",
            "denotation_gold": [
                [
                    51
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state",
            "denotation_ground": [
                [
                    51
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return number of #1",
                "question": "how many states are there ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state"
            }
        },
        {
            "example_id": "GEO_test_34",
            "db_id": "geo",
            "question": "how many states are there in the usa ",
            "qdmr": "return states ;return #1 in usa ;return number of #2",
            "sql_gold": "select count(state.state_name) from state;",
            "denotation_gold": [
                [
                    51
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state",
            "denotation_ground": [
                [
                    51
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 in usa ;return number of #2",
                "question": "how many states are there in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states in usa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state"
            }
        },
        {
            "example_id": "GEO_test_35",
            "db_id": "geo",
            "question": "how many states border iowa ",
            "qdmr": "return states ;return #1 that border iowa ;return number of #2",
            "sql_gold": "select count(border_info.border) from border_info where border_info.state_name = 'iowa';",
            "denotation_gold": [
                [
                    6
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
            "denotation_ground": [
                [
                    6
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border iowa ;return number of #2",
                "question": "how many states border iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border iowa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'"
            }
        },
        {
            "example_id": "GEO_test_36",
            "db_id": "geo",
            "question": "how many states border the state with the largest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is highest ;return states that border #3 ;return number of #4",
            "sql_gold": "select count(border_info.border) from border_info where border_info.state_name in (select state.state_name from state where state.population = (select max(state.population) from state));",
            "denotation_gold": [
                [
                    3
                ]
            ],
            "sql_ground": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    3
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is highest ;return states that border #3 ;return number of #4",
                "question": "how many states border the state with the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT border_info.state_name FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states states that border",
                            "states that border"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(border_info.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(border_info.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_37",
            "db_id": "geo",
            "question": "how many states does tennessee border ",
            "qdmr": "return states ;return #1 that tennessee border ;return number of #2",
            "sql_gold": "select count(border_info.border) from border_info where border_info.state_name = 'tennessee';",
            "denotation_gold": [
                [
                    8
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'tennessee'",
            "denotation_ground": [
                [
                    8
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that tennessee border ;return number of #2",
                "question": "how many states does tennessee border ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'tennessee'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "tennessee"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that tennessee border",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'tennessee'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "tennessee"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'tennessee'"
            }
        },
        {
            "example_id": "GEO_test_38",
            "db_id": "geo",
            "question": "how many states does usa have ",
            "qdmr": "return states ;return #1 in usa ;return number of #2",
            "sql_gold": "select count(state.state_name) from state;",
            "denotation_gold": [
                [
                    51
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state",
            "denotation_ground": [
                [
                    51
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 in usa ;return number of #2",
                "question": "how many states does usa have ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states in usa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state"
            }
        },
        {
            "example_id": "GEO_test_39",
            "db_id": "geo",
            "question": "how many states do not have rivers ",
            "qdmr": "return states ;return #1 with rivers ;return #1 besides #2 ;return number of #3",
            "sql_gold": "select count(distinct state.state_name) from state where state.state_name not in (select river.traverse from river);",
            "denotation_gold": [
                [
                    4
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse )",
            "denotation_ground": [
                [
                    4
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 with rivers ;return #1 besides #2 ;return number of #3",
                "question": "how many states do not have rivers ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states with rivers",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse )",
                        "op": "discard",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "state.state_name",
                                "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [
                            [
                                "state.state_name",
                                "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse"
                            ]
                        ],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state WHERE state.state_name NOT IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse )"
            }
        },
        {
            "example_id": "GEO_test_4",
            "db_id": "geo",
            "question": "how high is the highest point in america ",
            "qdmr": "return america ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
            "sql_gold": "select max(highlow.highest_elevation) from highlow;",
            "denotation_gold": [
                [
                    "979"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "979"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return america ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
                "question": "how high is the highest point in america ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT lake.country_name FROM lake",
                        "op": "select",
                        "SELECT": [
                            "lake.country_name"
                        ],
                        "FROM": [
                            "lake"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "america",
                            "america"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "america points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "lake.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) )"
                            ],
                            [
                                "lake.country_name",
                                "IN",
                                "( SELECT lake.country_name FROM lake )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "america points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow, lake WHERE lake.state_name = highlow.state_name AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ) AND lake.country_name IN ( SELECT lake.country_name FROM lake ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_40",
            "db_id": "geo",
            "question": "how many states have a higher point than the highest point of the state with the largest capital city in the us ",
            "qdmr": "return states ;return capital cities of #1 ;return #1 where #2 is largest ;return points of #3 ;return elevation of #4 ;return highest of #5 ;return elevation of #1 ;return #1 where #7 is higher than #6 ;return number of #8",
            "sql_gold": "select count(highlow.state_name) from highlow where highlow.highest_elevation  > (select highlow.highest_elevation from highlow where highlow.state_name = (select state.state_name from state where state.capital = (select city.city_name from city where city.population = (select max(city.population) from city))));",
            "denotation_gold": [
                [
                    0
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.highest_elevation > ( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )",
            "denotation_ground": [
                [
                    0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return capital cities of #1 ;return #1 where #2 is largest ;return points of #3 ;return elevation of #4 ;return highest of #5 ;return elevation of #1 ;return #1 where #7 is higher than #6 ;return number of #8",
                "question": "how many states have a higher point than the highest point of the state with the largest capital city in the us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.capital"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    },
                    "6": {
                        "SQL": "SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) )",
                        "op": "aggregate",
                        "SELECT": [
                            "MAX(highlow.highest_point)"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) )"
                            ]
                        ],
                        "AGGREGATE": "max",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "7": {
                        "SQL": "SELECT highlow.highest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "8": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.highest_elevation > ( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )",
                        "op": "comparative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "highlow.highest_elevation",
                                ">",
                                "( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "9": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.highest_elevation > ( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ],
                            [
                                "highlow.highest_elevation",
                                ">",
                                "( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) AND highlow.highest_elevation > ( SELECT MAX(highlow.highest_point) FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.capital DESC LIMIT 1 ) ) )"
            }
        },
        {
            "example_id": "GEO_test_41",
            "db_id": "geo",
            "question": "how much population does texas have ",
            "qdmr": "return texas ;return population of #1",
            "sql_gold": "select state.population from state where state.state_name = 'texas';",
            "denotation_gold": [
                [
                    14229000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
            "denotation_ground": [
                [
                    14229000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return texas ;return population of #1",
                "question": "how much population does texas have ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state population",
                            "population"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_42",
            "db_id": "geo",
            "question": "how tall is mount mckinley ",
            "qdmr": "return height of mount mckinley",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.highest_point = 'mount mckinley';",
            "denotation_gold": [
                [
                    "6194"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'",
            "denotation_ground": [
                [
                    "mount mckinley"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return height of mount mckinley",
                "question": "how tall is mount mckinley ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'",
                        "op": "select",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "=",
                                "mount mckinley"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM highlow WHERE highlow.highest_point = 'mount mckinley'"
            }
        },
        {
            "example_id": "GEO_test_43",
            "db_id": "geo",
            "question": "how tall is the highest point in montana ",
            "qdmr": "return montana ;return points in #1 ;return #2 that is the highest",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.state_name = 'montana';",
            "denotation_gold": [
                [
                    "3901"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
            "denotation_ground": [
                [
                    "3901"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return montana ;return points in #1 ;return #2 that is the highest",
                "question": "how tall is the highest point in montana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "montana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )",
                        "op": "filter",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points that is the highest",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'montana' )"
            }
        },
        {
            "example_id": "GEO_test_44",
            "db_id": "geo",
            "question": "iowa borders how many states ",
            "qdmr": "return states ;return #1 that border iowa ;return number of #2",
            "sql_gold": "select count(border_info.border) from border_info where border_info.state_name = 'iowa';",
            "denotation_gold": [
                [
                    6
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
            "denotation_ground": [
                [
                    6
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border iowa ;return number of #2",
                "question": "iowa borders how many states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border iowa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'"
            }
        },
        {
            "example_id": "GEO_test_45",
            "db_id": "geo",
            "question": "name all the rivers in colorado ",
            "qdmr": "return rivers ;return #1 in colorado ;return names of #2",
            "sql_gold": "select river.river_name from river where river.traverse = 'colorado';",
            "denotation_gold": [
                [
                    "colorado"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "green"
                ],
                [
                    "north platte"
                ],
                [
                    "republican"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "smoky hill"
                ],
                [
                    "south platte"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'colorado' )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "colorado"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "arkansas"
                ],
                [
                    "canadian"
                ],
                [
                    "canadian"
                ],
                [
                    "canadian"
                ],
                [
                    "canadian"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "green"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "north platte"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "republican"
                ],
                [
                    "rio grande"
                ],
                [
                    "rio grande"
                ],
                [
                    "rio grande"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "san juan"
                ],
                [
                    "smoky hill"
                ],
                [
                    "smoky hill"
                ],
                [
                    "south platte"
                ],
                [
                    "south platte"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in colorado ;return names of #2",
                "question": "name all the rivers in colorado ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'colorado'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in colorado",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers names",
                            "names"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_46",
            "db_id": "geo",
            "question": "name the major rivers in florida ",
            "qdmr": "return rivers ;return #1 in florida ;return #2 that are major ;return names of #3",
            "sql_gold": "select river.river_name from river where river.traverse = 'florida' and river.length > 750;",
            "denotation_gold": [],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )",
            "denotation_ground": [
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ],
                [
                    "chattahoochee"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in florida ;return #2 that are major ;return names of #3",
                "question": "name the major rivers in florida ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'florida'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in florida",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'florida'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that are major",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT lake.area FROM lake, river WHERE river.country_name = lake.country_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )",
                        "op": "project",
                        "SELECT": [
                            "lake.area"
                        ],
                        "FROM": [
                            "lake",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.country_name",
                                "lake.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers names",
                            "names"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT lake.area FROM lake, river WHERE river.country_name = lake.country_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'florida' )"
            }
        },
        {
            "example_id": "GEO_test_47",
            "db_id": "geo",
            "question": "number of people in boulder ",
            "qdmr": "return boulder ;return people in #1 ;return number of #2",
            "sql_gold": "select city.population from city where city.city_name = 'boulder';",
            "denotation_gold": [
                [
                    76685
                ]
            ],
            "sql_ground": "SELECT SUM(city.population) FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )",
            "denotation_ground": [
                [
                    76685
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return boulder ;return people in #1 ;return sum of #2",
                "question": "number of people in boulder ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name = 'boulder'",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "boulder"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city",
                            "city"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "city people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT SUM(city.population) FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )",
                        "op": "aggregate",
                        "SELECT": [
                            "SUM(city.population)"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )"
                            ]
                        ],
                        "AGGREGATE": "sum",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT SUM(city.population) FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.city_name = 'boulder' )"
            }
        },
        {
            "example_id": "GEO_test_48",
            "db_id": "geo",
            "question": "number of states bordering iowa ",
            "qdmr": "return states ;return #1 bordering iowa ;return number of #2",
            "sql_gold": "select count(border_info.border) from border_info where border_info.state_name = 'iowa';",
            "denotation_gold": [
                [
                    6
                ]
            ],
            "sql_ground": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
            "denotation_ground": [
                [
                    6
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 bordering iowa ;return number of #2",
                "question": "number of states bordering iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states bordering iowa",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'",
                        "op": "aggregate",
                        "SELECT": [
                            "COUNT(state.state_name)"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": "count",
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "",
                            ""
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT COUNT(state.state_name) FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'iowa'"
            }
        },
        {
            "example_id": "GEO_test_49",
            "db_id": "geo",
            "question": "rivers in new york ",
            "qdmr": "return rivers ;return #1 in new york",
            "sql_gold": "select river.river_name from river where river.traverse = 'new york';",
            "denotation_gold": [
                [
                    "delaware"
                ],
                [
                    "allegheny"
                ],
                [
                    "hudson"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
            "denotation_ground": [
                [
                    "delaware"
                ],
                [
                    "allegheny"
                ],
                [
                    "hudson"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in new york",
                "question": "rivers in new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in new york",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'new york'"
            }
        },
        {
            "example_id": "GEO_test_5",
            "db_id": "geo",
            "question": "how high is the highest point of alabama ",
            "qdmr": "return alabama ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
            "sql_gold": "select highlow.highest_elevation from highlow where highlow.state_name = 'alabama';",
            "denotation_gold": [
                [
                    "734"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "734"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return alabama ;return points of #1 ;return elevation of #2 ;return #2 where #3 is the highest",
                "question": "how high is the highest point of alabama ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama'",
                        "op": "select",
                        "SELECT": [
                            "highlow.state_name"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "=",
                                "alabama"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow",
                            "highlow"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "highlow"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "highlow.highest_elevation",
                                "IN",
                                "( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) )"
                            ],
                            [
                                "highlow.state_name",
                                "IN",
                                "( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "highlow points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_elevation FROM highlow WHERE highlow.highest_elevation IN ( SELECT highlow.highest_elevation FROM highlow WHERE highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ) AND highlow.state_name IN ( SELECT highlow.state_name FROM highlow WHERE highlow.state_name = 'alabama' ) ORDER BY highlow.highest_elevation DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_50",
            "db_id": "geo",
            "question": "san antonio is in what state ",
            "qdmr": "return states ;return #1 that san antonio is in",
            "sql_gold": "select city.state_name from city where city.city_name = 'san antonio';",
            "denotation_gold": [
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'san antonio'",
            "denotation_ground": [
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that san antonio is in",
                "question": "san antonio is in what state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'san antonio'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "=",
                                "san antonio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that san antonio is in",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name = 'san antonio'"
            }
        },
        {
            "example_id": "GEO_test_51",
            "db_id": "geo",
            "question": "tell me what cities are in texas ",
            "qdmr": "return cities ;return #1 in texas",
            "sql_gold": "select city.city_name from city where city.state_name = 'texas';",
            "denotation_gold": [
                [
                    "houston"
                ],
                [
                    "dallas"
                ],
                [
                    "san antonio"
                ],
                [
                    "el paso"
                ],
                [
                    "fort worth"
                ],
                [
                    "austin"
                ],
                [
                    "corpus christi"
                ],
                [
                    "lubbock"
                ],
                [
                    "arlington"
                ],
                [
                    "amarillo"
                ],
                [
                    "garland"
                ],
                [
                    "beaumont"
                ],
                [
                    "pasadena"
                ],
                [
                    "irving"
                ],
                [
                    "waco"
                ],
                [
                    "abilene"
                ],
                [
                    "wichita falls"
                ],
                [
                    "laredo"
                ],
                [
                    "odessa"
                ],
                [
                    "brownsville"
                ],
                [
                    "san angelo"
                ],
                [
                    "richardson"
                ],
                [
                    "plano"
                ],
                [
                    "grand prairie"
                ],
                [
                    "midland"
                ],
                [
                    "tyler"
                ],
                [
                    "mesquite"
                ],
                [
                    "mcallen"
                ],
                [
                    "longview"
                ],
                [
                    "port arthur"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'texas'",
            "denotation_ground": [
                [
                    "houston"
                ],
                [
                    "dallas"
                ],
                [
                    "san antonio"
                ],
                [
                    "el paso"
                ],
                [
                    "fort worth"
                ],
                [
                    "austin"
                ],
                [
                    "corpus christi"
                ],
                [
                    "lubbock"
                ],
                [
                    "arlington"
                ],
                [
                    "amarillo"
                ],
                [
                    "garland"
                ],
                [
                    "beaumont"
                ],
                [
                    "pasadena"
                ],
                [
                    "irving"
                ],
                [
                    "waco"
                ],
                [
                    "abilene"
                ],
                [
                    "wichita falls"
                ],
                [
                    "laredo"
                ],
                [
                    "odessa"
                ],
                [
                    "brownsville"
                ],
                [
                    "san angelo"
                ],
                [
                    "richardson"
                ],
                [
                    "plano"
                ],
                [
                    "grand prairie"
                ],
                [
                    "midland"
                ],
                [
                    "tyler"
                ],
                [
                    "mesquite"
                ],
                [
                    "mcallen"
                ],
                [
                    "longview"
                ],
                [
                    "port arthur"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in texas",
                "question": "tell me what cities are in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in texas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_52",
            "db_id": "geo",
            "question": "through which states does the longest river in texas run ",
            "qdmr": "return rivers ;return #1 in texas ;return how long are #2 ;return #2 where #3 is the highest ;return states run through of #4",
            "sql_gold": "select river.traverse from river where river.length = (select max(river.length) from river where river.traverse = 'texas');",
            "denotation_gold": [
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ]
            ],
            "sql_ground": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' ) AND river.traverse = 'texas' ORDER BY river.length DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "colorado"
                ],
                [
                    "new mexico"
                ],
                [
                    "texas"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in texas ;return how long are #2 ;return #2 where #3 is the highest ;return states run through of #4",
                "question": "through which states does the longest river in texas run ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers how long are",
                            "how long are"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' ) AND river.traverse = 'texas' ORDER BY river.length DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.traverse = 'texas' )"
                            ],
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.length"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' ) AND river.traverse = 'texas' ORDER BY river.length DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' ) AND river.traverse = 'texas' ORDER BY river.length DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers states run through",
                            "states run through"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.traverse = 'texas' ) AND river.traverse = 'texas' ORDER BY river.length DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_53",
            "db_id": "geo",
            "question": "what are all the rivers in texas ",
            "qdmr": "return rivers ;return #1 in texas",
            "sql_gold": "select river.river_name from river where river.traverse = 'texas';",
            "denotation_gold": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
            "denotation_ground": [
                [
                    "red"
                ],
                [
                    "canadian"
                ],
                [
                    "rio grande"
                ],
                [
                    "pecos"
                ],
                [
                    "washita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in texas",
                "question": "what are all the rivers in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in texas",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_54",
            "db_id": "geo",
            "question": "what are the capital city in texas ",
            "qdmr": "return capital cities ;return #1 in texas",
            "sql_gold": "select state.capital from state where state.state_name = 'texas';",
            "denotation_gold": [
                [
                    "austin"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name = 'texas'",
            "denotation_ground": [
                [
                    "austin"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return capital cities ;return #1 in texas",
                "question": "what are the capital city in texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.capital FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities in texas",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name = 'texas'"
            }
        },
        {
            "example_id": "GEO_test_55",
            "db_id": "geo",
            "question": "what are the capitals of states that border missouri ",
            "qdmr": "return states ;return #1 that border missouri ;return capitals of #2",
            "sql_gold": "select state.capital from state,border_info where border_info.border=state.state_name and border_info.state_name = 'missouri';",
            "denotation_gold": [
                [
                    "des moines"
                ],
                [
                    "springfield"
                ],
                [
                    "frankfort"
                ],
                [
                    "nashville"
                ],
                [
                    "little rock"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "topeka"
                ],
                [
                    "lincoln"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'missouri' )",
            "denotation_ground": [
                [
                    "little rock"
                ],
                [
                    "little rock"
                ],
                [
                    "little rock"
                ],
                [
                    "little rock"
                ],
                [
                    "little rock"
                ],
                [
                    "little rock"
                ],
                [
                    "springfield"
                ],
                [
                    "springfield"
                ],
                [
                    "springfield"
                ],
                [
                    "springfield"
                ],
                [
                    "springfield"
                ],
                [
                    "des moines"
                ],
                [
                    "des moines"
                ],
                [
                    "des moines"
                ],
                [
                    "des moines"
                ],
                [
                    "des moines"
                ],
                [
                    "des moines"
                ],
                [
                    "topeka"
                ],
                [
                    "topeka"
                ],
                [
                    "topeka"
                ],
                [
                    "topeka"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "frankfort"
                ],
                [
                    "lincoln"
                ],
                [
                    "lincoln"
                ],
                [
                    "lincoln"
                ],
                [
                    "lincoln"
                ],
                [
                    "lincoln"
                ],
                [
                    "lincoln"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ],
                [
                    "nashville"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that border missouri ;return capitals of #2",
                "question": "what are the capitals of states that border missouri ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'missouri'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "missouri"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that border missouri",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.capital FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'missouri' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "border_info.border"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'missouri' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state, border_info WHERE state.state_name = border_info.border AND state.state_name IN ( SELECT state.state_name FROM state, border_info WHERE state.state_name = border_info.border AND border_info.state_name = 'missouri' )"
            }
        },
        {
            "example_id": "GEO_test_56",
            "db_id": "geo",
            "question": "what are the cities in states through which the mississippi runs ",
            "qdmr": "return states ;return #1 through which the mississippi runs ;return cities in #2",
            "sql_gold": "select city.city_name from city where city.state_name in (select river.traverse from river where river.river_name = 'mississippi');",
            "denotation_gold": [
                [
                    "little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "north little rock"
                ],
                [
                    "chicago"
                ],
                [
                    "rockford"
                ],
                [
                    "peoria"
                ],
                [
                    "springfield"
                ],
                [
                    "decatur"
                ],
                [
                    "aurora"
                ],
                [
                    "joliet"
                ],
                [
                    "evanston"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "elgin"
                ],
                [
                    "cicero"
                ],
                [
                    "oak lawn"
                ],
                [
                    "skokie"
                ],
                [
                    "champaign"
                ],
                [
                    "des moines"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "dubuque"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "new orleans"
                ],
                [
                    "baton rouge"
                ],
                [
                    "shreveport"
                ],
                [
                    "metairie"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "kenner"
                ],
                [
                    "monroe"
                ],
                [
                    "minneapolis"
                ],
                [
                    "st. paul"
                ],
                [
                    "duluth"
                ],
                [
                    "bloomington"
                ],
                [
                    "rochester"
                ],
                [
                    "jackson"
                ],
                [
                    "st. louis"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "independence"
                ],
                [
                    "st. joseph"
                ],
                [
                    "columbia"
                ],
                [
                    "memphis"
                ],
                [
                    "nashville"
                ],
                [
                    "knoxville"
                ],
                [
                    "chattanooga"
                ],
                [
                    "milwaukee"
                ],
                [
                    "madison"
                ],
                [
                    "green bay"
                ],
                [
                    "racine"
                ],
                [
                    "kenosha"
                ],
                [
                    "west allis"
                ],
                [
                    "appleton"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
            "denotation_ground": [
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "des moines"
                ],
                [
                    "dubuque"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "des moines"
                ],
                [
                    "dubuque"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "bloomington"
                ],
                [
                    "duluth"
                ],
                [
                    "minneapolis"
                ],
                [
                    "rochester"
                ],
                [
                    "st. paul"
                ],
                [
                    "jackson"
                ],
                [
                    "jackson"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "chattanooga"
                ],
                [
                    "knoxville"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 through which the mississippi runs ;return cities in #2",
                "question": "what are the cities in states through which the mississippi runs ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states through which the mississippi runs",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_57",
            "db_id": "geo",
            "question": "what are the cities of the state with the highest point ",
            "qdmr": "return states ;return points of #1 ;return elevation of #2 ;return #1 where #3 is highest ;return cities of #4",
            "sql_gold": "select city.city_name from city where city.state_name in (select highlow.state_name from highlow where highlow.highest_elevation = (select max(highlow.highest_elevation) from highlow));",
            "denotation_gold": [
                [
                    "philadelphia"
                ],
                [
                    "pittsburgh"
                ],
                [
                    "erie"
                ],
                [
                    "allentown"
                ],
                [
                    "scranton"
                ],
                [
                    "upper darby"
                ],
                [
                    "reading"
                ],
                [
                    "bethlehem"
                ],
                [
                    "lower merion"
                ],
                [
                    "abingdon"
                ],
                [
                    "bristol township"
                ],
                [
                    "penn hills"
                ],
                [
                    "altoona"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM state, highlow, city WHERE state.state_name = city.state_name AND state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "abingdon"
                ],
                [
                    "allentown"
                ],
                [
                    "altoona"
                ],
                [
                    "bethlehem"
                ],
                [
                    "bristol township"
                ],
                [
                    "erie"
                ],
                [
                    "lower merion"
                ],
                [
                    "penn hills"
                ],
                [
                    "philadelphia"
                ],
                [
                    "pittsburgh"
                ],
                [
                    "reading"
                ],
                [
                    "scranton"
                ],
                [
                    "upper darby"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return points of #1 ;return elevation of #2 ;return #1 where #3 is highest ;return cities of #4",
                "question": "what are the cities of the state with the highest point ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.highest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.highest_elevation"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT city.city_name FROM state, highlow, city WHERE state.state_name = city.state_name AND state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM state, highlow, city WHERE state.state_name = city.state_name AND state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.highest_elevation DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_58",
            "db_id": "geo",
            "question": "what are the highest points of all the states ",
            "qdmr": "return states ;return points of #1 ;return elevation of #2 ;return #2 where #3 is highest",
            "sql_gold": "select highlow.highest_point from highlow;",
            "denotation_gold": [
                [
                    "cheaha mountain"
                ],
                [
                    "mount mckinley"
                ],
                [
                    "humphreys peak"
                ],
                [
                    "magazine mountain"
                ],
                [
                    "mount whitney"
                ],
                [
                    "mount elbert"
                ],
                [
                    "mount frissell"
                ],
                [
                    "centerville"
                ],
                [
                    "tenleytown"
                ],
                [
                    "walton county"
                ],
                [
                    "brasstown bald"
                ],
                [
                    "mauna kea"
                ],
                [
                    "borah peak"
                ],
                [
                    "charles mound"
                ],
                [
                    "franklin township"
                ],
                [
                    "ocheyedan mound"
                ],
                [
                    "mount sunflower"
                ],
                [
                    "black mountain"
                ],
                [
                    "driskill mountain"
                ],
                [
                    "mount katahdin"
                ],
                [
                    "backbone mountain"
                ],
                [
                    "mount greylock"
                ],
                [
                    "mount curwood"
                ],
                [
                    "eagle mountain"
                ],
                [
                    "woodall mountain"
                ],
                [
                    "taum sauk mountain"
                ],
                [
                    "granite peak"
                ],
                [
                    "johnson township"
                ],
                [
                    "boundary peak"
                ],
                [
                    "mount washington"
                ],
                [
                    "high point"
                ],
                [
                    "wheeler peak"
                ],
                [
                    "mount marcy"
                ],
                [
                    "mount mitchell"
                ],
                [
                    "white butte"
                ],
                [
                    "campbell hill"
                ],
                [
                    "black mesa"
                ],
                [
                    "mount hood"
                ],
                [
                    "mount davis"
                ],
                [
                    "jerimoth hill"
                ],
                [
                    "sassafras mountain"
                ],
                [
                    "harney peak"
                ],
                [
                    "clingmans dome"
                ],
                [
                    "guadalupe peak"
                ],
                [
                    "kings peak"
                ],
                [
                    "mount mansfield"
                ],
                [
                    "mount rogers"
                ],
                [
                    "mount rainier"
                ],
                [
                    "spruce knob"
                ],
                [
                    "timms hill"
                ],
                [
                    "gannett peak"
                ]
            ],
            "sql_ground": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY highlow.highest_elevation DESC LIMIT 1",
            "denotation_ground": [
                [
                    "mount davis"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return points of #1 ;return elevation of #2 ;return #2 where #3 is highest",
                "question": "what are the highest points of all the states ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT lake.lake_name FROM state, highlow, lake WHERE highlow.state_name = lake.state_name AND state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "lake.lake_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "lake.state_name"
                            ],
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points elevation",
                            "elevation"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow, lake WHERE highlow.state_name = lake.state_name AND state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY lake.lake_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow",
                            "lake"
                        ],
                        "JOIN": [
                            [
                                "highlow.state_name",
                                "lake.state_name"
                            ],
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "lake.lake_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT highlow.highest_point FROM state, highlow, lake WHERE highlow.state_name = lake.state_name AND state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY lake.lake_name DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_59",
            "db_id": "geo",
            "question": "what are the major cities in alabama ",
            "qdmr": "return cities ;return #1 in alabama ;return #2 that are major",
            "sql_gold": "select city.city_name from city where city.state_name = 'alabama' and city.population > 150000;",
            "denotation_gold": [
                [
                    "birmingham"
                ],
                [
                    "mobile"
                ],
                [
                    "montgomery"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'alabama'",
            "denotation_ground": [
                [
                    "birmingham"
                ],
                [
                    "mobile"
                ],
                [
                    "montgomery"
                ],
                [
                    "huntsville"
                ],
                [
                    "tuscaloosa"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in alabama ;return #2 that are major",
                "question": "what are the major cities in alabama ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'alabama'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "alabama"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in alabama",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM border_info, city WHERE city.state_name = border_info.state_name AND city.state_name = 'alabama'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "border_info",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "border_info.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "alabama"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are major",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM border_info, city WHERE city.state_name = border_info.state_name AND city.state_name = 'alabama'"
            }
        },
        {
            "example_id": "GEO_test_6",
            "db_id": "geo",
            "question": "how large is alaska ",
            "qdmr": "return alaska ;return size of #1",
            "sql_gold": "select state.area from state where state.state_name = 'alaska';",
            "denotation_gold": [
                [
                    591000.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )",
            "denotation_ground": [
                [
                    591000.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return alaska ;return size of #1",
                "question": "how large is alaska ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'alaska'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "alaska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'alaska' )"
            }
        },
        {
            "example_id": "GEO_test_60",
            "db_id": "geo",
            "question": "what are the major cities in alaska ",
            "qdmr": "return cities ;return #1 in alaska ;return major #2",
            "sql_gold": "select city.city_name from city where city.state_name = 'alaska' and city.population > 150000;",
            "denotation_gold": [
                [
                    "anchorage"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'alaska' )",
            "denotation_ground": [
                [
                    "anchorage"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in alaska ;return major #2",
                "question": "what are the major cities in alaska ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'alaska'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "alaska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in alaska",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'alaska' )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'alaska' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities major",
                            "major"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'alaska' )"
            }
        },
        {
            "example_id": "GEO_test_61",
            "db_id": "geo",
            "question": "what are the major cities in new york ",
            "qdmr": "return major cities ;return #1 in new york",
            "sql_gold": "select city.city_name from city where city.state_name = 'new york' and city.population > 150000;",
            "denotation_gold": [
                [
                    "new york"
                ],
                [
                    "buffalo"
                ],
                [
                    "rochester"
                ],
                [
                    "yonkers"
                ],
                [
                    "syracuse"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'new york'",
            "denotation_ground": [
                [
                    "new york"
                ],
                [
                    "buffalo"
                ],
                [
                    "rochester"
                ],
                [
                    "yonkers"
                ],
                [
                    "syracuse"
                ],
                [
                    "albany"
                ],
                [
                    "cheektowaga"
                ],
                [
                    "utica"
                ],
                [
                    "niagara falls"
                ],
                [
                    "new rochelle"
                ],
                [
                    "schenectady"
                ],
                [
                    "mount vernon"
                ],
                [
                    "irondequoit"
                ],
                [
                    "levittown"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return major cities ;return #1 in new york",
                "question": "what are the major cities in new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river, city WHERE river.traverse = city.state_name AND city.state_name = 'new york'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "major cities in new york",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river, city WHERE river.traverse = city.state_name AND city.state_name = 'new york'"
            }
        },
        {
            "example_id": "GEO_test_62",
            "db_id": "geo",
            "question": "what are the major cities in states through which the mississippi runs ",
            "qdmr": "return states ;return #1 through which the mississippi runs ;return major cities in #2",
            "sql_gold": "select city.city_name from city where city.population > 150000 and city.state_name in (select river.traverse from river where river.river_name = 'mississippi' and river.length > 750);",
            "denotation_gold": [
                [
                    "little rock"
                ],
                [
                    "chicago"
                ],
                [
                    "des moines"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "new orleans"
                ],
                [
                    "baton rouge"
                ],
                [
                    "shreveport"
                ],
                [
                    "metairie"
                ],
                [
                    "minneapolis"
                ],
                [
                    "st. paul"
                ],
                [
                    "jackson"
                ],
                [
                    "st. louis"
                ],
                [
                    "kansas city"
                ],
                [
                    "memphis"
                ],
                [
                    "nashville"
                ],
                [
                    "knoxville"
                ],
                [
                    "chattanooga"
                ],
                [
                    "milwaukee"
                ],
                [
                    "madison"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
            "denotation_ground": [
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "little rock"
                ],
                [
                    "north little rock"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "aurora"
                ],
                [
                    "champaign"
                ],
                [
                    "chicago"
                ],
                [
                    "cicero"
                ],
                [
                    "decatur"
                ],
                [
                    "elgin"
                ],
                [
                    "evanston"
                ],
                [
                    "joliet"
                ],
                [
                    "oak lawn"
                ],
                [
                    "peoria"
                ],
                [
                    "rockford"
                ],
                [
                    "skokie"
                ],
                [
                    "springfield"
                ],
                [
                    "waukegan"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "des moines"
                ],
                [
                    "dubuque"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "des moines"
                ],
                [
                    "dubuque"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "louisville"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "baton rouge"
                ],
                [
                    "kenner"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "metairie"
                ],
                [
                    "monroe"
                ],
                [
                    "new orleans"
                ],
                [
                    "shreveport"
                ],
                [
                    "bloomington"
                ],
                [
                    "duluth"
                ],
                [
                    "minneapolis"
                ],
                [
                    "rochester"
                ],
                [
                    "st. paul"
                ],
                [
                    "jackson"
                ],
                [
                    "jackson"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "columbia"
                ],
                [
                    "independence"
                ],
                [
                    "kansas city"
                ],
                [
                    "springfield"
                ],
                [
                    "st. joseph"
                ],
                [
                    "st. louis"
                ],
                [
                    "chattanooga"
                ],
                [
                    "knoxville"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 through which the mississippi runs ;return major cities in #2",
                "question": "what are the major cities in states through which the mississippi runs ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states through which the mississippi runs",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_63",
            "db_id": "geo",
            "question": "what are the major cities in the state of california ",
            "qdmr": "return cities ;return #1 in california ;return major #2",
            "sql_gold": "select city.city_name from city where city.population > 150000 and city.state_name = 'california';",
            "denotation_gold": [
                [
                    "los angeles"
                ],
                [
                    "san diego"
                ],
                [
                    "san francisco"
                ],
                [
                    "san jose"
                ],
                [
                    "long beach"
                ],
                [
                    "oakland"
                ],
                [
                    "sacramento"
                ],
                [
                    "anaheim"
                ],
                [
                    "fresno"
                ],
                [
                    "santa ana"
                ],
                [
                    "riverside"
                ],
                [
                    "huntington beach"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' )",
            "denotation_ground": [
                [
                    "glendale"
                ],
                [
                    "los angeles"
                ],
                [
                    "san diego"
                ],
                [
                    "san francisco"
                ],
                [
                    "san jose"
                ],
                [
                    "long beach"
                ],
                [
                    "oakland"
                ],
                [
                    "sacramento"
                ],
                [
                    "anaheim"
                ],
                [
                    "fresno"
                ],
                [
                    "santa ana"
                ],
                [
                    "riverside"
                ],
                [
                    "huntington beach"
                ],
                [
                    "stockton"
                ],
                [
                    "glendale"
                ],
                [
                    "fremont"
                ],
                [
                    "torrance"
                ],
                [
                    "garden grove"
                ],
                [
                    "san bernardino"
                ],
                [
                    "pasadena"
                ],
                [
                    "east los angeles"
                ],
                [
                    "oxnard"
                ],
                [
                    "modesto"
                ],
                [
                    "sunnyvale"
                ],
                [
                    "bakersfield"
                ],
                [
                    "concord"
                ],
                [
                    "berkeley"
                ],
                [
                    "fullerton"
                ],
                [
                    "inglewood"
                ],
                [
                    "hayward"
                ],
                [
                    "pomona"
                ],
                [
                    "orange"
                ],
                [
                    "ontario"
                ],
                [
                    "santa monica"
                ],
                [
                    "santa clara"
                ],
                [
                    "citrus heights"
                ],
                [
                    "norwalk"
                ],
                [
                    "burbank"
                ],
                [
                    "chula vista"
                ],
                [
                    "santa rosa"
                ],
                [
                    "downey"
                ],
                [
                    "costa mesa"
                ],
                [
                    "compton"
                ],
                [
                    "carson"
                ],
                [
                    "salinas"
                ],
                [
                    "west covina"
                ],
                [
                    "vallejo"
                ],
                [
                    "el monte"
                ],
                [
                    "daly city"
                ],
                [
                    "thousand oaks"
                ],
                [
                    "san mateo"
                ],
                [
                    "simi valley"
                ],
                [
                    "oceanside"
                ],
                [
                    "richmond"
                ],
                [
                    "lakewood"
                ],
                [
                    "santa barbara"
                ],
                [
                    "el cajon"
                ],
                [
                    "ventura"
                ],
                [
                    "westminster"
                ],
                [
                    "whittier"
                ],
                [
                    "south gate"
                ],
                [
                    "alhambra"
                ],
                [
                    "buena park"
                ],
                [
                    "san leandro"
                ],
                [
                    "alameda"
                ],
                [
                    "newport beach"
                ],
                [
                    "escondido"
                ],
                [
                    "irvine"
                ],
                [
                    "mountain view"
                ],
                [
                    "fairfield"
                ],
                [
                    "redondo beach"
                ],
                [
                    "scotts valley"
                ],
                [
                    "lakewood"
                ],
                [
                    "norwalk"
                ],
                [
                    "lakewood"
                ],
                [
                    "pasadena"
                ],
                [
                    "richmond"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in california ;return major #2",
                "question": "what are the major cities in the state of california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'california'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in california",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT mountain.country_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "mountain.country_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities major",
                            "major"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT mountain.country_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'california' )"
            }
        },
        {
            "example_id": "GEO_test_64",
            "db_id": "geo",
            "question": "what are the major cities in the usa ",
            "qdmr": "return cities ;return #1 in usa ;return major #2",
            "sql_gold": "select city.city_name from city where city.population > 150000;",
            "denotation_gold": [
                [
                    "birmingham"
                ],
                [
                    "mobile"
                ],
                [
                    "montgomery"
                ],
                [
                    "anchorage"
                ],
                [
                    "phoenix"
                ],
                [
                    "tucson"
                ],
                [
                    "mesa"
                ],
                [
                    "little rock"
                ],
                [
                    "los angeles"
                ],
                [
                    "san diego"
                ],
                [
                    "san francisco"
                ],
                [
                    "san jose"
                ],
                [
                    "long beach"
                ],
                [
                    "oakland"
                ],
                [
                    "sacramento"
                ],
                [
                    "anaheim"
                ],
                [
                    "fresno"
                ],
                [
                    "santa ana"
                ],
                [
                    "riverside"
                ],
                [
                    "huntington beach"
                ],
                [
                    "denver"
                ],
                [
                    "colorado springs"
                ],
                [
                    "aurora"
                ],
                [
                    "washington"
                ],
                [
                    "jacksonville"
                ],
                [
                    "miami"
                ],
                [
                    "tampa"
                ],
                [
                    "st. petersburg"
                ],
                [
                    "fort lauderdale"
                ],
                [
                    "atlanta"
                ],
                [
                    "columbus"
                ],
                [
                    "honolulu"
                ],
                [
                    "ewa"
                ],
                [
                    "chicago"
                ],
                [
                    "indianapolis"
                ],
                [
                    "fort wayne"
                ],
                [
                    "gary"
                ],
                [
                    "des moines"
                ],
                [
                    "wichita"
                ],
                [
                    "kansas city"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "new orleans"
                ],
                [
                    "baton rouge"
                ],
                [
                    "shreveport"
                ],
                [
                    "metairie"
                ],
                [
                    "baltimore"
                ],
                [
                    "boston"
                ],
                [
                    "worcester"
                ],
                [
                    "springfield"
                ],
                [
                    "detroit"
                ],
                [
                    "grand rapids"
                ],
                [
                    "warren"
                ],
                [
                    "flint"
                ],
                [
                    "minneapolis"
                ],
                [
                    "st. paul"
                ],
                [
                    "jackson"
                ],
                [
                    "st. louis"
                ],
                [
                    "kansas city"
                ],
                [
                    "omaha"
                ],
                [
                    "lincoln"
                ],
                [
                    "las vegas"
                ],
                [
                    "newark"
                ],
                [
                    "jersey city"
                ],
                [
                    "albuquerque"
                ],
                [
                    "new york"
                ],
                [
                    "buffalo"
                ],
                [
                    "rochester"
                ],
                [
                    "yonkers"
                ],
                [
                    "syracuse"
                ],
                [
                    "charlotte"
                ],
                [
                    "greensboro"
                ],
                [
                    "cleveland"
                ],
                [
                    "columbus"
                ],
                [
                    "cincinnati"
                ],
                [
                    "toledo"
                ],
                [
                    "akron"
                ],
                [
                    "dayton"
                ],
                [
                    "oklahoma city"
                ],
                [
                    "tulsa"
                ],
                [
                    "portland"
                ],
                [
                    "philadelphia"
                ],
                [
                    "pittsburgh"
                ],
                [
                    "providence"
                ],
                [
                    "memphis"
                ],
                [
                    "nashville"
                ],
                [
                    "knoxville"
                ],
                [
                    "chattanooga"
                ],
                [
                    "houston"
                ],
                [
                    "dallas"
                ],
                [
                    "san antonio"
                ],
                [
                    "el paso"
                ],
                [
                    "fort worth"
                ],
                [
                    "austin"
                ],
                [
                    "corpus christi"
                ],
                [
                    "lubbock"
                ],
                [
                    "arlington"
                ],
                [
                    "salt lake city"
                ],
                [
                    "norfolk"
                ],
                [
                    "virginia beach"
                ],
                [
                    "richmond"
                ],
                [
                    "arlington"
                ],
                [
                    "seattle"
                ],
                [
                    "spokane"
                ],
                [
                    "tacoma"
                ],
                [
                    "milwaukee"
                ],
                [
                    "madison"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
            "denotation_ground": [
                [
                    "birmingham"
                ],
                [
                    "mobile"
                ],
                [
                    "montgomery"
                ],
                [
                    "huntsville"
                ],
                [
                    "tuscaloosa"
                ],
                [
                    "anchorage"
                ],
                [
                    "phoenix"
                ],
                [
                    "tucson"
                ],
                [
                    "mesa"
                ],
                [
                    "tempe"
                ],
                [
                    "glendale"
                ],
                [
                    "scottsdale"
                ],
                [
                    "little rock"
                ],
                [
                    "fort smith"
                ],
                [
                    "north little rock"
                ],
                [
                    "los angeles"
                ],
                [
                    "san diego"
                ],
                [
                    "san francisco"
                ],
                [
                    "san jose"
                ],
                [
                    "long beach"
                ],
                [
                    "oakland"
                ],
                [
                    "sacramento"
                ],
                [
                    "anaheim"
                ],
                [
                    "fresno"
                ],
                [
                    "santa ana"
                ],
                [
                    "riverside"
                ],
                [
                    "huntington beach"
                ],
                [
                    "stockton"
                ],
                [
                    "glendale"
                ],
                [
                    "fremont"
                ],
                [
                    "torrance"
                ],
                [
                    "garden grove"
                ],
                [
                    "san bernardino"
                ],
                [
                    "pasadena"
                ],
                [
                    "east los angeles"
                ],
                [
                    "oxnard"
                ],
                [
                    "modesto"
                ],
                [
                    "sunnyvale"
                ],
                [
                    "bakersfield"
                ],
                [
                    "concord"
                ],
                [
                    "berkeley"
                ],
                [
                    "fullerton"
                ],
                [
                    "inglewood"
                ],
                [
                    "hayward"
                ],
                [
                    "pomona"
                ],
                [
                    "orange"
                ],
                [
                    "ontario"
                ],
                [
                    "santa monica"
                ],
                [
                    "santa clara"
                ],
                [
                    "citrus heights"
                ],
                [
                    "norwalk"
                ],
                [
                    "burbank"
                ],
                [
                    "chula vista"
                ],
                [
                    "santa rosa"
                ],
                [
                    "downey"
                ],
                [
                    "costa mesa"
                ],
                [
                    "compton"
                ],
                [
                    "carson"
                ],
                [
                    "salinas"
                ],
                [
                    "west covina"
                ],
                [
                    "vallejo"
                ],
                [
                    "el monte"
                ],
                [
                    "daly city"
                ],
                [
                    "thousand oaks"
                ],
                [
                    "san mateo"
                ],
                [
                    "simi valley"
                ],
                [
                    "oceanside"
                ],
                [
                    "richmond"
                ],
                [
                    "lakewood"
                ],
                [
                    "santa barbara"
                ],
                [
                    "el cajon"
                ],
                [
                    "ventura"
                ],
                [
                    "westminster"
                ],
                [
                    "whittier"
                ],
                [
                    "south gate"
                ],
                [
                    "alhambra"
                ],
                [
                    "buena park"
                ],
                [
                    "san leandro"
                ],
                [
                    "alameda"
                ],
                [
                    "newport beach"
                ],
                [
                    "escondido"
                ],
                [
                    "irvine"
                ],
                [
                    "mountain view"
                ],
                [
                    "fairfield"
                ],
                [
                    "redondo beach"
                ],
                [
                    "scotts valley"
                ],
                [
                    "denver"
                ],
                [
                    "colorado springs"
                ],
                [
                    "aurora"
                ],
                [
                    "lakewood"
                ],
                [
                    "pueblo"
                ],
                [
                    "arvada"
                ],
                [
                    "boulder"
                ],
                [
                    "fort collins"
                ],
                [
                    "bridgeport"
                ],
                [
                    "hartford"
                ],
                [
                    "new haven"
                ],
                [
                    "waterbury"
                ],
                [
                    "stamford"
                ],
                [
                    "norwalk"
                ],
                [
                    "new britain"
                ],
                [
                    "west hartford"
                ],
                [
                    "danbury"
                ],
                [
                    "greenwich"
                ],
                [
                    "bristol"
                ],
                [
                    "meriden"
                ],
                [
                    "wilmington"
                ],
                [
                    "washington"
                ],
                [
                    "jacksonville"
                ],
                [
                    "miami"
                ],
                [
                    "tampa"
                ],
                [
                    "st. petersburg"
                ],
                [
                    "fort lauderdale"
                ],
                [
                    "orlando"
                ],
                [
                    "hollywood"
                ],
                [
                    "miami beach"
                ],
                [
                    "clearwater"
                ],
                [
                    "tallahassee"
                ],
                [
                    "gainesville"
                ],
                [
                    "kendall"
                ],
                [
                    "west palm beach"
                ],
                [
                    "largo"
                ],
                [
                    "pensacola"
                ],
                [
                    "atlanta"
                ],
                [
                    "columbus"
                ],
                [
                    "savannah"
                ],
                [
                    "macon"
                ],
                [
                    "albany"
                ],
                [
                    "honolulu"
                ],
                [
                    "ewa"
                ],
                [
                    "koolaupoko"
                ],
                [
                    "boise"
                ],
                [
                    "chicago"
                ],
                [
                    "rockford"
                ],
                [
                    "peoria"
                ],
                [
                    "springfield"
                ],
                [
                    "decatur"
                ],
                [
                    "aurora"
                ],
                [
                    "joliet"
                ],
                [
                    "evanston"
                ],
                [
                    "waukegan"
                ],
                [
                    "arlington heights"
                ],
                [
                    "elgin"
                ],
                [
                    "cicero"
                ],
                [
                    "oak lawn"
                ],
                [
                    "skokie"
                ],
                [
                    "champaign"
                ],
                [
                    "indianapolis"
                ],
                [
                    "fort wayne"
                ],
                [
                    "gary"
                ],
                [
                    "evansville"
                ],
                [
                    "south bend"
                ],
                [
                    "hammond"
                ],
                [
                    "muncie"
                ],
                [
                    "anderson"
                ],
                [
                    "terre haute"
                ],
                [
                    "des moines"
                ],
                [
                    "cedar rapids"
                ],
                [
                    "davenport"
                ],
                [
                    "sioux city"
                ],
                [
                    "waterloo"
                ],
                [
                    "dubuque"
                ],
                [
                    "wichita"
                ],
                [
                    "kansas city"
                ],
                [
                    "topeka"
                ],
                [
                    "overland park"
                ],
                [
                    "louisville"
                ],
                [
                    "lexington"
                ],
                [
                    "new orleans"
                ],
                [
                    "baton rouge"
                ],
                [
                    "shreveport"
                ],
                [
                    "metairie"
                ],
                [
                    "lafayette"
                ],
                [
                    "lake charles"
                ],
                [
                    "kenner"
                ],
                [
                    "monroe"
                ],
                [
                    "portland"
                ],
                [
                    "baltimore"
                ],
                [
                    "silver spring"
                ],
                [
                    "dundalk"
                ],
                [
                    "bethesda"
                ],
                [
                    "boston"
                ],
                [
                    "worcester"
                ],
                [
                    "springfield"
                ],
                [
                    "new bedford"
                ],
                [
                    "cambridge"
                ],
                [
                    "brockton"
                ],
                [
                    "fall river"
                ],
                [
                    "lowell"
                ],
                [
                    "quincy"
                ],
                [
                    "newton"
                ],
                [
                    "lynn"
                ],
                [
                    "somerville"
                ],
                [
                    "framingham"
                ],
                [
                    "lawrence"
                ],
                [
                    "waltham"
                ],
                [
                    "medford"
                ],
                [
                    "detroit"
                ],
                [
                    "grand rapids"
                ],
                [
                    "warren"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in usa ;return major #2",
                "question": "what are the major cities in the usa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in usa",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT mountain.country_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "mountain.country_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities major",
                            "major"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT mountain.country_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM city )"
            }
        },
        {
            "example_id": "GEO_test_65",
            "db_id": "geo",
            "question": "what are the major cities in vermont ",
            "qdmr": "return cities ;return #1 in vermont ;return #2 that are major",
            "sql_gold": "select city.city_name from city where city.state_name = 'vermont' and city.population > 150000;",
            "denotation_gold": [],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'vermont'",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in vermont ;return #2 that are major",
                "question": "what are the major cities in vermont ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'vermont'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "vermont"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in vermont",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'vermont'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "vermont"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities that are major",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.state_name = 'vermont'"
            }
        },
        {
            "example_id": "GEO_test_66",
            "db_id": "geo",
            "question": "what are the major rivers in ohio ",
            "qdmr": "return rivers ;return #1 in ohio ;return #2 that are major",
            "sql_gold": "select river.river_name from river where river.traverse = 'ohio' and river.length > 750;",
            "denotation_gold": [
                [
                    "ohio"
                ],
                [
                    "wabash"
                ]
            ],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'ohio'",
            "denotation_ground": [
                [
                    "ohio"
                ],
                [
                    "wabash"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in ohio ;return #2 that are major",
                "question": "what are the major rivers in ohio ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'ohio'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in ohio",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'ohio'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers that are major",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'ohio'"
            }
        },
        {
            "example_id": "GEO_test_67",
            "db_id": "geo",
            "question": "what are the population densities of each us state ",
            "qdmr": "return us states ;return population densities of #1",
            "sql_gold": "select state.density from state;",
            "denotation_gold": [
                [
                    75.31914893617021
                ],
                [
                    0.6798646362098139
                ],
                [
                    23.842105263157894
                ],
                [
                    42.96992481203007
                ],
                [
                    149.81012658227849
                ],
                [
                    27.778846153846153
                ],
                [
                    618.9243027888447
                ],
                [
                    290.60665362035223
                ],
                [
                    580.0
                ],
                [
                    141.9375509728533
                ],
                [
                    92.75042444821732
                ],
                [
                    148.97233812393756
                ],
                [
                    11.373493975903614
                ],
                [
                    202.4866785079929
                ],
                [
                    151.65745856353593
                ],
                [
                    51.740674955595026
                ],
                [
                    28.724179829890645
                ],
                [
                    28.724179829890645
                ],
                [
                    88.17610062893081
                ],
                [
                    33.81932962573275
                ],
                [
                    403.1548757170172
                ],
                [
                    692.5398358281024
                ],
                [
                    158.32478632478632
                ],
                [
                    48.29383886255924
                ],
                [
                    52.83018867924528
                ],
                [
                    70.53084648493544
                ],
                [
                    5.351700680272109
                ],
                [
                    20.297542043984475
                ],
                [
                    7.244343891402715
                ],
                [
                    99.21327729281172
                ],
                [
                    945.8071144214717
                ],
                [
                    10.71546052631579
                ],
                [
                    357.5967413441955
                ],
                [
                    111.67647617239415
                ],
                [
                    9.231966053748232
                ],
                [
                    261.50121065375305
                ],
                [
                    43.24517512508935
                ],
                [
                    27.12391705211542
                ],
                [
                    261.8301403725611
                ],
                [
                    781.5181518151816
                ],
                [
                    100.3374795101726
                ],
                [
                    8.957505576015354
                ],
                [
                    108.94636924537257
                ],
                [
                    53.33068472716233
                ],
                [
                    17.208480565371026
                ],
                [
                    53.203661327231124
                ],
                [
                    131.1776251226693
                ],
                [
                    60.36484245439469
                ],
                [
                    80.57851239669421
                ],
                [
                    83.69989136822609
                ],
                [
                    4.8007545317915525
                ]
            ],
            "sql_ground": "SELECT state.density FROM state WHERE state.country_name IN ( SELECT state.country_name FROM state )",
            "denotation_ground": [
                [
                    75.31914893617021
                ],
                [
                    0.6798646362098139
                ],
                [
                    23.842105263157894
                ],
                [
                    42.96992481203007
                ],
                [
                    149.81012658227849
                ],
                [
                    27.778846153846153
                ],
                [
                    618.9243027888447
                ],
                [
                    290.60665362035223
                ],
                [
                    580.0
                ],
                [
                    141.9375509728533
                ],
                [
                    92.75042444821732
                ],
                [
                    148.97233812393756
                ],
                [
                    11.373493975903614
                ],
                [
                    202.4866785079929
                ],
                [
                    151.65745856353593
                ],
                [
                    51.740674955595026
                ],
                [
                    28.724179829890645
                ],
                [
                    28.724179829890645
                ],
                [
                    88.17610062893081
                ],
                [
                    33.81932962573275
                ],
                [
                    403.1548757170172
                ],
                [
                    692.5398358281024
                ],
                [
                    158.32478632478632
                ],
                [
                    48.29383886255924
                ],
                [
                    52.83018867924528
                ],
                [
                    70.53084648493544
                ],
                [
                    5.351700680272109
                ],
                [
                    20.297542043984475
                ],
                [
                    7.244343891402715
                ],
                [
                    99.21327729281172
                ],
                [
                    945.8071144214717
                ],
                [
                    10.71546052631579
                ],
                [
                    357.5967413441955
                ],
                [
                    111.67647617239415
                ],
                [
                    9.231966053748232
                ],
                [
                    261.50121065375305
                ],
                [
                    43.24517512508935
                ],
                [
                    27.12391705211542
                ],
                [
                    261.8301403725611
                ],
                [
                    781.5181518151816
                ],
                [
                    100.3374795101726
                ],
                [
                    8.957505576015354
                ],
                [
                    108.94636924537257
                ],
                [
                    53.33068472716233
                ],
                [
                    17.208480565371026
                ],
                [
                    53.203661327231124
                ],
                [
                    131.1776251226693
                ],
                [
                    60.36484245439469
                ],
                [
                    80.57851239669421
                ],
                [
                    83.69989136822609
                ],
                [
                    4.8007545317915525
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return us states ;return population densities of #1",
                "question": "what are the population densities of each us state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.country_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.country_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "us states",
                            "us states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.country_name IN ( SELECT state.country_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.country_name",
                                "IN",
                                "( SELECT state.country_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "us states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.density FROM state WHERE state.country_name IN ( SELECT state.country_name FROM state )"
            }
        },
        {
            "example_id": "GEO_test_68",
            "db_id": "geo",
            "question": "what are the population of mississippi ",
            "qdmr": "return populations ;return #1 of mississippi",
            "sql_gold": "select state.population from state where state.state_name = 'mississippi';",
            "denotation_gold": [
                [
                    2520000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state WHERE state.state_name = 'mississippi'",
            "denotation_ground": [
                [
                    2520000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return populations ;return #1 of mississippi",
                "question": "what are the population of mississippi ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.population FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "populations of mississippi",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.population FROM state WHERE state.state_name = 'mississippi'"
            }
        },
        {
            "example_id": "GEO_test_69",
            "db_id": "geo",
            "question": "what are the populations of states through which the mississippi river run ",
            "qdmr": "return the mississippi river ;return states run through of #1 ;return the populations of #2",
            "sql_gold": "select state.population from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi');",
            "denotation_gold": [
                [
                    2286000
                ],
                [
                    11400000
                ],
                [
                    2913000
                ],
                [
                    2364000
                ],
                [
                    4206000
                ],
                [
                    4076000
                ],
                [
                    2520000
                ],
                [
                    4916000
                ],
                [
                    4591000
                ],
                [
                    4700000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state, river WHERE river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' ) )",
            "denotation_ground": [
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    2913000
                ],
                [
                    2913000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4076000
                ],
                [
                    2520000
                ],
                [
                    2520000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4700000
                ],
                [
                    4700000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return the mississippi river ;return states run through of #1 ;return the populations of #2",
                "question": "what are the populations of states through which the mississippi river run ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'mississippi'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river states run through",
                            "states run through"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, river WHERE river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' ) )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "river.traverse",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states run through populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, river WHERE river.traverse = state.state_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE river.traverse = state.state_name AND river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'mississippi' ) )"
            }
        },
        {
            "example_id": "GEO_test_7",
            "db_id": "geo",
            "question": "how large is texas ",
            "qdmr": "return texas ;return size of #1",
            "sql_gold": "select state.area from state where state.state_name = 'texas';",
            "denotation_gold": [
                [
                    266807.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
            "denotation_ground": [
                [
                    266807.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return texas ;return size of #1",
                "question": "how large is texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state size",
                            "size"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_70",
            "db_id": "geo",
            "question": "what are the populations of states through which the mississippi runs ",
            "qdmr": "return states ;return #1 through which the mississippi runs ;return populations of #2",
            "sql_gold": "select state.population from state where state.state_name in (select river.traverse from river where river.river_name = 'mississippi');",
            "denotation_gold": [
                [
                    2286000
                ],
                [
                    11400000
                ],
                [
                    2913000
                ],
                [
                    2364000
                ],
                [
                    4206000
                ],
                [
                    4076000
                ],
                [
                    2520000
                ],
                [
                    4916000
                ],
                [
                    4591000
                ],
                [
                    4700000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
            "denotation_ground": [
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    11400000
                ],
                [
                    2913000
                ],
                [
                    2913000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    2364000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4206000
                ],
                [
                    4076000
                ],
                [
                    2520000
                ],
                [
                    2520000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4916000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4591000
                ],
                [
                    4700000
                ],
                [
                    4700000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 through which the mississippi runs ;return populations of #2",
                "question": "what are the populations of states through which the mississippi runs ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "mississippi"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states through which the mississippi runs",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND river.river_name = 'mississippi' )"
            }
        },
        {
            "example_id": "GEO_test_71",
            "db_id": "geo",
            "question": "what are the populations of states which border texas ",
            "qdmr": "return texas ;return states which border #1 ;return populations of #2",
            "sql_gold": "select state.population from state,border_info where border_info.border=state.state_name and border_info.state_name = 'texas';",
            "denotation_gold": [
                [
                    3025000
                ],
                [
                    2286000
                ],
                [
                    4206000
                ],
                [
                    1303000
                ]
            ],
            "sql_ground": "SELECT state.population FROM state, border_info WHERE border_info.border = state.state_name AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )",
            "denotation_ground": [
                [
                    1303000
                ],
                [
                    4206000
                ],
                [
                    3025000
                ],
                [
                    3025000
                ],
                [
                    1303000
                ],
                [
                    3025000
                ],
                [
                    2286000
                ],
                [
                    4206000
                ],
                [
                    2286000
                ],
                [
                    2286000
                ],
                [
                    3025000
                ],
                [
                    3025000
                ],
                [
                    2286000
                ],
                [
                    1303000
                ],
                [
                    2286000
                ],
                [
                    3025000
                ],
                [
                    2286000
                ],
                [
                    4206000
                ],
                [
                    1303000
                ],
                [
                    1303000
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return texas ;return states which border #1 ;return populations of #2",
                "question": "what are the populations of states which border texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas'",
                        "op": "select",
                        "SELECT": [
                            "border_info.state_name"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info",
                            "border info"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "border_info.border"
                        ],
                        "FROM": [
                            "border_info"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "border_info.state_name",
                                "IN",
                                "( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "border info states which border",
                            "states which border"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, border_info WHERE border_info.border = state.state_name AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "border_info"
                        ],
                        "JOIN": [
                            [
                                "border_info.border",
                                "state.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "border_info.border",
                                "IN",
                                "( SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states which border populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, border_info WHERE border_info.border = state.state_name AND border_info.border IN ( SELECT border_info.border FROM border_info WHERE border_info.state_name IN ( SELECT border_info.state_name FROM border_info WHERE border_info.state_name = 'texas' ) )"
            }
        },
        {
            "example_id": "GEO_test_72",
            "db_id": "geo",
            "question": "what are the populations of the major cities of texas ",
            "qdmr": "return major cities ;return #1 in texas ;return populations of #2",
            "sql_gold": "select city.population from city where city.state_name = 'texas' and city.population > 150000;",
            "denotation_gold": [
                [
                    1595138
                ],
                [
                    904078
                ],
                [
                    785880
                ],
                [
                    425259
                ],
                [
                    385164
                ],
                [
                    345496
                ],
                [
                    231999
                ],
                [
                    173979
                ],
                [
                    160123
                ]
            ],
            "sql_ground": "SELECT state.population FROM state, city WHERE city.city_name = state.capital AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'texas' )",
            "denotation_ground": [
                [
                    14229000
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return major cities ;return #1 in texas ;return populations of #2",
                "question": "what are the populations of the major cities of texas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "major cities",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "major cities in texas",
                            "major cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT lake.area FROM lake, city WHERE city.state_name = lake.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "lake.area"
                        ],
                        "FROM": [
                            "lake",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.state_name",
                                "lake.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city WHERE city.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "major cities populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT lake.area FROM lake, city WHERE city.state_name = lake.state_name AND city.city_name IN ( SELECT city.city_name FROM city WHERE city.state_name = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_73",
            "db_id": "geo",
            "question": "what are the rivers in alaska ",
            "qdmr": "return rivers ;return #1 in alaska",
            "sql_gold": "select river.river_name from river where river.traverse = 'alaska';",
            "denotation_gold": [],
            "sql_ground": "SELECT river.river_name FROM river WHERE river.traverse = 'alaska'",
            "denotation_ground": [],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return rivers ;return #1 in alaska",
                "question": "what are the rivers in alaska ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.traverse = 'alaska'",
                        "op": "filter",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.traverse",
                                "=",
                                "alaska"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "rivers in alaska",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT river.river_name FROM river WHERE river.traverse = 'alaska'"
            }
        },
        {
            "example_id": "GEO_test_74",
            "db_id": "geo",
            "question": "what city has the most people ",
            "qdmr": "return cities ;return people in #1 ;return number of #2 for each #1 ;return #1 where #3 is highest",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return people in #1 ;return people in #1 ;return #1 where #3 is highest",
                "question": "what city has the most people ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities people",
                            "people"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_75",
            "db_id": "geo",
            "question": "what city in the united states has the highest population density ",
            "qdmr": "return cities ;return #1 in the united states ;return population density of #2 ;return #2 where #3 is highest",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities ;return #1 in the united states ;return population density of #2 ;return #2 where #3 is highest",
                "question": "what city in the united states has the highest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in the united states",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.population FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city )",
                        "op": "project",
                        "SELECT": [
                            "city.population"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities population density",
                            "population density"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM city )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in the united states",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.city_name IN ( SELECT city.city_name FROM city ) ORDER BY city.population DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_76",
            "db_id": "geo",
            "question": "what is capital of the state with the lowest point ",
            "qdmr": "return states ;return points of #1 ;return height of #2 ;return #1 where #3 is lowest ;return capital of #4",
            "sql_gold": "select state.capital from state,highlow where state.state_name=highlow.state_name and highlow.lowest_elevation = (select min (highlow.lowest_elevation) from highlow);",
            "denotation_gold": [
                [
                    "baton rouge"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.lowest_elevation ASC LIMIT 1 )",
            "denotation_ground": [
                [
                    "baton rouge"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return points of #1 ;return height of #2 ;return #1 where #3 is lowest ;return capital of #4",
                "question": "what is capital of the state with the lowest point ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "highlow.highest_point"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states points",
                            "points"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT highlow.lowest_elevation FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "highlow.lowest_elevation"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "points height",
                            "height"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.lowest_elevation ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "highlow.highest_point",
                                "IN",
                                "( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "highlow.lowest_elevation"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "5": {
                        "SQL": "SELECT state.capital FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.lowest_elevation ASC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state",
                            "highlow"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "highlow.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.lowest_elevation ASC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "4"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state, highlow WHERE state.state_name = highlow.state_name AND highlow.highest_point IN ( SELECT highlow.highest_point FROM state, highlow WHERE state.state_name = highlow.state_name AND state.state_name IN ( SELECT state.state_name FROM state ) ) ORDER BY highlow.lowest_elevation ASC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_77",
            "db_id": "geo",
            "question": "what is the area of florida ",
            "qdmr": "return florida ;return the area of #1",
            "sql_gold": "select state.area from state where state.state_name = 'florida';",
            "denotation_gold": [
                [
                    68664.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )",
            "denotation_ground": [
                [
                    68664.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return florida ;return the area of #1",
                "question": "what is the area of florida ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'florida'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )"
            }
        },
        {
            "example_id": "GEO_test_78",
            "db_id": "geo",
            "question": "what is the area of ohio ",
            "qdmr": "return ohio ;return the area of #1",
            "sql_gold": "select state.area from state where state.state_name = 'ohio';",
            "denotation_gold": [
                [
                    41300.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'ohio' )",
            "denotation_ground": [
                [
                    41300.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return ohio ;return the area of #1",
                "question": "what is the area of ohio ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'ohio'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'ohio' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'ohio' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'ohio' )"
            }
        },
        {
            "example_id": "GEO_test_79",
            "db_id": "geo",
            "question": "what is the area of the texas state ",
            "qdmr": "return states ;return #1 that is texas ;return area of #2",
            "sql_gold": "select state.area from state where state.state_name = 'texas';",
            "denotation_gold": [
                [
                    266807.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
            "denotation_ground": [
                [
                    266807.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that is texas ;return area of #2",
                "question": "what is the area of the texas state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'texas'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "texas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that is texas",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'texas' )"
            }
        },
        {
            "example_id": "GEO_test_8",
            "db_id": "geo",
            "question": "how long is the colorado river ",
            "qdmr": "return colorado river ;return how long is #1",
            "sql_gold": "select river.length from river where river.river_name = 'colorado';",
            "denotation_gold": [
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
            "denotation_ground": [
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ],
                [
                    2333
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado river ;return how long is #1",
                "question": "how long is the colorado river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river how long is",
                            "how long is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_80",
            "db_id": "geo",
            "question": "what is the area of wisconsin ",
            "qdmr": "return area ;return #1 of wisconsin",
            "sql_gold": "select state.area from state where state.state_name = 'wisconsin';",
            "denotation_gold": [
                [
                    56153.0
                ]
            ],
            "sql_ground": "SELECT state.area FROM state WHERE state.state_name = 'wisconsin'",
            "denotation_ground": [
                [
                    56153.0
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return area ;return #1 of wisconsin",
                "question": "what is the area of wisconsin ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.area FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "area",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.area FROM state WHERE state.state_name = 'wisconsin'",
                        "op": "filter",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "wisconsin"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "area of wisconsin",
                            "area"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.area FROM state WHERE state.state_name = 'wisconsin'"
            }
        },
        {
            "example_id": "GEO_test_81",
            "db_id": "geo",
            "question": "what is the biggest american city in a state with a river ",
            "qdmr": "return states ;return #1 with a river ;return american cities in #2 ;return #3 that is the biggest",
            "sql_gold": "select distinct city.city_name from city,river where city.state_name=river.traverse and city.population = (select max(city.population) from city,river where city.state_name=river.traverse);",
            "denotation_gold": [
                [
                    "new york"
                ]
            ],
            "sql_ground": "SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND city.state_name IN ( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ) AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ORDER BY state.capital ASC LIMIT 1",
            "denotation_ground": [
                [
                    "new york"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return #1 with a river; return american cities in #2; return american cities in states that is the biggest of #3; return #3 where #4 is lowest",
                "question": "what is the biggest american city in a state with a river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.country_name",
                                "river.country_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states with a river",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name )",
                        "op": "project",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.country_name",
                                "river.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states american cities",
                            "american cities"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.capital FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND city.state_name IN ( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.country_name",
                                "river.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "american cities american cities in states that is the biggest",
                            "american cities in states that is the biggest"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    },
                    "5": {
                        "SQL": "SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND city.state_name IN ( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ) AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ORDER BY state.capital ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.country_name",
                                "river.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.state_name",
                                "IN",
                                "( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.capital"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states american cities",
                            "american cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND city.state_name IN ( SELECT city.state_name FROM state, river, city WHERE state.state_name = city.state_name AND state.country_name = river.country_name AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ) AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.country_name = river.country_name ) ORDER BY state.capital ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_82",
            "db_id": "geo",
            "question": "what is the biggest capital city in the us ",
            "qdmr": "return capital cities ;return #1 in the us ;return biggest #2",
            "sql_gold": "select city.city_name from city where city.population = (select max(city.population) from city,state where city.city_name=state.capital);",
            "denotation_gold": [
                [
                    "phoenix"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )",
            "denotation_ground": [
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "birmingham"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "mobile"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "montgomery"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ],
                [
                    "huntsville"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return capital cities ;return #1 in the us ;return biggest #2",
                "question": "what is the biggest capital city in the us ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities in the us",
                            "capital cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.population FROM state, mountain, city WHERE city.city_name = state.capital AND city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state",
                            "mountain",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "city.city_name",
                                "state.capital"
                            ],
                            [
                                "city.country_name",
                                "mountain.country_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "IN",
                                "( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capital cities biggest",
                            "biggest"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.population FROM state, mountain, city WHERE city.city_name = state.capital AND city.country_name = mountain.country_name AND city.city_name IN ( SELECT city.city_name FROM mountain, city WHERE city.country_name = mountain.country_name )"
            }
        },
        {
            "example_id": "GEO_test_83",
            "db_id": "geo",
            "question": "what is the biggest city in kansas ",
            "qdmr": "return cities ;return #1 in kansas ;return biggest #2",
            "sql_gold": "select city.city_name from city where city.state_name = 'kansas' and city.population = (select max(city.population) from city where city.state_name = 'kansas');",
            "denotation_gold": [
                [
                    "wichita"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'kansas' ORDER BY city.city_name DESC LIMIT 1",
            "denotation_ground": [
                [
                    "wichita"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in kansas; return biggest cities; return #2 where #3 is highest",
                "question": "what is the biggest city in kansas ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'kansas'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "kansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in kansas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "biggest cities",
                            "biggest cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'kansas' ORDER BY city.city_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "kansas"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.city_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in kansas",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.state_name = 'kansas' ORDER BY city.city_name DESC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_84",
            "db_id": "geo",
            "question": "what is the biggest city in louisiana ",
            "qdmr": "return cities ;return #1 in louisiana ;return the biggest #2",
            "sql_gold": "select city.city_name from city where city.state_name = 'louisiana' and city.population = (select max(city.population) from city where city.state_name = 'louisiana');",
            "denotation_gold": [
                [
                    "new orleans"
                ]
            ],
            "sql_ground": "SELECT city.city_name FROM city WHERE city.state_name = 'louisiana' ORDER BY city.country_name ASC LIMIT 1",
            "denotation_ground": [
                [
                    "new orleans"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return cities; return #1 in louisiana; return the biggest cities; return #2 where #3 is lowest",
                "question": "what is the biggest city in louisiana ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT city.city_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'louisiana'",
                        "op": "filter",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "louisiana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in louisiana",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT city.country_name FROM city",
                        "op": "select",
                        "SELECT": [
                            "city.country_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "the biggest cities",
                            "the biggest cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM city WHERE city.state_name = 'louisiana' ORDER BY city.country_name ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "city"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "city.state_name",
                                "=",
                                "louisiana"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "city.country_name"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "cities in louisiana",
                            "cities"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM city WHERE city.state_name = 'louisiana' ORDER BY city.country_name ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_85",
            "db_id": "geo",
            "question": "what is the capital of california ",
            "qdmr": "return california ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'california';",
            "denotation_gold": [
                [
                    "sacramento"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'california' )",
            "denotation_ground": [
                [
                    "sacramento"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return california ;return capital of #1",
                "question": "what is the capital of california ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'california'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "california"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'california' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'california' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'california' )"
            }
        },
        {
            "example_id": "GEO_test_86",
            "db_id": "geo",
            "question": "what is the capital of colorado ",
            "qdmr": "return colorado ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'colorado';",
            "denotation_gold": [
                [
                    "denver"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )",
            "denotation_ground": [
                [
                    "denver"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return colorado ;return capital of #1",
                "question": "what is the capital of colorado ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'colorado'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "colorado"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'colorado' )"
            }
        },
        {
            "example_id": "GEO_test_87",
            "db_id": "geo",
            "question": "what is the capital of illinois ",
            "qdmr": "return illinois ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'illinois';",
            "denotation_gold": [
                [
                    "springfield"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'illinois' )",
            "denotation_ground": [
                [
                    "springfield"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return illinois ;return capital of #1",
                "question": "what is the capital of illinois ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'illinois'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "illinois"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'illinois' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'illinois' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'illinois' )"
            }
        },
        {
            "example_id": "GEO_test_88",
            "db_id": "geo",
            "question": "what is the capital of iowa ",
            "qdmr": "return capitals ;return #1 of iowa",
            "sql_gold": "select state.capital from state where state.state_name = 'iowa';",
            "denotation_gold": [
                [
                    "des moines"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name = 'iowa'",
            "denotation_ground": [
                [
                    "des moines"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return capitals ;return #1 of iowa",
                "question": "what is the capital of iowa ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.capital FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name = 'iowa'",
                        "op": "filter",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "iowa"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals of iowa",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name = 'iowa'"
            }
        },
        {
            "example_id": "GEO_test_89",
            "db_id": "geo",
            "question": "what is the capital of massachusetts ",
            "qdmr": "return massachusetts ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'massachusetts';",
            "denotation_gold": [
                [
                    "boston"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'massachusetts' )",
            "denotation_ground": [
                [
                    "boston"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return massachusetts ;return capital of #1",
                "question": "what is the capital of massachusetts ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'massachusetts'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "massachusetts"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'massachusetts' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'massachusetts' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'massachusetts' )"
            }
        },
        {
            "example_id": "GEO_test_9",
            "db_id": "geo",
            "question": "how long is the delaware river ",
            "qdmr": "return delaware river ;return how long is #1",
            "sql_gold": "select river.length from river where river.river_name = 'delaware';",
            "denotation_gold": [
                [
                    451
                ],
                [
                    451
                ],
                [
                    451
                ],
                [
                    451
                ]
            ],
            "sql_ground": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )",
            "denotation_ground": [
                [
                    451
                ],
                [
                    451
                ],
                [
                    451
                ],
                [
                    451
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return delaware river ;return how long is #1",
                "question": "how long is the delaware river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT river.river_name FROM river WHERE river.river_name = 'delaware'",
                        "op": "select",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "=",
                                "delaware"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river",
                            "river"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )",
                        "op": "project",
                        "SELECT": [
                            "river.length"
                        ],
                        "FROM": [
                            "river"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "river.river_name",
                                "IN",
                                "( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "river how long is",
                            "how long is"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT river.length FROM river WHERE river.river_name IN ( SELECT river.river_name FROM river WHERE river.river_name = 'delaware' )"
            }
        },
        {
            "example_id": "GEO_test_90",
            "db_id": "geo",
            "question": "what is the capital of new jersey ",
            "qdmr": "return new jersey ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'new jersey';",
            "denotation_gold": [
                [
                    "trenton"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new jersey' )",
            "denotation_ground": [
                [
                    "trenton"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new jersey ;return capital of #1",
                "question": "what is the capital of new jersey ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new jersey'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new jersey"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new jersey' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'new jersey' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new jersey' )"
            }
        },
        {
            "example_id": "GEO_test_91",
            "db_id": "geo",
            "question": "what is the capital of new york ",
            "qdmr": "return new york ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'new york';",
            "denotation_gold": [
                [
                    "albany"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new york' )",
            "denotation_ground": [
                [
                    "albany"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return new york ;return capital of #1",
                "question": "what is the capital of new york ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'new york'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "new york"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new york' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'new york' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'new york' )"
            }
        },
        {
            "example_id": "GEO_test_92",
            "db_id": "geo",
            "question": "what is the capital of north dakota ",
            "qdmr": "return north dakota ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'north dakota';",
            "denotation_gold": [
                [
                    "bismarck"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'north dakota' )",
            "denotation_ground": [
                [
                    "bismarck"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return north dakota ;return capital of #1",
                "question": "what is the capital of north dakota ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'north dakota'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "north dakota"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'north dakota' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'north dakota' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'north dakota' )"
            }
        },
        {
            "example_id": "GEO_test_93",
            "db_id": "geo",
            "question": "what is the capital of ohio ",
            "qdmr": "return capitals ;return #1 of ohio",
            "sql_gold": "select state.capital from state where state.state_name = 'ohio';",
            "denotation_gold": [
                [
                    "columbus"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name = 'ohio'",
            "denotation_ground": [
                [
                    "columbus"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return capitals ;return #1 of ohio",
                "question": "what is the capital of ohio ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.capital FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name = 'ohio'",
                        "op": "filter",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "ohio"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals of ohio",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name = 'ohio'"
            }
        },
        {
            "example_id": "GEO_test_94",
            "db_id": "geo",
            "question": "what is the capital of states that have cities named durham ",
            "qdmr": "return states ;return #1 that have cities named durham ;return capitals of #2",
            "sql_gold": "select state.capital from state ,city where state.state_name=city.state_name and city.city_name = 'durham';",
            "denotation_gold": [
                [
                    "raleigh"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name LIKE '%durham%' )",
            "denotation_ground": [
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ],
                [
                    "raleigh"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return #1 that have cities named durham ;return capitals of #2",
                "question": "what is the capital of states that have cities named durham ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name LIKE '%durham%'",
                        "op": "filter",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "city.city_name",
                                "LIKE",
                                "durham"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states that have cities named durham",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "3": {
                        "SQL": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name LIKE '%durham%' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name LIKE '%durham%' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state, city WHERE state.state_name = city.state_name AND state.state_name IN ( SELECT state.state_name FROM state, city WHERE state.state_name = city.state_name AND city.city_name LIKE '%durham%' )"
            }
        },
        {
            "example_id": "GEO_test_95",
            "db_id": "geo",
            "question": "what is the capital of the florida state ",
            "qdmr": "return florida state ;return capital of #1",
            "sql_gold": "select state.capital from state where state.state_name = 'florida';",
            "denotation_gold": [
                [
                    "tallahassee"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )",
            "denotation_ground": [
                [
                    "tallahassee"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return florida state ;return capital of #1",
                "question": "what is the capital of the florida state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name = 'florida'",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "=",
                                "florida"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state",
                            "state"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "state capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name = 'florida' )"
            }
        },
        {
            "example_id": "GEO_test_96",
            "db_id": "geo",
            "question": "what is the capital of the smallest state ",
            "qdmr": "return states ;return capitals of #1 ;return smallest of #2",
            "sql_gold": "select state.capital from state where state.area = (select min (state.area) from state);",
            "denotation_gold": [
                [
                    "washington"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
            "denotation_ground": [
                [
                    "washington"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states; return capitals of #1; return smallest of capitals of states of #2; return #2 where #3 is lowest",
                "question": "what is the capital of the smallest state ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.area FROM state WHERE state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )",
                        "op": "project",
                        "SELECT": [
                            "state.area"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "capitals smallest of capitals of states",
                            "smallest of capitals of states"
                        ],
                        "distinct": false,
                        "project ref": "2"
                    },
                    "4": {
                        "SQL": "SELECT state.capital FROM state WHERE state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.capital",
                                "IN",
                                "( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) )"
                            ],
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.area"
                        ],
                        "ORDER": [
                            "ASC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capitals",
                            "capitals"
                        ],
                        "distinct": false,
                        "project ref": null
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.capital IN ( SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ) AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.area ASC LIMIT 1"
            }
        },
        {
            "example_id": "GEO_test_97",
            "db_id": "geo",
            "question": "what is the capital of the state with the largest population density ",
            "qdmr": "return states ;return population densities of #1 ;return #1 where #2 is the highest ;return the capital of #3",
            "sql_gold": "select distinct state.capital from state where state.density = (select max(state.density) from state);",
            "denotation_gold": [
                [
                    "trenton"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "trenton"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return population densities of #1 ;return #1 where #2 is the highest ;return the capital of #3",
                "question": "what is the capital of the state with the largest population density ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.density FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.density"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states population densities",
                            "population densities"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.density"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.density DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_98",
            "db_id": "geo",
            "question": "what is the capital of the state with the largest population ",
            "qdmr": "return states ;return populations of #1 ;return #1 where #2 is largest ;return capital of #3",
            "sql_gold": "select distinct state.capital from state where state.population = (select max(state.population) from state);",
            "denotation_gold": [
                [
                    "sacramento"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "sacramento"
                ]
            ],
            "correct_denotation": true,
            "grounding": {
                "qdmr_grounding": "return states ;return populations of #1 ;return #1 where #2 is largest ;return capital of #3",
                "question": "what is the capital of the state with the largest population ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT state.population FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "state.population"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states populations",
                            "populations"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "state.population"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "state.capital"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT state.capital FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state WHERE state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY state.population DESC LIMIT 1 )"
            }
        },
        {
            "example_id": "GEO_test_99",
            "db_id": "geo",
            "question": "what is the capital of the state with the longest river ",
            "qdmr": "return states ;return rivers of #1 ;return #1 where #2 is longest ;return capital of #3",
            "sql_gold": "select state.capital from state where state.state_name in (select river.traverse from river where river.length = (select max(river.length) from river));",
            "denotation_gold": [
                [
                    "des moines"
                ],
                [
                    "jefferson city"
                ],
                [
                    "helena"
                ],
                [
                    "lincoln"
                ],
                [
                    "bismarck"
                ],
                [
                    "pierre"
                ]
            ],
            "sql_ground": "SELECT state.capital FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY river.river_name DESC LIMIT 1 )",
            "denotation_ground": [
                [
                    "helena"
                ],
                [
                    "helena"
                ],
                [
                    "helena"
                ],
                [
                    "helena"
                ],
                [
                    "helena"
                ],
                [
                    "helena"
                ]
            ],
            "correct_denotation": false,
            "grounding": {
                "qdmr_grounding": "return states ;return rivers of #1 ;return #1 where #2 is longest ;return capital of #3",
                "question": "what is the capital of the state with the longest river ",
                "grounded_steps": {
                    "1": {
                        "SQL": "SELECT state.state_name FROM state",
                        "op": "select",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state"
                        ],
                        "JOIN": [],
                        "WHERE": [],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "2": {
                        "SQL": "SELECT river.river_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state )",
                        "op": "project",
                        "SELECT": [
                            "river.river_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states rivers",
                            "rivers"
                        ],
                        "distinct": false,
                        "project ref": "1"
                    },
                    "3": {
                        "SQL": "SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY river.river_name DESC LIMIT 1",
                        "op": "superlative",
                        "SELECT": [
                            "state.state_name"
                        ],
                        "FROM": [
                            "state",
                            "river"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [
                            "river.river_name"
                        ],
                        "ORDER": [
                            "DESC LIMIT 1"
                        ],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states",
                            "states"
                        ],
                        "distinct": false,
                        "project ref": null
                    },
                    "4": {
                        "SQL": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY river.river_name DESC LIMIT 1 )",
                        "op": "project",
                        "SELECT": [
                            "city.city_name"
                        ],
                        "FROM": [
                            "state",
                            "river",
                            "city"
                        ],
                        "JOIN": [
                            [
                                "state.state_name",
                                "city.state_name"
                            ],
                            [
                                "state.state_name",
                                "river.traverse"
                            ]
                        ],
                        "WHERE": [
                            [
                                "state.state_name",
                                "IN",
                                "( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY river.river_name DESC LIMIT 1 )"
                            ]
                        ],
                        "AGGREGATE": [],
                        "GROUP": [],
                        "HAVING": [],
                        "ORDER BY": [],
                        "ORDER": [],
                        "UNION": [],
                        "DISCARD": [],
                        "INTERSECT": [],
                        "type": [
                            "states capital",
                            "capital"
                        ],
                        "distinct": false,
                        "project ref": "3"
                    }
                },
                "grounded_sql": "SELECT city.city_name FROM state, river, city WHERE state.state_name = city.state_name AND state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state, river WHERE state.state_name = river.traverse AND state.state_name IN ( SELECT state.state_name FROM state ) ORDER BY river.river_name DESC LIMIT 1 )"
            }
        }
    ]
}